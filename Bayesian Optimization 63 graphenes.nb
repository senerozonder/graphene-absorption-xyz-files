(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    715560,      14406]
NotebookOptionsPosition[    707771,      14266]
NotebookOutlinePosition[    708211,      14283]
CellTagsIndexPosition[    708168,      14280]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellLabel->"In[39]:=",ExpressionUUID->"ebc12bde-be16-4fd2-98de-e6bdd672203b"],

Cell[CellGroupData[{

Cell["BO 300nm-400nm", "Section",
 CellChangeTimes->{{3.861216947759951*^9, 
  3.8612169533593197`*^9}},ExpressionUUID->"bcb2f22d-10da-4c6a-aa54-\
6eb068354a7d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"titlescorrected", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "\"\<1nm-pure-0percent\>\""},
       {"2", "\"\<1.5nm-pure-0percent\>\""},
       {"3", "\"\<2nm-pure-0percent\>\""},
       {"4", "\"\<1nm-Bdoped-1.5percent\>\""},
       {"5", "\"\<1nm-Bdoped-3percent\>\""},
       {"6", "\"\<1nm-Bdoped-5percent\>\""},
       {"7", "\"\<1nm-Bdoped-7percent\>\""},
       {"8", "\"\<1.5nm-Bdoped-1.5percent\>\""},
       {"9", "\"\<1.5nm-Bdoped-3percent\>\""},
       {"10", "\"\<1.5nm-Bdoped-5percent\>\""},
       {"11", "\"\<1.5nm-Bdoped-7percent\>\""},
       {"12", "\"\<2nm-Bdoped-1.5percent\>\""},
       {"13", "\"\<2nm-Bdoped-3percent\>\""},
       {"14", "\"\<2nm-Bdoped-5percent\>\""},
       {"15", "\"\<2nm-Bdoped-7percent\>\""},
       {"16", "\"\<1nm-Ndoped-1.5percent\>\""},
       {"17", "\"\<1nm-Ndoped-3percent\>\""},
       {"18", "\"\<1nm-Ndoped-5percent\>\""},
       {"19", "\"\<1nm-Ndoped-7percent\>\""},
       {"20", "\"\<1.5nm-Ndoped-1.5percent\>\""},
       {"21", "\"\<1.5nm-Ndoped-3percent\>\""},
       {"22", "\"\<1.5nm-Ndoped-5percent\>\""},
       {"23", "\"\<1.5nm-Ndoped-7percent\>\""},
       {"24", "\"\<2nm-Ndoped-1.5percent\>\""},
       {"25", "\"\<2nm-Ndoped-3percent\>\""},
       {"26", "\"\<2nm-Ndoped-5percent\>\""},
       {"27", "\"\<2nm-Ndoped-7percent\>\""},
       {"28", "\"\<1nm-Odoped-1.5percent\>\""},
       {"29", "\"\<1nm-Odoped-3percent\>\""},
       {"30", "\"\<1nm-Odoped-5percent\>\""},
       {"31", "\"\<1nm-Odoped-7percent\>\""},
       {"32", "\"\<1.5nm-Odoped-1.5percent\>\""},
       {"33", "\"\<1.5nm-Odoped-3percent\>\""},
       {"34", "\"\<1.5nm-Odoped-5percent\>\""},
       {"35", "\"\<1.5nm-Odoped-7percent\>\""},
       {"36", "\"\<2nm-Odoped-1.5percent\>\""},
       {"37", "\"\<2nm-Odoped-3percent\>\""},
       {"38", "\"\<2nm-Odoped-5percent\>\""},
       {"39", "\"\<2nm-Odoped-7percent\>\""},
       {"40", "\"\<1nm-Sdoped-1.5percent\>\""},
       {"41", "\"\<1nm-Sdoped-3percent\>\""},
       {"42", "\"\<1nm-Sdoped-5percent\>\""},
       {"43", "\"\<1nm-Sdoped-7percent\>\""},
       {"44", "\"\<1.5nm-Sdoped-1.5percent\>\""},
       {"45", "\"\<1.5nm-Sdoped-3percent\>\""},
       {"46", "\"\<1.5nm-Sdoped-5percent\>\""},
       {"47", "\"\<1.5nm-Sdoped-7percent\>\""},
       {"48", "\"\<2nm-Sdoped-1.5percent\>\""},
       {"49", "\"\<2nm-Sdoped-3percent\>\""},
       {"50", "\"\<2nm-Sdoped-5percent\>\""},
       {"51", "\"\<2nm-Sdoped-7percent\>\""},
       {"52", "\"\<1nm-Pdoped-1.5percent\>\""},
       {"53", "\"\<1nm-Pdoped-3percent\>\""},
       {"54", "\"\<1nm-Pdoped-5percent\>\""},
       {"55", "\"\<1nm-Pdoped-7percent\>\""},
       {"56", "\"\<1.5nm-Pdoped-1.5percent\>\""},
       {"57", "\"\<1.5nm-Pdoped-3percent\>\""},
       {"58", "\"\<1.5nm-Pdoped-5percent\>\""},
       {"59", "\"\<1.5nm-Pdoped-7percent\>\""},
       {"60", "\"\<2nm-Pdoped-1.5percent\>\""},
       {"61", "\"\<2nm-Pdoped-3percent\>\""},
       {"62", "\"\<2nm-Pdoped-5percent\>\""},
       {"63", "\"\<2nm-Pdoped-7percent\>\""}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}]], "Input",
 CellChangeTimes->{{3.861216828622018*^9, 3.861216834646575*^9}, {
   3.861216921043839*^9, 3.861216923948316*^9}, 3.8612170295571623`*^9, 
   3.8612186668885183`*^9, {3.929892946756343*^9, 3.929892947153855*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"b13b0758-b78b-4e7e-8e3f-d427d955e51a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Area under Curve between 300-400 nm from 63 graphenes \n",
 StyleBox["see 63_graphene_absorption_curves.XLSX",
  FontSize->18]
}], "Section",
 CellChangeTimes->{{3.933961534570476*^9, 
  3.93396156442108*^9}},ExpressionUUID->"7e531771-315b-430b-864e-\
9b12019a6bd9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"summed300and400nm", "=", 
    RowBox[{"{", 
     RowBox[{
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"5.631\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        5.631243992*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.025\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.0247463781*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.738\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.7377915059*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"5.505\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        5.504828151000003*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"4.918\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        4.917879172000002*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"4.145\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        4.145016792*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"5.175\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        5.175456456999999*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.039\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.0390692606999991`*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.024\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.0236562855*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.038\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.0384044389000002`*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"9.264\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        9.263980609000003*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.969\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.9691154098000005`*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"2.065\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        2.0648661219*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"2.068\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        2.0681501364*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"2.072\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        2.0715209081*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"4.66\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        4.660330007999999*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"4.917\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        4.9171439*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"4.119\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        4.118927715*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"4.793\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        4.793394233999997*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.049\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.0487520612000007`*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"9.99\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        9.989585548999999*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"9.431\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        9.430648658000005*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"8.007\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        8.007473221000002*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.912\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.911665681100001*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.975\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.974690468799999*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.962\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.961846591199998*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.905\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.904913383899999*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"4.851\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        4.851318876*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"4.433\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        4.432703836*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"4.159\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        4.159440457999997*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"3.705\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        3.705347692000001*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"8.656\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        8.656239086*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"9.168\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        9.168048034999996*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"8.791\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        8.790969293*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"9.533\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        9.532664026*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.804\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.803666652199999*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.677\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.6768160065999992`*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.902\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.9020536905*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.998\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.9982792974*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"4.774\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        4.774422017000002*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"4.552\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        4.551814663999997*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"3.725\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        3.725233481999999*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"4.089\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        4.088838409000001*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"9.468\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        9.468190190000001*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"9.738\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        9.738343112000002*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.021\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.020971796499999*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.152\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.1517861221000003`*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.895\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.8945198327999998`*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.832\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.8321125921*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"2.067\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        2.067175144100001*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"2.022\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        2.0222505629*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"5.534\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        5.5338815819999995`*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"4.224\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        4.22388437*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"3.752\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        3.7521544829999995`*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"4.342\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        4.342391668999999*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"8.562\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        8.562369072*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"9.469\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        9.468959287999999*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"8.687\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        8.68652729*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"9.351\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"6\"\>"]}],
         ShowStringCharacters->False],
        9.350740124000004*^6,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.758\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.757549529200001*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.759\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.7590290392000005`*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"2.019\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        2.019348095899999*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ], ",", 
      TagBox[
       InterpretationBox[
        StyleBox[
         RowBox[{"\<\"1.927\"\>", "\[Times]", 
          SuperscriptBox["10", "\<\"7\"\>"]}],
         ShowStringCharacters->False],
        1.927056640099999*^7,
        AutoDelete->True],
       ScientificForm[#, 4]& ]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"graphenes", "\[LeftDoubleBracket]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"B", ",", "N", ",", "O", ",", "S", ",", "P"}], "}"}], ",", "2", 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "nm"}], ",", 
       RowBox[{"1.5", "nm"}], ",", 
       RowBox[{"2", "nm"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"pure", ",", 
       RowBox[{"1.5", "%"}], ",", 
       RowBox[{"3", "%"}], ",", 
       RowBox[{"5", "%"}], ",", 
       RowBox[{"7", "%"}]}], "}"}]}], "\[RightDoubleBracket]"}], "*)"}], 
  RowBox[{
   RowBox[{"graphenes", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<B\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "4", ",", "5", ",", "6", ",", "7"}], "}"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"2", ",", "8", ",", "9", ",", "10", ",", "11"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "12", ",", "13", ",", "14", ",", "15"}], "}"}]}],
          "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<N\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "16", ",", "17", ",", "18", ",", "19"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "20", ",", "21", ",", "22", ",", "23"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "24", ",", "25", ",", "26", ",", "27"}], "}"}]}],
          "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<O\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "28", ",", "29", ",", "30", ",", "31"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "32", ",", "33", ",", "34", ",", "35"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "36", ",", "37", ",", "38", ",", "39"}], "}"}]}],
          "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<S\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "40", ",", "41", ",", "42", ",", "43"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "44", ",", "45", ",", "46", ",", "47"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "48", ",", "49", ",", "50", ",", "51"}], "}"}]}],
          "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<P\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "52", ",", "53", ",", "54", ",", "55"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "56", ",", "57", ",", "58", ",", "59"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"3", ",", "60", ",", "61", ",", "62", ",", "63"}], "}"}]}],
          "}"}]}], "}"}]}], "}"}]}], ";"}]}], "\[IndentingNewLine]"}], "Input",\

 CellChangeTimes->{
  3.861217038251642*^9, {3.861217080538742*^9, 3.861217124165283*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"f75a52d3-2b31-4f7f-9a17-bfd5601af03f"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.861217099922994*^9},ExpressionUUID->"ebe6702a-a80b-4638-bbbe-\
27a08f821ba4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"objspectrum", "[", 
   RowBox[{"i_", ",", "j_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"summed300and400nm", "\[LeftDoubleBracket]", 
   RowBox[{"graphenes", "\[LeftDoubleBracket]", 
    RowBox[{"i", ",", "2", ",", "j", ",", "k"}], "\[RightDoubleBracket]"}], 
   "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", 
 RowBox[{"objspectrum", "[", 
  RowBox[{"5", ",", "3", ",", "5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.861217128424319*^9, 3.861217176678032*^9}, {
  3.865945987207192*^9, 3.865945998058766*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"447616ee-d8d3-4277-be66-3faef999ec5d"],

Cell[BoxData["1.927056640099999`*^7"], "Output",
 CellChangeTimes->{{3.861217165930383*^9, 3.861217176838173*^9}, 
   3.8612178859050093`*^9, 3.865945886462939*^9, {3.865945987516732*^9, 
   3.865945998326179*^9}, 3.869567616916152*^9, 3.929891155292152*^9, 
   3.9339610457681*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"e93594fa-819f-496d-9d48-e6048f4b6342"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"summed300and400nmANDindices", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", "j", ",", "k", ",", 
         RowBox[{"objspectrum", "[", 
          RowBox[{"i", ",", "j", ",", "k"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", "2"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.865945948298809*^9, 3.865946074057167*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"cceb9883-1de9-44d2-b5d7-38b9959563ab"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "1", "5.631243992`*^6"},
     {"1", "1", "2", "5.504828151000003`*^6"},
     {"1", "1", "3", "4.917879172000002`*^6"},
     {"1", "1", "4", "4.145016792`*^6"},
     {"1", "1", "5", "5.175456456999999`*^6"},
     {"1", "2", "1", "1.0247463781`*^7"},
     {"1", "2", "2", "1.0390692606999991`*^7"},
     {"1", "2", "3", "1.0236562855`*^7"},
     {"1", "2", "4", "1.0384044389000002`*^7"},
     {"1", "2", "5", "9.263980609000003`*^6"},
     {"1", "3", "1", "1.7377915059`*^7"},
     {"1", "3", "2", "1.9691154098000005`*^7"},
     {"1", "3", "3", "2.0648661219`*^7"},
     {"1", "3", "4", "2.0681501364`*^7"},
     {"1", "3", "5", "2.0715209081`*^7"},
     {"2", "1", "1", "5.631243992`*^6"},
     {"2", "1", "2", "4.660330007999999`*^6"},
     {"2", "1", "3", "4.9171439`*^6"},
     {"2", "1", "4", "4.118927715`*^6"},
     {"2", "1", "5", "4.793394233999997`*^6"},
     {"2", "2", "1", "1.0247463781`*^7"},
     {"2", "2", "2", "1.0487520612000007`*^7"},
     {"2", "2", "3", "9.989585548999999`*^6"},
     {"2", "2", "4", "9.430648658000005`*^6"},
     {"2", "2", "5", "8.007473221000002`*^6"},
     {"2", "3", "1", "1.7377915059`*^7"},
     {"2", "3", "2", "1.911665681100001`*^7"},
     {"2", "3", "3", "1.974690468799999`*^7"},
     {"2", "3", "4", "1.961846591199998`*^7"},
     {"2", "3", "5", "1.904913383899999`*^7"},
     {"3", "1", "1", "5.631243992`*^6"},
     {"3", "1", "2", "4.851318876`*^6"},
     {"3", "1", "3", "4.432703836`*^6"},
     {"3", "1", "4", "4.159440457999997`*^6"},
     {"3", "1", "5", "3.705347692000001`*^6"},
     {"3", "2", "1", "1.0247463781`*^7"},
     {"3", "2", "2", "8.656239086`*^6"},
     {"3", "2", "3", "9.168048034999996`*^6"},
     {"3", "2", "4", "8.790969293`*^6"},
     {"3", "2", "5", "9.532664026`*^6"},
     {"3", "3", "1", "1.7377915059`*^7"},
     {"3", "3", "2", "1.803666652199999`*^7"},
     {"3", "3", "3", "1.6768160065999992`*^7"},
     {"3", "3", "4", "1.9020536905`*^7"},
     {"3", "3", "5", "1.9982792974`*^7"},
     {"4", "1", "1", "5.631243992`*^6"},
     {"4", "1", "2", "4.774422017000002`*^6"},
     {"4", "1", "3", "4.551814663999997`*^6"},
     {"4", "1", "4", "3.725233481999999`*^6"},
     {"4", "1", "5", "4.088838409000001`*^6"},
     {"4", "2", "1", "1.0247463781`*^7"},
     {"4", "2", "2", "9.468190190000001`*^6"},
     {"4", "2", "3", "9.738343112000002`*^6"},
     {"4", "2", "4", "1.020971796499999`*^7"},
     {"4", "2", "5", "1.1517861221000003`*^7"},
     {"4", "3", "1", "1.7377915059`*^7"},
     {"4", "3", "2", "1.8945198327999998`*^7"},
     {"4", "3", "3", "1.8321125921`*^7"},
     {"4", "3", "4", "2.067175144100001`*^7"},
     {"4", "3", "5", "2.0222505629`*^7"},
     {"5", "1", "1", "5.631243992`*^6"},
     {"5", "1", "2", "5.5338815819999995`*^6"},
     {"5", "1", "3", "4.22388437`*^6"},
     {"5", "1", "4", "3.7521544829999995`*^6"},
     {"5", "1", "5", "4.342391668999999`*^6"},
     {"5", "2", "1", "1.0247463781`*^7"},
     {"5", "2", "2", "8.562369072`*^6"},
     {"5", "2", "3", "9.468959287999999`*^6"},
     {"5", "2", "4", "8.68652729`*^6"},
     {"5", "2", "5", "9.350740124000004`*^6"},
     {"5", "3", "1", "1.7377915059`*^7"},
     {"5", "3", "2", "1.757549529200001`*^7"},
     {"5", "3", "3", "1.7590290392000005`*^7"},
     {"5", "3", "4", "2.019348095899999`*^7"},
     {"5", "3", "5", "1.927056640099999`*^7"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.865946002832399*^9, 3.86594603270326*^9}, {
   3.865946067804427*^9, 3.865946074370913*^9}, 3.929891159600296*^9, {
   3.93396104829786*^9, 3.933961055572735*^9}},
 CellLabel->
  "Out[11]//MatrixForm=",ExpressionUUID->"68c5fb29-b150-4f98-b6ae-\
ddfed8f69e0a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3D initialize the prior by calculating some values of obj[x]", "Section",
 CellChangeTimes->{{3.83984649438663*^9, 3.839846516844926*^9}, {
  3.861207451758147*^9, 3.861207456090141*^9}, {3.861207487906218*^9, 
  3.861207487984795*^9}, {3.861217275731563*^9, 
  3.861217275813532*^9}},ExpressionUUID->"9d24eca9-8ac3-43f2-840a-\
6535b23a52f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Initial", " ", "data", " ", "points", " ", "for", " ", "the", " ", 
    "first", " ", "prior"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nInit", "=", "10"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"number", " ", "of", " ", "initial", " ", "data", " ", "points"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x0y0z0", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "5"}], "}"}], "]"}], ",", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], "]"}], ",", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "5"}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", "nInit", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptCapitalD]", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "x0y0z0", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"objspectrum", "[", 
          RowBox[{"Sequence", "@@", 
           RowBox[{
           "x0y0z0", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
           "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "nInit"}], "}"}]}], "]"}]}], " ", ";"}], 
   RowBox[{"(*", 
    RowBox[{"initial", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", 
       RowBox[{"obj2D", "[", "x", "]"}]}], "}"}], " ", "set"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"\[ScriptCapitalD]", "//", "MatrixForm"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.839768644350165*^9, 3.839768789821391*^9}, {
   3.839768904384861*^9, 3.839768917349988*^9}, {3.839769332709285*^9, 
   3.839769333237583*^9}, {3.839828164977076*^9, 3.83982825823538*^9}, {
   3.839828335723297*^9, 3.839828494584464*^9}, {3.839837035098504*^9, 
   3.839837055440905*^9}, 3.8398371436627703`*^9, 3.839837273712543*^9, {
   3.839837344983959*^9, 3.839837366775318*^9}, {3.8398438237067614`*^9, 
   3.839843832181569*^9}, 3.839846477617806*^9, {3.839846520251745*^9, 
   3.8398465211565323`*^9}, {3.861207575905734*^9, 3.861207599759467*^9}, {
   3.8612076324907427`*^9, 3.861207632793606*^9}, {3.861207679611114*^9, 
   3.861207838840259*^9}, {3.861208337214847*^9, 3.8612083458060513`*^9}, {
   3.861208439171248*^9, 3.861208448436977*^9}, 3.861208490623625*^9, {
   3.861211311573371*^9, 3.861211311605233*^9}, {3.861211350803217*^9, 
   3.861211352603263*^9}, {3.86121283105827*^9, 3.861212834344252*^9}, {
   3.861213340112741*^9, 3.861213340165313*^9}, {3.8612137687774982`*^9, 
   3.86121376988621*^9}, {3.861217294832978*^9, 3.861217296494497*^9}, {
   3.8612173803198*^9, 3.8612174356998*^9}, {3.861217485647715*^9, 
   3.8612174871961*^9}, {3.8612178795465517`*^9, 3.861217880073058*^9}, {
   3.929891314291069*^9, 3.929891315463584*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"d608ca18-f225-4ee3-b057-b4f893c3ac42"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", 
       RowBox[{"3", ",", "3", ",", "4"}], "}"}], "1.9020536905`*^7"},
     {
      RowBox[{"{", 
       RowBox[{"5", ",", "3", ",", "1"}], "}"}], "1.7377915059`*^7"},
     {
      RowBox[{"{", 
       RowBox[{"5", ",", "3", ",", "2"}], "}"}], "1.757549529200001`*^7"},
     {
      RowBox[{"{", 
       RowBox[{"5", ",", "1", ",", "2"}], "}"}], "5.5338815819999995`*^6"},
     {
      RowBox[{"{", 
       RowBox[{"2", ",", "1", ",", "1"}], "}"}], "5.631243992`*^6"},
     {
      RowBox[{"{", 
       RowBox[{"4", ",", "2", ",", "5"}], "}"}], "1.1517861221000003`*^7"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}], "5.631243992`*^6"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "1"}], "}"}], "1.0247463781`*^7"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "3", ",", "1"}], "}"}], "1.7377915059`*^7"},
     {
      RowBox[{"{", 
       RowBox[{"5", ",", "3", ",", "2"}], "}"}], "1.757549529200001`*^7"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9339610660395527`*^9},
 CellLabel->
  "Out[15]//MatrixForm=",ExpressionUUID->"f7296a45-9a79-472c-b4f0-\
a97308070518"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalD]", "=", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "3"}], "}"}], "9.989585548999999`*^6"},
      {
       RowBox[{"{", 
        RowBox[{"5", ",", "1", ",", "5"}], "}"}], "4.342391668999999`*^6"},
      {
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "4"}], "}"}], "2.0193480958999995`*^7"},
      {
       RowBox[{"{", 
        RowBox[{"3", ",", "1", ",", "5"}], "}"}], "3.705347692000001`*^6"},
      {
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "4"}], "}"}], "2.0681501364`*^7"},
      {
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "4"}], "}"}], "2.0671751441000003`*^7"},
      {
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "1"}], "}"}], "1.7377915059`*^7"},
      {
       RowBox[{"{", 
        RowBox[{"3", ",", "2", ",", "2"}], "}"}], "8.656239086`*^6"},
      {
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "4"}], "}"}], "4.1450167920000004`*^6"},
      {
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "2"}], "}"}], "1.0390692606999999`*^7"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]], "Input",
 CellChangeTimes->{{3.92989130521984*^9, 3.929891316999716*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"459e937e-6328-45d6-9e4a-dae89f4f041a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "2", ",", "3"}], "}"}], ",", 
     "9.989585548999999`*^6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "1", ",", "5"}], "}"}], ",", 
     "4.342391668999999`*^6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "3", ",", "4"}], "}"}], ",", 
     "2.0193480958999995`*^7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "5"}], "}"}], ",", 
     "3.705347692000001`*^6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", "2.0681501364`*^7"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "3", ",", "4"}], "}"}], ",", 
     "2.0671751441000003`*^7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "3", ",", "1"}], "}"}], ",", "1.7377915059`*^7"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "2", ",", "2"}], "}"}], ",", "8.656239086`*^6"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "4"}], "}"}], ",", 
     "4.1450167920000004`*^6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
     "1.0390692606999999`*^7"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.929891309727293*^9, 3.92989131823591*^9}, 
   3.933961070997059*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"6fb70231-382c-47e7-820c-f729fdb8beab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{
   RowBox[{"\[ScriptCapitalD]", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", ".05", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Atom\>\"", ",", "\"\<Size\>\"", ",", "\"\<Dopant %\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"3f575de4-8519-4d0d-bd7a-9ac2a525dac8"],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[1, 0, 0], PointSize[0.05], 
     Point3DBox[{{2., 2., 3.}, {5., 1., 5.}, {5., 3., 4.}, {3., 1., 5.}, {1., 
      3., 4.}, {4., 3., 4.}, {5., 3., 1.}, {3., 2., 2.}, {1., 1., 4.}, {1., 
      2., 2.}}]}, {}, {}}, {}},
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["\"Atom\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Size\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Dopant %\"", HoldForm], TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Lighting->{{"Ambient", 
     GrayLevel[0.5]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{0, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 0, 2}]}},
  PlotRange->{{1., 5.}, {1., 3.}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.929891324897509*^9, 3.9339610731746473`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"0295acbc-3cdd-4e1c-ad3d-774a9ec6ac5f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["WITH NEURAL NETWORK",
  FontWeight->"Bold"],
 "\n3D initialize the prior by calculating some values of obj[x]"
}], "Section",
 CellChangeTimes->{{3.83984649438663*^9, 3.839846516844926*^9}, {
  3.861207451758147*^9, 3.861207456090141*^9}, {3.861207487906218*^9, 
  3.861207487984795*^9}, {3.861217275731563*^9, 3.861217275813532*^9}, {
  3.861218786106576*^9, 
  3.861218788809211*^9}},ExpressionUUID->"0b51d112-081b-4dae-bc43-\
94f8973f6e75"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Initial", " ", "data", " ", "points", " ", "for", " ", "the", " ", 
    "first", " ", "prior"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nInit", "=", "10"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"number", " ", "of", " ", "initial", " ", "data", " ", "points"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x0y0z0", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "5"}], "}"}], "]"}], ",", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}], "]"}], ",", 
         RowBox[{"RandomInteger", "[", 
          RowBox[{"{", 
           RowBox[{"1", ",", "5"}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", "nInit", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[ScriptCapitalD]", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
         "x0y0z0", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"objspectrum", "[", 
          RowBox[{"Sequence", "@@", 
           RowBox[{
           "x0y0z0", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
           "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "nInit"}], "}"}]}], "]"}]}], " ", ";"}], 
   RowBox[{"(*", 
    RowBox[{"initial", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", 
       RowBox[{"obj2D", "[", "x", "]"}]}], "}"}], " ", "set"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"\[ScriptCapitalD]", "//", "MatrixForm"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.839768644350165*^9, 3.839768789821391*^9}, {
   3.839768904384861*^9, 3.839768917349988*^9}, {3.839769332709285*^9, 
   3.839769333237583*^9}, {3.839828164977076*^9, 3.83982825823538*^9}, {
   3.839828335723297*^9, 3.839828494584464*^9}, {3.839837035098504*^9, 
   3.839837055440905*^9}, 3.8398371436627703`*^9, 3.839837273712543*^9, {
   3.839837344983959*^9, 3.839837366775318*^9}, {3.8398438237067623`*^9, 
   3.839843832181569*^9}, 3.839846477617806*^9, {3.839846520251745*^9, 
   3.8398465211565323`*^9}, {3.861207575905734*^9, 3.861207599759467*^9}, {
   3.8612076324907427`*^9, 3.861207632793606*^9}, {3.861207679611114*^9, 
   3.861207838840259*^9}, {3.861208337214847*^9, 3.8612083458060513`*^9}, {
   3.861208439171248*^9, 3.861208448436977*^9}, 3.861208490623625*^9, {
   3.861211311573371*^9, 3.861211311605233*^9}, {3.861211350803217*^9, 
   3.861211352603263*^9}, {3.86121283105827*^9, 3.861212834344252*^9}, {
   3.861213340112741*^9, 3.861213340165313*^9}, {3.8612137687774973`*^9, 
   3.86121376988621*^9}, {3.861217294832978*^9, 3.861217296494497*^9}, {
   3.8612173803198*^9, 3.8612174356998*^9}, {3.861217485647715*^9, 
   3.8612174871961*^9}, {3.8612178795465517`*^9, 3.861217880073058*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"e2cfcf62-e7a9-4998-95af-d78ac8e5fcfe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalD]", "=", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"{", 
        RowBox[{"4", ",", "1", ",", "1"}], "}"}], "5.631243992`*^6"},
      {
       RowBox[{"{", 
        RowBox[{"5", ",", "2", ",", "4"}], "}"}], "8.68652729`*^6"},
      {
       RowBox[{"{", 
        RowBox[{"3", ",", "2", ",", "3"}], "}"}], "9.168048034999996`*^6"},
      {
       RowBox[{"{", 
        RowBox[{"3", ",", "2", ",", "1"}], "}"}], "1.0247463781000003`*^7"},
      {
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "1"}], "}"}], "1.0247463781000003`*^7"},
      {
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "1"}], "}"}], "1.0247463781000003`*^7"},
      {
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "2"}], "}"}], "1.803666652199999`*^7"},
      {
       RowBox[{"{", 
        RowBox[{"4", ",", "2", ",", "1"}], "}"}], "1.0247463781000003`*^7"},
      {
       RowBox[{"{", 
        RowBox[{"3", ",", "1", ",", "4"}], "}"}], "4.1594404579999982`*^6"},
      {
       RowBox[{"{", 
        RowBox[{"5", ",", "2", ",", "1"}], "}"}], "1.0247463781000003`*^7"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]], "Input",
 CellChangeTimes->{{3.929891347905741*^9, 3.9298913485574427`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"83d88bac-cdd9-4a2a-8bc5-ad03be73c4b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "1", ",", "1"}], "}"}], ",", "5.631243992`*^6"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "2", ",", "4"}], "}"}], ",", "8.68652729`*^6"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "2", ",", "3"}], "}"}], ",", 
     "9.168048034999996`*^6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "2", ",", "1"}], "}"}], ",", 
     "1.0247463781000003`*^7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
     "1.0247463781000003`*^7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
     "1.0247463781000003`*^7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "2"}], "}"}], ",", 
     "1.803666652199999`*^7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "2", ",", "1"}], "}"}], ",", 
     "1.0247463781000003`*^7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "4"}], "}"}], ",", 
     "4.1594404579999982`*^6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "2", ",", "1"}], "}"}], ",", 
     "1.0247463781000003`*^7"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.929891349812611*^9, 3.9339610972718687`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"1de8d873-09b2-4908-a47e-2daa595b14bb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPointPlot3D", "[", 
  RowBox[{
   RowBox[{"\[ScriptCapitalD]", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", 
      RowBox[{"PointSize", "[", ".05", "]"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Atom\>\"", ",", "\"\<Size\>\"", ",", "\"\<Dopant %\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.861217529968294*^9, 3.861217572551423*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"70fe3c50-1c33-46ab-a975-f12570b6bd93"],

Cell[BoxData[
 Graphics3DBox[{{
    {RGBColor[1, 0, 0], PointSize[0.05], 
     Point3DBox[{{4., 1., 1.}, {5., 2., 4.}, {3., 2., 3.}, {3., 2., 1.}, {1., 
      2., 1.}, {1., 2., 1.}, {3., 3., 2.}, {4., 2., 1.}, {3., 1., 4.}, {5., 
      2., 1.}}]}, {}, {}}, {}},
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["\"Atom\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Size\"", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["\"Dopant %\"", HoldForm], TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{375.07954064652574`, 224.9665714461834},
  ImageSizeRaw->Automatic,
  Lighting->{{"Ambient", 
     GrayLevel[0.5]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{0, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.5], 
     ImageScaled[{2, 0, 2}]}},
  PlotRange->{{1., 5.}, {1., 3.}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{2.3873273510810367`, -1.9445660972656478`, 1.4033284762112723`},
  
  ViewVertical->{0.10644758018142794`, -0.005791598101018969, 
   0.9943014482866627}]], "Output",
 CellChangeTimes->{3.861217531559709*^9, 3.861217573262971*^9, 
  3.861217889782929*^9, 3.8612188000015173`*^9, 3.861219084143197*^9, 
  3.869567629051914*^9, 3.929891354999102*^9, 3.9339610992413883`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"85ecfccf-043c-4029-b3ae-5b2233a6dd22"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Neural Network",
  FontWeight->"Bold"],
 " Regressor "
}], "Section",
 CellChangeTimes->{{3.839846798361445*^9, 3.8398468036883993`*^9}, {
  3.861218854984041*^9, 
  3.8612188873769693`*^9}},ExpressionUUID->"a4b1170e-f0f0-4aaa-94d7-\
28ace80c083e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Building", " ", "the", " ", 
     RowBox[{"surrogate", "/", "posterior"}], " ", "p"}], "=", 
    RowBox[{"P", 
     RowBox[{"(", 
      RowBox[{"obj", "|", "\[ScriptCapitalD]"}], ")"}], " ", "using", " ", 
     "Gaussian", " ", "Process"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"surrogate3D", "=", 
    RowBox[{"Predict", "[", 
     RowBox[{
      RowBox[{"Rule", "@@@", "\[ScriptCapitalD]"}], ",", 
      RowBox[{"Method", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<NeuralNetwork\>\"", ",", 
         RowBox[{"\"\<NetworkDepth\>\"", "\[Rule]", "4"}]}], "}"}]}]}], 
     "]"}]}], " ", "\[IndentingNewLine]", 
   RowBox[{"surrogate3D", "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2", ",", "2"}], "}"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"obj", "[", "x", "]"}], ",", 
        RowBox[{"p", "[", "x", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
      RowBox[{"Epilog", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.02", "]"}], ",", "Pink", ",", 
         RowBox[{"Point", "[", "\[ScriptCapitalD]", "]"}]}], "}"}]}]}], "]"}],
     "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.839843043300911*^9, 3.839843043334231*^9}, {
   3.839843231586365*^9, 3.8398432459403687`*^9}, {3.839843432589502*^9, 
   3.839843453690748*^9}, {3.839843501644021*^9, 3.839843505350584*^9}, 
   3.839843675379834*^9, {3.839843814012787*^9, 3.839843901740745*^9}, {
   3.839845566885039*^9, 3.83984557460839*^9}, {3.839845717734351*^9, 
   3.839845758460739*^9}, {3.839845904592621*^9, 3.839845932621791*^9}, 
   3.839846021103162*^9, {3.839846058022541*^9, 3.839846162370945*^9}, {
   3.839846194219976*^9, 3.839846341775062*^9}, {3.839846834413138*^9, 
   3.839846836901681*^9}, {3.839909936241167*^9, 3.839909937667855*^9}, {
   3.8399213877028513`*^9, 3.839921400683075*^9}, {3.839921458347412*^9, 
   3.839921493922863*^9}, {3.839956550770503*^9, 3.839956587773568*^9}, {
   3.8612078797667313`*^9, 3.86120796886373*^9}, {3.861208002484447*^9, 
   3.861208023176858*^9}, {3.861208066809445*^9, 3.861208072314464*^9}, {
   3.8612085256813374`*^9, 3.861208527532183*^9}, {3.8612085761428833`*^9, 
   3.861208577144368*^9}, {3.861211264599202*^9, 3.86121126814991*^9}, {
   3.861213388101218*^9, 3.86121339364682*^9}, 3.861213441782879*^9, {
   3.861213508175621*^9, 3.861213511193392*^9}, {3.861213665920208*^9, 
   3.861213698560535*^9}, {3.8612176163171597`*^9, 3.861217629414864*^9}, {
   3.861217686908238*^9, 3.861217705951999*^9}, {3.861218889758445*^9, 
   3.861218893283274*^9}, 3.861219078020513*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"2061a698-e101-44ef-8f15-57dfc09f26ca"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PredictorFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Nominal\"", ",", 
                    "\"Numerical\""}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{}, {{}, {
                PointSize[0.125], 
                GrayLevel[0.55], 
                
                PointBox[{{-1, 1.5}, {0, 2.3}, {1, 0.8}, {2, 2}, {3, 1.3}, {
                  4, 4.}}]}, {
                GrayLevel[0.7], 
                AbsoluteThickness[1.5], 
                
                BSplineCurveBox[{{-1, 2}, {0, 2}, {1, 1}, {2, 1}, {4, 2}, {5, 
                 4}}]}}, {}}, Axes -> {False, False}, 
             AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, LabelStyle -> {FontFamily -> "Arial"},
              Method -> {"ScalingFunctions" -> None}, PlotRange -> {All, All},
              PlotRangeClipping -> True, PlotRangePadding -> {{1, 1}, {1, 1}},
              Ticks -> {None, None}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Nominal\"", ",", 
                    "\"Numerical\""}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["10", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PredictorFunction[<|
   "ExampleNumber" -> 10, 
    "Input" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|
          "f1" -> <|"Type" -> "Numerical"|>, "f2" -> <|"Type" -> "Nominal"|>, 
           "f3" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|
          "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor[
              "Transpose", <|"FeatureNumber" -> 3|>], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Numerical", "Nominal", "Numerical"}, 
                "FeatureKeys" -> {"f1", "f2", "f3"}, "FeatureWeights" -> 
                Automatic, "ExampleWeights" -> Automatic, "RawExample" -> 
                Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                False|>]}|>], "ScalarFeature" -> False, "Invertibility" -> 
         "Perfect", "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
       "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|
          "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
           "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|
          "(f2(f1f3))" -> <|
            "Weight" -> {0.3333333333333333, 0.3333333333333333, 
              0.3333333333333333, 1., 1.}, "Type" -> "NumericalVector"|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "SynthesizeMissingValues", <|
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Distribution" -> 
             LearnedDistribution[<|
               "ExampleNumber" -> 10, "Preprocessor" -> 
                MachineLearning`MLProcessor[
                 "ToMLDataset", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical"|>, 
                    "f2" -> <|"Type" -> "Nominal"|>, 
                    "f3" -> <|"Type" -> "Numerical"|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> False, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
                "Processor" -> 
                MachineLearning`MLProcessor[
                 "Sequence", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                   "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Weight" -> {1., 1., 1.}, "Type" -> "NumericalVector"|>|>,
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "Threads", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f3)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 2|>, 
                    "f2" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f3)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 2|>|>, 
                    "Version" -> {14., 0}, "ID" -> 5012684870820858898|>], 
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f2" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14., 0}, "ID" -> 9153322266525338993|>]}, 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], 
                    MachineLearning`MLProcessor[
                    "IntegerEncodeNominalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f2" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                    "Index" -> {<|1 -> 1, 2 -> 2, 3 -> 3|>}, "MissingCode" -> 
                    Indeterminate, "Version" -> {14., 0}, "ID" -> 
                    1162366167511204112, 
                    "Output" -> <|
                    "f2" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f3)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 2|>|>, 
                    "Mean" -> {3.2, 1.9000000000000001`}, 
                    "StandardDeviation" -> {1.3266499161421592`, 
                    1.2206555615733703`}, 
                    "Output" -> <|
                    "(f1f3)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 2|>|>, 
                    "Version" -> {14., 0}, "ID" -> 6200083942681816230|>], 
                    MachineLearning`MLProcessor[
                    "NumericalizeNominalVector", <|
                    "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f2" -> <|
                    "Type" -> "NominalVector", "Weight" -> 1, 
                    "SetSize" -> {3}|>|>, 
                    "Boundaries" -> {{-0.5, -0.16666666666666669`, 
                    0.16666666666666663`, 0.5}}, "Version" -> {14., 0}, "ID" -> 
                    5792661806759522573, 
                    "Output" -> <|
                    "f2" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>|>|>], 
                    MachineLearning`MLProcessor[
                    "MergeVectors", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "(f1f3)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 2|>|>, "Spans" -> {
                    Span[1, 1], 
                    Span[2, 3]}, "Wrappers" -> {Identity, Identity}, 
                    "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Weight" -> {1., 1., 1.}, "Type" -> "NumericalVector"|>|>,
                     "Version" -> {14., 0}, "ID" -> 6750470251532865016|>]}, 
                   "Invertibility" -> "Approximate", "StructurePreserving" -> 
                   True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                "DirectTraining", "BatchProcessing" -> Automatic, 
                "Model" -> <|
                 "RotationMatrix" -> {{0.0037932055138514493`}, {
                   0.7067956842998943}, {0.7074075715222264}}, 
                  "Precisions" -> {0.7931979295458775}, "NoisePrecision" -> 
                  2.6122999968531686`, "Processor" -> 
                  MachineLearning`MLProcessor[
                   "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
                    "Mean" -> {-0.023209989782543794`, -0.002570887451823234, \
-0.0023545013137543425`}, 
                    "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
                    "Version" -> {14., 0}, "ID" -> 8399028061257246145|>], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor[
                   "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 3.|>,
                     "Key" -> "(f2(f1f3))", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                   "Method" -> "Multinormal", 
                  "Options" -> <|
                   "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 1, "Options" -> <||>|>|>|>, 
                "TrainingInformation" -> <|
                 "Configurations" -> 
                  Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
                    "Mean" -> {-0.023209989782543794`, \
-0.0025708874518232117`, -0.0023545013137543647`}, 
                    "StandardDeviation" -> {0.16826709703528725`, 
                    0.9992995157454727, 0.9997074025848053}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 3, 
                    "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {14., 0}, "ID" -> 
                    4235126271145478721|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                  Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                "NaiveImputer" -> 
                MachineLearning`MLProcessor[
                 "ImputeMissing", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
                   "Mean" -> {-0.023209989782543794`, \
-0.0025708874518232117`, -0.0023545013137543647`}, 
                   "StandardDeviation" -> {0.16826709703528725`, 
                    0.9992995157454727, 0.9997074025848053}, "Method" -> 
                   "NaiveSampler", "VectorLength" -> 3, 
                   "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, "Type" -> 
                   "NumericalVector", "Version" -> {14., 0}, "ID" -> 
                   4235126271145478721|>], "InputDimension" -> 0, 
                "OutputDimension" -> 3, 
                "Log" -> <|
                 "Example" -> 
                  MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {3}, 
                    "ID" -> 204740655057220579|>, 
                    "f2" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {2}, "ID" -> 
                    3882307596864950694|>, 
                    "f3" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {3}, 
                    "ID" -> 1471168733138764385|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                  "TrainingTime" -> 0.228482, "MaxTrainingMemory" -> 49676888,
                   "DataMemory" -> 3808, "FunctionMemory" -> 63224, 
                  "LanguageVersion" -> {14., 0}, "Date" -> 
                  DateObject[{2024, 8, 30, 1, 58, 22.663731`8.10790638998112},
                     "Instant", "Gregorian", 3.], "ProcessorCount" -> 8, 
                  "ProcessorType" -> "ARM64", "OperatingSystem" -> "MacOSX", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[<|
                  "Quantiles" -> {-1.9371099448337294`, -1.9371099448337294`, \
-1.9302124262386582`, -1.8100993465361457`, -1.7693979378337712`, \
-1.599595074124126, -1.5162845485860437`, -1.4898897805014888`, \
-1.3573747578645072`, -1.329046653824446, -1.196102402717133}, 
                   "LeftBoundary" -> -1.9302124262386582`, "LeftScale" -> 
                   0.0034487592975356307`, "LeftTailNorm" -> 0.2|>], 
                "Entropy" -> Around[4.780533861918014, 0.2469105948325327], 
                "EntropySampleSize" -> 10|>], 
             "Output" -> <|
              "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "EvaluationStrategy" -> "ModeFinding", "Version" -> {14., 0}, 
             "ID" -> 616651398117295976|>], 
           MachineLearning`MLProcessor[
           "Threads", <|
            "Input" -> <|
              "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Output" -> <|
              "(f1f3)" -> <|"Type" -> "NumericalVector", "Weight" -> 2|>, 
               "f2" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Processors" -> {
               MachineLearning`MLProcessor[
               "ToVector", <|
                "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                 "StructurePreserving" -> True, 
                 "Input" -> <|
                  "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                   "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                 "Output" -> <|
                  "(f1f3)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 2|>|>, 
                 "Version" -> {14., 0}, "ID" -> 4638787354345331223|>], 
               MachineLearning`MLProcessor[
               "ToVector", <|
                "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                 "StructurePreserving" -> True, 
                 "Input" -> <|
                  "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                 "Output" -> <|
                  "f2" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                 "Version" -> {14., 0}, "ID" -> 5896072734193971629|>]}, 
             "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
             "Missing" -> "Allowed"|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "(f1f3)" -> <|"Type" -> "NumericalVector", "Weight" -> 2|>|>, 
             "Mean" -> {3.2, 1.9000000000000001`}, 
             "StandardDeviation" -> {1.3266499161421592`, 
              1.2206555615733703`}, 
             "Output" -> <|
              "(f1f3)" -> <|"Type" -> "NumericalVector", "Weight" -> 2|>|>, 
             "Version" -> {14., 0}, "ID" -> 6035134038152122183|>], 
           MachineLearning`MLProcessor[
           "EmbedNominalVector", <|
            "Invertibility" -> "Impossible", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f2" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Index" -> {<|1 -> 1, 2 -> 2, 3 -> 3|>}, 
             "Output" -> <|
              "f2" -> <|"Weight" -> 1, "Type" -> "NumericalVector"|>|>, 
             "EmbeddingVectors" -> {
              RawArray["Real32",{{0., 0., 0.}, {0.219885915517807, 
                0.17539280652999878`, -0.8660410642623901}, {
                0.24136008322238922`, 
                0.980949342250824, -0.2453247457742691}, {
                0.15971672534942627`, 
                0.3141757547855377, -0.3996261656284332}}]}, 
             "Version" -> {14., 0}, "ID" -> 8321939724124983093|>], 
           MachineLearning`MLProcessor[
           "MergeVectors", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f2" -> <|"Weight" -> 1, "Type" -> "NumericalVector"|>, 
               "(f1f3)" -> <|"Type" -> "NumericalVector", "Weight" -> 2|>|>, 
             "Spans" -> {
               Span[1, 3], 
               Span[4, 5]}, "Wrappers" -> {Identity, Identity}, 
             "Output" -> <|
              "(f2(f1f3))" -> <|
                "Weight" -> {0.3333333333333333, 0.3333333333333333, 
                  0.3333333333333333, 1., 1.}, "Type" -> 
                 "NumericalVector"|>|>, "Version" -> {14., 0}, "ID" -> 
             2306911464051571360|>]}, "Invertibility" -> "Impossible", 
         "StructurePreserving" -> True, "Missing" -> "Imputed"|>]|>, 
    "Output" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {14., 0}, "ID" -> 1446207408289683828|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {9.691924520200001*^6}, 
             "StandardDeviation" -> {3.4577538206311744`*^6}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {14., 0}, "ID" -> 7585370691766012665|>], 
           MachineLearning`MLProcessor[
           "FromVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>,
              "Version" -> {14., 0}, "ID" -> 6807722100842594269|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> "f1",
              "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
             "Missing" -> "Allowed"|>]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
      "ProbabilityPostprocessor" -> Identity, 
      "InverseProcessorFunction" -> (9.691924520200001*^6 + 
       3.4577538206311744`*^6 #& ), 
      "ProcessorFunction" -> (-2.802953889421442 + 2.892050885847799*^-7 #& ),
       "Name" -> "value", 
      "Quantiles" -> {-1.6000225433024347`, 2.413341849847699}, "Mean" -> 
      9.6919245202*^6|>, "LabelSplitter" -> 
    MachineLearning`MLProcessor[
     "FeatureLabelSplit", <|
      "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
    0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
    "Model" -> <|
     "Method" -> "NeuralNetwork", "Network" -> 
      NetGraph[<|
        "Type" -> "Graph", 
         "Inputs" -> <|
          "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
         "Outputs" -> <|
          "Mean" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
           "LogStd" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>, 
         "Nodes" -> <|
          "2" -> <|"Type" -> "NetArray", 
             "Arrays" -> <|
              "Array" -> RawArray["Real32",{-1.1989428997039795`}]|>, 
             "Parameters" -> <|
              "Dimensions" -> 
               NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT], 
               "$ArrayDimensions" -> {1}|>, "Inputs" -> <||>, 
             "Outputs" -> <|
              "Output" -> 
               NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>|>, 
           "1" -> <|"Type" -> "Chain", 
             "Nodes" -> <|
              "1" -> <|"Type" -> "Linear", 
                 "Arrays" -> <|"Weights" -> CompressedData["
1:eJwViXsw1Wkch3UhrINxKRyn6bQobGqOO+f9vkVNYtdumNYUidbdWbfJYbXG
LaRSdm21pejitttltolWfu/3LbnsqHWOppT7rrvdZhhmSU2s/ng+M8/nkUYk
BkSt1tDQSNVemYBw5a6UlPCMQK2PEhme4ChL+BhlK2iucG3qMC6H1AseiU58
XMeefv7tz1S2ZMIzyBL+8vIIufjSkdhEe3OHiTF50mQtUfqr4b7+Q/RO12UP
5kYgQbDAsNGnZKfRZRbp+FhIG0iE+QdK3jNwVq4+2IH7xjtwj8Eg2j0/Aupn
1lAytBf1ktbQhuQKMqG8CheIIf3rpg5/cSYX3SZ1uFlUGowb1XoMG7li28VG
sM7UIk3WKjwzPwZ7tAqIVUsdNhSX4IO8/ViYJIGihj62nU+RXb02IJ2yhOhj
XtStNoaVfuEELs6HIebfY/J3Y4FwfeW326cAP1YAEq8c2FTjCanvmrEA9eQH
Lt8jdc0ZNL0sUEj2ssCY95t4gFKD+0WEolTcwtA4j4jVMxgSuqXpToiY714c
IindDSRm5CrTi/PDN4GM6KtF0KZYBYb9b7Fn6STu3qFNu7bF0nXTeryu0JVO
pJ4G85ZlzGnKgL7c31j3SY4DzXlEtfYVXMrK59kGn9G8YBF1zJLiolLsYd57
C1TaUvze9S7cqtDG4kx9+p2LD59VmbLzR9fQ6M3VrK4qHr7smkefOUO6Pv0/
qPpRxpvL3Jksb5LtrHfGzs1TsL+mGFWrdOhBna3U6+5jvL5gRH0tW3F4UNVU
0GuGD9+EQlClLSwUMvK0OJw2j/mihbMPnuvrQdndQ1hJT8BiKeKGViloXwug
CeJuKA+WkiunuoTFGAfud6KSu0ZIeL+BLpRJ14Lqh0q44deF9mV/k9gtT7Cn
Y4lEvo+H0XxdHK0YRBf722TBfZZkROry2znGtO3Xb/DJKRFYWzVixowhNRd9
AIXGGrrukQXNNkQME5LByEGHL3mvp5n+Vnw01IxILsvkDfKvYB6nia+mBdYG
FbL0hVm4n7ixKSnfkNbFVbE830eQfjaOuB1dTRUP3dnwfk88EyQI0a7ncYFU
C42eLez1zCr+eroQ0wKqwNYpGd/uFvOIRlP4NC2WqEuDSHWmu5BdYktfFTNM
vHAJ6vfNEf2S54IIS8kNyVa583EptSr/CTb+cQfzNU6A7zIKVl7aNHjBBc59
/YJ02xyA8PZ6ZvP7n9haBGyqVEJrWvtZV+d74jRiyx0+SPi28njcENVMcseq
yHCYCXXsryNDlgo8fmcHc92mFP4pUYFJuxYxbjtNsqzEaOfZC0n6N2n2oXtM
XWnHNfe2s+0HTGnCFRPsLOyGwfspHIo+gdGnz3CoRSH4R7hA/4iI/g+L7+tO

                    "], "Biases" -> 
                   RawArray["Real32",{-0.012169163674116135`, 
                    0.009650961495935917, -0.013100849464535713`, \
-0.020143963396549225`, 
                    0.006052089389413595, -0.002029701368883252, \
-0.006044588517397642, 0.007693909108638763, -0.0053748986683785915`, 
                    0.009160751476883888, -0.014554915018379688`, \
-0.016858527436852455`, 0.013982144184410572`, 
                    0.014517744071781635`, -0.008336205035448074, 
                    0.004692817572504282, -0.0059677897952497005`, \
-0.0004948508576489985, -0.006720861420035362, -0.0016040425980463624`, \
-0.0015893345698714256`, 0.016085965558886528`, -0.013168460689485073`, 
                    0.008929909206926823, -0.00793275237083435, \
-0.013195402920246124`, 0.0012483586324378848`, 
                    0.015255754813551903`, -0.006633432116359472, \
-0.009408091194927692, 0.0070306602865457535`, 0.0049194954335689545`, 
                    0.0004956835764460266, -0.0009747766889631748, 
                    0.016394779086112976`, -0.008808722719550133, \
-0.015088994987308979`, 0.007704492192715406, 0.005776808597147465, 
                    0.005734359845519066, 
                    0.002242754213511944, -0.009465075097978115, 
                    0.002219893503934145, -0.006096228491514921, 
                    0.012610032223165035`, -0.013916024006903172`, 
                    0.00878830999135971, -0.01231926865875721, 
                    0.0029074775520712137`, 0.01287225354462862}]|>, 
                 "Parameters" -> <|
                  "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                   "$InputSize" -> 5, "$InputDimensions" -> {5}|>, 
                 "Inputs" -> <|
                  "Input" -> 
                   NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
                 "Outputs" -> <|
                  "Output" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
               "2" -> <|
                "Type" -> "Elementwise", "Arrays" -> <||>, 
                 "Parameters" -> <|
                  "Function" -> 
                   NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                 "Inputs" -> <|
                  "Input" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                 "Outputs" -> <|
                  "Output" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
               "3" -> <|
                "Type" -> "Linear", "Arrays" -> <|"Weights" -> CompressedData["
1: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
                    "], "Biases" -> 
                   RawArray["Real32",{-0.016855556517839432`, 
                    0.0132837425917387, -0.0008768085390329361, 
                    0.0052915834821760654`, 
                    0.0027843292336910963`, -0.003698379499837756, \
-0.018797684460878372`, 
                    0.001909635029733181, -0.0032004108652472496`, \
-0.0021246206015348434`, -0.00209363317117095, 0.004849011078476906, 
                    0.015473847277462482`, -0.002095770090818405, \
-0.004852868150919676, 
                    0.003735683625563979, -0.018036937341094017`, \
-0.005769259296357632, 
                    0.00924748182296753, -0.0053855618461966515`, \
-0.010243135504424572`, 0.0026551897171884775`, 0.008476866409182549, 
                    0.00027884868904948235`, 
                    0.0001943559618666768, -0.011052536778151989`, \
-0.00904067326337099, 
                    0.0036407792940735817`, -0.018745727837085724`, \
-0.016538191586732864`, -0.005400519352406263, -0.0259801484644413, \
-0.014598118141293526`, -0.006325799971818924, -0.001701550674624741, \
-0.009855473414063454, 0.0009022941812872887, -0.008556058630347252, 
                    0.008934074081480503, -0.01370132714509964, \
-0.012249063700437546`, -0.015533125959336758`, -0.008746887557208538, \
-0.0013278448022902012`, -0.014745539054274559`, -0.00016663662972860038`, \
-0.005673646926879883, -0.009721470065414906, -0.006482403259724379, \
-0.013270319439470768`}]|>, 
                 "Parameters" -> <|
                  "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                   "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                 "Inputs" -> <|
                  "Input" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                 "Outputs" -> <|
                  "Output" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
               "4" -> <|
                "Type" -> "Elementwise", "Arrays" -> <||>, 
                 "Parameters" -> <|
                  "Function" -> 
                   NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                 "Inputs" -> <|
                  "Input" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                 "Outputs" -> <|
                  "Output" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
               "5" -> <|
                "Type" -> "Linear", "Arrays" -> <|"Weights" -> CompressedData["
1:eJwtl3dUz4/3x4uGkqIILRWloaGF3q97G6RIVmRkS+ljZiejXTSMilBGCikj
hHq/7g2lUMnICIkklFBUZP18z/n9ce85995z7p/P5+NpsGjVVP9uMjIya3v8
a1MXbnRZs2ZhsLfC/4YlC5fb2iz/39Hm/6s8caDQeXM4xqrGCavDV+DgRnsy
1G+jYF8vqL65A7KfJ/DOtTKsuqua2s7egdVtJUKK8nrG8qHcOPMJvLsaxUoT
Iyh3YzX7qA7hF3eTRMPyviSdMRr6pCih084mwTLSUUjTdcK0jz7Qqb6LJftj
xM+HVfn3WB9Y1UeFlEZZ0syhTyBzRimmaClC6FUJ7hx6V/ipXkyHXhvACwkg
f7WG52ZPYKOpLffWsZDQg8H8JWwX3u3Qxw7r+aJif13SmJ1Of/MPQ+QxI1yk
sIpPVChA8TBZLN2yVsi9ISudpnAQyifZi3rxUtqW3wPtO3VgpZkOPvyqRZ8+
5og3jyhixDh1dlStpYEtHnBpdDymmx8R0jZqsuqW2dzclQYLArTYxHAZBKck
4rbH70jb05cP9xgPBfv7482bejhqXTOUGO4ArTvy6HpmDqGsHmb7WODuFZo0
sCGN0iRRmNoaC/m1GaDr0JNNQvx4yK04IWJlL5aXGPHQleuFn0NyhZuTg8Dp
cYOgdv+lsHXABQi+WA8LGszQfBLjypCDXLzJiT/cvgbbGxXEN9OWC0LJPSEn
dDqI9zeLkYruqDBdD04Hn6Sq/sWO2mtns5aGwJsslPFipzItGzsJ88rGQ/mP
Urrw6pg4Nv022aVfQsdh3yHqygD8uSYMNhwdAxZXD+I+40zy/XJGtLvhjjNy
+mLRnV4YhDmg7zMQfyc1ifN6faDKU5uEE9IkPl/9Fba5G8PHwWfwV2O+GB5/
Erzij0GoyTDe8nEDPVqqDPu+esG1/b6oJB4g20ZZ/HvnAM8K2kqPEnvh+1pr
nj4vUJxSvYjGnb8Ek+4O5ClLTwjZ/T1FE8VpLCr4ipl1XdRNpooEWX2x+G0M
PZMLFRL3KZEFxeEZz/OQGi7Lumb76ZJ+C9nLLeG3rR54WjUMTO/ep0VTj0mi
ttmy/voPJL52oZpBT+GI9SMarTGbZ/33DP3H9+RBaSaQH2uKRypzoCYhkJvz
2mDpfBteLH8FXGZO4avhdTREUg6DbCbgM6/LZObTm88NahHLFobCn72fRFW3
alhXLhVuLD8i9LNdSsMrNbBy52M40hqKr5WyaO3IR3xlqy0/WK8HXiVPwWuF
nzA6tRWUI5Q5Yi0KDucSaECvPElW8Uyc+Lyv4B2hDX+rx9F8sYImdybQh3uK
PFtpME78VEE1lx5T2LpefNTZCfU/7ccTT0/T3iVPYN/89xifGooVOb3wtUMz
LDo0n2xxMN5zuEKd9n2xrtwbti8/AQ/uN4Db5SNwOf4DHY1cxoUfM8HsljHv
b3DlHOODYt6h21Cq7y+kWe/FseGKICYNgbPy96Ft9hAERQlOGKWN+89o8q0/
fVGh9D8OnK9Nz/MugLqoLL2g+Jl6LGmF9S39+WZuLL1aZg/GSU/IaOwTx/we
QVBQMJS/XlID3+hg/tqogm90pxSeylHl/YsyhaA0Q8cfcxk8qiIpInoHGE3d
jg7bB/CqO1PheIsxv/WuFUtqCE4eXA9qXnXwZpC6YGQuwJ3N36lNWeDgUfEw
XWcEtL7cKNzuE4EF3TOxpn0g3jJwYfMaXRx9oDun9nekLXZz2KJXo1jtWwDp
WglCv/0JcGOfOp240gfD3wwgMWI837s2SfhiqM5zlveBVSGa+MzZi0P7DRcK
h2+ivC0HRaVFZeKe9bMh++EhNr66BUq+maBGQ6Lgf2gsGnXTI9cVDEGZEt4U
dR661Waj3eNxZNSVRPOgjOIfLYE3F8vF96VuqHD8Kb1zi6S/lI0lxafgT5UR
ZeXEoBipwLpbnYRZDoO4Ykms49Dv18R5f5voo9E+uvKJJBNnrOWmx29EWysv
0YltKc1zA0YtioQ70t3oF1MOdnXXSLrvqthhFwWeR3JJOlcKszdHwINbt6V/
5/uQulIMNG+fxyYOVhyy+amw+EOI6D33BeVGydJgkGf37x3Cy0tGmGq6mFeW
TkKj98+g+u15mOS+nb3b7wgDrXti17E6wX66DluntoBvqR3ImF+gv4mdQvc4
C96wpzcf+NYLjMOsada6JRSN/XDDwWKsXH+F7vz8Bd41Npw24AFMDJjCeQm1
ZFGSDOOHWLBRkKewUmkUdzulwkc15/AMowmwYoAy3mu5RXO1v4t2/j48ZWJf
cUzZOxpxL0li9sUXVxb4k2TASk6YZkIK197TlwFIZet20NqWj+KWAXZw+lMa
WhUZwiSv9ThiVSruGOvJPnKnyXTYZNplPZQd94hgsP8PnCi+S1vWhdOcZ5p4
fa4EVU/FgJz/YmGJemXBm8xYMspLBnqiiopxB9mzQxXXd9fGfeN68tEvShzl
7cazORiHe8RQx8bbQvGad5C59AN8ljvNt/zX4AvjiRxjaoQbJhrj4pHzQINc
6Wj5VDj3yV+8tr9C9JMaCeO6n2dnz3ti3m4FrlXv9U8bjggyVWni2Bdb+ZP3
TwqPnI6jtevpQepwXnp8FsQr+YihT7R4+xsJzDKy46r3dmwlG8naT7zwj8Uh
XHZ9gbBdWY8vvGwR9WyH48T9NwW1410Ez87iolJTkJemw51kdaibWi89s2Ye
XehIoFNzfkGh31np3JMJvKJ9Hbk8DBcPuvXEokRVNJydRWdafTlWVo0rLDtp
fIMpv51pASX/dvJ/iZZ7n4Dl7R7cPHM0mOrcE47vXixVM90OHf9F8cCrP2Bt
fSBHnxvOV+xiacOoYUJitADONJw3XJXhyLUDqZfjM+Fdt05oyd2I9v9dhxnT
a8n1e6gwJ2wZ6Za103l9Of5x5Yp4T01JbJcEc9KxmXho0gr4NXO9pPrUIfJd
8oW2WF2HfvsP4BQXd1a+/Vfwj4qHlWlbaXvWZ4o1bqdpmlt4nksYtE2NgHNh
s/G0dZYY9NYJWpv3gN9XwNY+CVToRdJivxlsbfANpukcLJSWHMfOf7fJX+7C
wXlJYD49gwJ+KeOBmImcnhYP3Qcp01uFUuKg+dhnhRHbRBWIfZ4r8Hml+0TW
/Vj7s31haHMdqM1FLrYdzz88LOnlZCuM/twdg9/3JbdKY+xdJeChr1M4MmcA
T28eIi6581aszLIln7urcPzQH7Bdx4qPLCqEPNfDIEFbnPawF9zOeEa5yeP5
vwADPurlRv2vLOdJx+Pwu/454f5rZWwY7wZVcV8h06AJGoYxfIqag47R90i1
z1o6Mb+LprENfXV8Qkc0bkD3rSXS0M7DYlSJHXeMMWHJLnM+a1MHOg6t8Pbs
IZpf8pb8jd4JJeldgue3+XzyxwNxSUs6Fa25jx62FdRau5W6Lp+X9ps7hRO0
u6QyuQnS04nZcNf1Eq1bnMbLBXvqZaEL0Usjwb5YE50GqoOzdhzOuvRDuvJm
gFhkHSt06P4ku5MpENZVgxNWaXO04hlsrQF8OyEJQ3/Xk+wVBaofLgEVdSsW
fCLJbUYfft7YRwiSfU/Bj/eQSrIxhx94LprfeSG8WT0V84bM5Cj5Lmi4YAcD
nv7jpi+p0KnWm6cEauPncEeYP9oA7tr3R4+KYJqjcV6yPqcZGqNvkIbOe8nI
1Do4WHhMdFtdIkh/9IFRqbqovWwW5ex/Qjax52Gqwztxe5s6bvtvLR04p4Lu
RXk01MaQdzl05+CSONhra8Bfjb4J3aqWoF3VZUgfGcZ6G35Dp2WJKJxtpODo
MNr8oh/QXRP8paIjqt2YeVU105CyimTY/vsdOBu2H7aXHaVVvRPEbRlfaNTd
oTDz/hlq9BXF6Jd78WaYEyiMWQwKWivEGwvz4WWaO4TEDsSB2m9Fm8OvSSZS
k996XWLFoFvgN6YfZwdkCc+jd3Nqdi+YefmFoNQ4hAca32RXzUrKbKoFrYZK
xxHdd6JO7GieNlCPXWPq4OYID9wxNQ+2nbIAm4i1PPGILjuvkGLGsQWgGbQV
VXfn8PXk8ajkFI5De87gW37yOHCQK4T5fBbONF/nQboxVH3rpZCnL4vH3GWx
ZfoRSU52FqzZKYUx7XM4+pcrd1lJ6e6ZfCg4a4NuF9/DeLceHPQqE7ZfbKdF
HjuIgrRRV/eUIJ6fJ206PwGcN8ujh9BBz7o9oJFUKtw33IYxv9KEvJNjONt5
MW4uOS/cPt5Ar1SSyNYzQ/DQT5I0ZeTBRKN+ZLHDnl0zLOhSaKEwYJkN57jo
44xREZLvT3LwU09PtHygK9g1J8LOcD3MimoCFxtF/HyoF76c4cRrniWhzjAt
nHfFiNUcVSDZ6rNYM18qXpsmg4Pk3oH5wGck1ttSsm0P2tJ9GjpkfYCevU2p
Ueev5LbaaFSyUMc5mX7Cyy49WFjWE58+rKVh7vniYM0juPjkd9hkmiz+vJRC
noWBuPXTVUjWrgPV8r308N0zob6bGT1d1IMjpqlLfD9K0ChkKEzM/y68fm8E
62UyOEpFGQ0Cf1Lq1QPk8FGRu+IXg7ybMQ8Yu4dkX8lh1Hhnjrv3B7x+h7JJ
QBro/1AD06tBtCvlGCz0uAqXtgeKLYen8OYdqRShtRR++5XAoIpc8H1nzvs8
ZaVX6lsce/RqE2uiHDCsaTzLZvqD/9zfMGeti/D4xQg2qjPDxzX7pfMKdGD+
2AskJ+hwQXgAVF3ox9Mu+KBZwjfanKQruJo4cUhRFjWOLqO7vV9TH0UDWpA4
AH/3dObzO5XEtpDRsNpgEb93WI1mG1Vg81NLnmCkAFG+87B4eB9q1BrFqQFP
YW1SNSe/mSemdp0Ujq17JESMzKA1Xw+Iv0p68Kb0Z+I5hefwfr+JaPlqNPe4
sJo6ZrsI/W/JibXTL4HFlBqY3CedWn8+osRUbXwljoSDPZ6Bam9lMdOvlRrT
vpC08Bd1tAgcKZjT/N4mrHlgCuHzFBTSE3l3SCMtnvVY/Lb6AZksPAom4MnP
v6WTqttNOrY1nTY+UODMlBBYc+IKqwT24KFaO0GrPZumhFfDNSsl/pv1gi5W
tsOG0Vb8UfOt2PX0OtWFhoObcTIcrhgpfvL9DaUlejy6dRf2659NeS02LOmr
iA/HmGP04K3YYG7K+g+PC7MuBrK9ZCjuXrARf84+Bl1/CcK6n4SJfwO4VWIJ
R89NJeur3fjv8T+SIDMZLi5+RAuSC6h61QsyDt9AFiER9KvNi64M+wxLlLQh
p6cSXjXeBdKTA+iGZeM/beyEbvfXk9VSbT7jYAbOty5Cwq4jcK+7HxpkSCH2
WCvcuZdLY5UMsbdVFF2sUUbu0QRdbZNp2EZF8h1cCp9MymlK/SEccWEtmq30
xNPdDVnjaTfs/Ocls5o3QS/P3fR4SxMkb6tDg+LVUP9yG5hzl6gor8khUW/p
xfMSOqFpgue+5wo415Cbg6IKy/cH0sn8BG7YqoyVnSvB8a4C9/f6IT2hFg//
jRJhpXwpNW0NAYnuDDY/OpKbz9jjqmFnQLewN9MYP+rzQRt6H7GCqrOIrx+/
oQl3TghqvrPY6cxkPJNUIagk3BDk4q1Fa2tv4VZ3d6l9jDqYf16G6Z8O8vrl
kdRvci4N1vtFVxX12HtrEj14bYG2Id3Z4m8W9G1xwrNKoyjcaR1sHOcJlwcY
YX2Xm9R5w0doyPHGak0jnnBtHjptugtbq4JR2XMyhjVOo2/rT9KGsv1YoesK
Gqnq6OhTLuTmFMK84U7iMZWeEvt+QzFBYxEbRKzEEVJ5ts9IEzRkvHATemH4
ihrxpJkqBoxXxHlN2lwbrMYmPI4dQ55Az4ypeG+xHsddXyT6TfbH+MiepKje
AZ8P+vPzKjMMe+lA64X3gqwFU/knPVBySSR/9XuC7dBwWCcjg2cuvBeP6xiC
w5pOOjbS2HFV1h6Qq3grGbt3uzhXeybLll4X5lSela6achI3xobStnZNHn2w
horWHRALp7eJw3x3ktKoOSDf9w+5ZP7LSEfGgeIcQ7R9uxdsDuvg4IBk9BjW
KdkW+RgKknrjjbO7qKAknwa9zifn2MP4ScWH/1oY8v2M3bRmgZP47eUv+JN/
URp5JBbN9k6m6a0evLssnuSUc0UDp1tgYeQMk1x70nojAyw6LM+ng2eQyRdX
R7HBiP2OXqMjq9+JL24eo19Hk/GSs58wSX+SYNhnF8ct38ptVaU0vFpePHRg
plT3Zjao8mJ6lm5Mw6wbIDayQfxaN4A3nn9Mo7wnc3G2Gyh38wVHmTya87Mf
KusNYkWXAFS/pcB3txZDf5coSOzsTjv2hoJZ22tx3tOzwrGl23DjzH0kk/1I
utDeR3hfH4gf8zO4TXWbGD7bCMcsD2ftqS/h97A+4usUE9qZ7y8MK8sh7Wsq
uMnYmp/1PyW0uNwVe7RcJB1JsfCyRkHy7VaT2FfjnPBbeQyOOGCNyfJ/IO/C
QNSvPkNbfeOEY3kjeM7Zm7TFLFu8rDSdL1tvJDctW16k2SjWjbRAn/+G0siI
epxnJ8t1c2vF/2KG0PfS35T6cQXd3GhIC28vF+efkhXxuA+57D3L0r4OKPfJ
Hr/DIaiJ7QGlT8IgtKM/r946HxW/+vLImiHw3fYLzAnsx5PkVNGPL4FGpg7P
/bsXu0d0E2r32dC6KmVymTYBbAJtKKMV8VabHE6e0FQYPD6ELsVFod6i2eB6
6Y1w7mg5Kc915aq3llQdaslPde8I86cMwQdtUzHt+giEN8105clmnhKTxjss
v9IKhQLpjubhnBjjKqC/HJ+64AtRqjvZfIUmNrqPQ6uzlsLeSSeEVxcVpTsr
ZRFszPHkOjOsum8tzI94TZu8fWmZ9KxEUfqBKh658tP7H8RB3zeA7PgVIPhV
woi5DhhzxBQW3NlG6+qGw8a3J8T28mRK366Py7QEXnE84R8zv6HUM8FCzORL
ZP8wh3JmpYmmezzAYm0/rmsjDgl6CEXr4mCqlTK2tyriT6OVsLL3FJT/9BPU
wqLwvo8j52c5oWFYHPQq0qGzG2roh1sf5B3uNCIiSXT+05+ebN4uGDn3QP1i
DzTYPpgK3GPw3LZM2pc3hI3Vg3jAOUsc8PITJSxIoaEhe4Ui79PC81PKlDxX
AVbEyUvk9+6moIi3INlph02yi0Dnxk7SmGROWsrxlDp6NR9VMRPbh0SKZR5q
9OSFDI9tT6HnO6Lw+pJ20d02FzryksVe+Xb8ZXAqf5JdDg+2eHOhZx/s2bMQ
mjsnwcxJEyidDfFzUw7Up5uwwa37kN73HozzVYeM3UbY4708nl1UAqFDLpNb
+Us6qPkEWl2AvDONoeVeJvnHOdD79WVC/oMWKNJwkaS2B0g++s4jrZjBnPtK
nTddXY/7CyNZ5rkWq4c54KwHOzHbWY1+xg5nOdtozHx8kPZVKtDQNafoYI0s
HlV2RCe7f4z7sTeuSz0KmCbHF2AU1uxVE147huLOE+NgieI1Ng2ZDsudX0He
8e3UY0UM2/XNhrfVS7i404UvhISDd1EK7ti+BuxTAoUHOBwDdk+iBe0S4fk5
c05YpssWt3MoZvQsOjk0F641l8FTyRaxvmo493nZA3sq7pOu8ikG4WCSGBoc
iYdXV9J8cRgqzArF2aPf0yA6KLpp3aX/pjvhgetOpC1XQhkbO+jA0CDxT9Bl
YqveqBD0CCo6pdCTrTG3cjDFYCnsPh2MsTet6V2eF2pUDEGlKc9JOCylojhz
DP5ZyEPnHqDwLD8w2PpAmDcW+Iz2eSqr6skfEzIpvvSoGPXmEayMWcfxOaqk
u0GfMra/EQbdKYbv+ca4ujoEpiRkw4UMUypsWEALdXoXFm6L50Mn30n3SZQ4
8+0ZabmkQCLjPRVvnzogVoePo5cLPoq+jZngE52IutuWsN+LWMiM/E3/beuP
N1atw9wRAg74Y49fbeowr8uLNi2wg90JPQUhfif4ljXRqdCdHDiiWvRdEc/g
tgAC+uUJi0+Fw+NFN0H/eqk49UUUT+sri0t+BGCGYS3MW6tOo90NyCd+KXZs
ucISv2/i7IhA0LQ4Rxbee3nwqr1QkRYlPMLdkOA1Be4nqlLykXWkfX0sVkc0
wRdDFSrLQjwp3wC/NG8LzodH87AUKZm1Wkru+D8ndR0rKNsiQmyEIdsvHsGS
f7/XLfjH0qalsP7BTijP1aNNgXa4qsWYF1as40XjB0EKy+DXVYtww+0FXLQ0
DlL/HgPF1C/wcWck0kNbckpdyMpLT0uGtOliP11NXrJMhe1sAf3S0tj26Gu4
dNhHlAvdAzW6vTDBT1ac/WQbhBgr4jjZKXQwxQMz9zaDz9xYNh09kRWn9S28
PdYc43KzWJo3Feeo7sExUlme42aN7ifqacDsCl6Vsg+MRp2mjYM2Ca0K/djn
4STq0KiEjIFLhHrby0Jmv3850j2MV44ew85jB3O44kb6vb6Ixn1Kx+MPpoln
j6TBysMZNCNMB09Fd4rb7o3DtugMelbbDlv2PBGeVP7z5v/cKDM5BrrMbGBP
aDB/05iFsReUcFmrKe47hDD2bhqcGRPDJkIU7dyj9U/fXkBx3B1oudAP++zY
TY1ntXFqznVK9pmGW54G8C1Pc/ozQ4eCzM6Lbe4jxJ7FgbxqlpK4+2sPSs5S
Ibd/PizjMwGqcu8K+0fcpA2pAu1qOij82JQgZN9KwcoSP8wqD8DeE99C9DsH
XDujTBibnkyrW47RlVcd5KkbzZXCCA7Y90jgclXeOi+S5HTiydV0BynFlgoV
/omo+duGrwQSKPoMovLjUjAatJxNT8zD930y8eJ/ylQcqcj+bnlgdSoYvky8
ApN0Aik3Sx27eyRQgHk5zX+aJVivdhUNAlX5Uujnq17eeUJ0gzWVGB+F7XGf
wKnlJdhn7uf2+KNkeOsDXZ+cTT88tsKh6774I+Wv8FghE2rurxv5IYnAZvlr
YZzxdXrRUEkFi3pi3Vxndq0fxje++oDthZmOv8veU5rLVHTdfESELhV4tPQz
vZZWwpiJYWCktIBV/+WCdeO6YUmdGlubhNLVOkNONdSA0/67WeFZMG+YM4u+
BxeRdEkdXP1ui9nfqkk7FMReLpZ8wLIIVERbdHEspakRp7A1JwdWJymiwcBc
3JBvh9fvRFCYYZDwZxZTh14PihvTD83n7OeO5zKcrPWAbKu8KGiLADsHHBEt
M4cUrjIzwCe1skS/7ot7xrqg2vc+YOc3DOsfrkaV3xnitqQwlKwfRllu7igZ
zRQ3IZtGHUvk6z/jWLsjHn7EvxR09/5jl27jeYeWDCZNicSv647S5/4VsHfu
A0G790U48uQMpiRNYd/h9jzd1gTfvqmA/qUJYr+5q2HGQeC5q2pg9ZIW8jr4
CnRHL4OTJY6wOSgEXt2+Rx/XfgX9Vctx75jjSOr10FF1QLjtEku2V+6D4rDJ
+KdbA6WcOCVahxpjo6widt5NxGZNB3pYvoP56T7hw3M5GNTkxzfzHflo9CY6
nbKQrWULJOdy5NjxQ3d21ZZgxjUN2r1nirTyy2P6fi+Mw0fqw0L5FGHg+wi4
MO+d6HNlE2oP/SpkvdxH7ivUUK5/P9445L7gF1oGRr4m3LPgBiv6Xcb+jmvE
oifz0a99Lv8YNFJ0qDiGR/tECHs/GPLHAFO+MUsfNzWOwx23nXnx6U/CziZl
yrrxU/geGCOqigupY9kCPmxqB/39pqF+z0N4/1g4dPoUwFu3QYTupfBroT5o
nDUVw8e7sln+dxEzPcXLnXr86rUWD1sgg0/fveI3JbJsPihc8rs9hH2ndpLv
pmNoNTsF01utWXJ4BI8a70Rf5J5jptYACI/WhUNtsbT14TlH9+u9eWvENqi6
n0Nbah7CEyEFf2fucfRJlKeqIdHUnChDJn9SRTjYBrWO5rx9V2Whnl0Ui/Gl
oHLvjHhp+nD88rQ714faoVXTKiE60xL3X77lKPdFB7M986VNRc6g8Wkib2o+
hTJDPRBHfKapq+eh1vjDoKcyDKMqZ9Pomd/Fahsb6uTwUedmaeDqLQRWCzfz
7/OPoeME8MPM5/TocyPAlmy4/N6UzKIn8c5mZXY/PkrQnrWcL2xV5zTbb/B5
aB0ZXVgHH3INcMEkZYhW60HTj98nFecwSO32Bh4nJQoNgcbgfVWOnJUdyeJo
K96S3ILHryxI/2a9VMeqCP7wVLJYZsHLbx/iXwWyPEMlksoUz4DnoDJRXOKJ
3sJw1nHoxlaZu6nZ46/QkLkZhqgu/sfLelz20QXzHm7FMRf3g+Lu5YKPoTmP
C70LQuFAWH5JBCvPdoo7vwK8YbeodU0X7n3Sx4awafDoSijK2RcDLM4Xm2TS
yVn/GjxYo0cTdiyVdKg7ck39fI5ash8c3n2j/NoqEB8FinP8ZGlvoAaNat0h
jvTMgIEbPlF0UbvwjLroQ8BmsFIroNM7bour5e6Qya4P1NIVhSsS1XCPxJwL
7iZQQUAR1zUNp+9+AgZYTuKuDxL+7bVL3JQwi84WaEglp/wx5VkOdZeTo5IG
D+6zzAjumnVxoW+M8Dx2IJ1KUefnq3MKFTIShZqna9h14zf6krOebEsTSP/D
bNrSHgLruILGkx1W+f0R3s9LFbN8rpGDf+/Cl3W3aNlbG3CdbiB5aPCNTibo
sM0vV3aaOIuMX3myRbEtusJFzm3QpaQXzuy15hmY2wahUYsS1D38Ar2tvYVm
nQnUb4Qel2ytpzm/BvOsc8Fi/rRSrphaBYdlIuHjvgIIebCHLq8RxRWK5Y7R
+xmSZwEH5Ieh0jhdPLlwAf1KK5GqPrNhXxeGic3usEm+Pxq9P0zDt68kA88z
gKfjKGWUO7vMCeYt7YvQN6qeJ3j/JvlX82npaH9Y8reQW1bvEscGbRQAw/mW
x9WRi799pBE7HsDQxhti6qFeeLruCbV3qfLrjWrkuyaWQ1wH8JhZbuLVljGY
3kOWTnkXUfjt/pxn+Yu+1h4W91xIpqBxgaRS4SO4zOjOPaIj2S54PdiX9iYP
00RckOzJuXdr4OWAA2KU0kBUa3knlFieg6qLP0jmcQDOHDUd/ywfxLuOjOGl
BRfBanQQ7TVspqy2OOFsaSW1ikH8oc89qDhcLVGv2inZbWOBeYeHosfRCWRS
FQ6v36TDHc+JrDL4MCRHeNJ/Jc9pc9V7cdpIZbxtWMgBv95QcNx/eHt6NVW/
iuPak7p4+206XDHJg2x8KCQq9IFN1b/FdTccqNc8BVxzL42++ptxvm6RmP3x
Dlxt3kLh315KfHxTuLnACr/8kWczlW5YpJFCAbeDidIPgWp2N97wowoCDj4R
BqT8paLJI9lENRZCDQ/RvT+NtLQwAO1f92ePx5dBL8iBS7a3grxeD5i+Rotr
xUh+vNCJ69Sj6M6YSFBqm81/N+0A434dks/fpZA5sxycsmtpmu0GYfazTwDD
c4SxkXrs0dqNjR3L6bblGbwwJwvqL4Zisn4x2W6y5x2HT/G5rr60YHIwnBi9
G+0mPRMS7ozhMfJeNGHiQ1K5s4gm3syHnOAs+nGxE35e06K0jAb4LiRixuUk
7Ok7CitUboHp1sdilt9AUl2txDNr+0NT8gneH7iBOm3duW3mAYqcX0TellEo
r7BQHK8/XuyRFoUPtHzw1QYbHJvbDR1bjpJN32vUEabG516OYQ2RRFp4nDxq
O2D2AX/IlpFSu0+2sDJ+OI+QXQhDrrULcpP+kN2sh5D01Ac1h7+mQTtNeFre
V/KI/iqmOMTQ9MAwsh+0C13Xl4LGy3jYt2MMDkqQwyTnH6KlVb5ENaKL7jvU
Cj1HLoWo7tPoe79o/LnsBzS9RyhR2Qgyi6dQ1uoagabNh8na14SP1sdpgpUZ
FdQPw8mvBFA5/1cq03OzMLMiEYMOb8L0YaPEuGYzrp20gI91ZAkja7vEJt8e
fGf+FxrhsRIavjrj12ZNVvd6Qze2n6U00zYoWtH/HztIxc0P35PtpPeU3T0P
lhwy4D9h7nz3mRrWpGjT6h+erORcIloqd8Ia72b642UELzc9F3J6lcGj6On4
OlWW59ZGSRd4BNFVzRgqem4hGPoepUvqfWnDnEgcozGe9drUqEzGgOe4h8F/
kXLUf+5FClT/SfvP63Jj3+tC28kQnu+7lqPWbKSLbyqocmQffLDnDXxOXEYH
Bxyl9SMvoE+DLCxRnkore2kJ+Zah0PAoQ1Q+qwnPuutAecNB6jbyLy2bvQdW
vr1OXcE51Fz7hJzOyED3cH2qjw9gi701oqHlXBz4eTk9fHWfdtRnocXPLoq8
skqa11BGTx4V06EyOaFtpiOqnc0QDHqMZ80NE7C1YLZg01+LdsmECkHT7UDd
ZQSFN6iTfi5KXroMhPKinfTNwZEzq5XZe/5gjjnhAvqvrEBbGYS9xn355IHV
NPlIOrmK3eBrXS5G+SpAwJ29KOs/gXJjM2GmkEBy5/VwQWOb4Hh5OKrNThK2
unqirOZJcDa9jIE141n+v+50RWW96OjyAYoL00Cmlxf7VfbFLRJ3VBgYRIfc
b0Fo1CEs7C+D0vVz4Mp3KU2x9IcQlcs0bko/vK86k/4P21EBaQ==
                    "], "Biases" -> 
                   RawArray["Real32",{
                    0.005410715937614441, -0.01599864475429058, \
-0.012356334365904331`, -0.0019229502649977803`, -0.007912768982350826, \
-0.00126570463180542, 0.003363359719514847, 0.00792764499783516, 
                    0.013893168419599533`, 0.005173259414732456, 
                    0.011369266547262669`, 0.017860183492302895`, 
                    0.0115943793207407, 0.003669050754979253, 
                    0.00040802027797326446`, 
                    0.007683065254241228, -0.00001977363535843324, \
-0.0014695654390379786`, 
                    0.014884470961987972`, -0.0012553277192637324`, \
-0.0032390437554568052`, 
                    0.006286051589995623, -0.011098824441432953`, \
-0.010812340304255486`, -0.0026847096160054207`, -0.014801149256527424`, 
                    0.017792388796806335`, -0.006464314181357622, \
-0.002623572712764144, 0.011417768895626068`, 
                    0.010380287654697895`, -0.013666956685483456`, \
-0.006392901763319969, 0.0034489280078560114`, -0.008446968160569668, 
                    0.0041366745717823505`, 0.00017079095414374024`, 
                    0.00804638396948576, 0.0008761084172874689, 
                    0.0025355147663503885`, -0.018615897744894028`, 
                    0.01630355231463909, -0.0017558278050273657`, \
-0.008287418633699417, -0.005215818993747234, 0.003731731092557311, 
                    0.004112285561859608, 
                    0.004349738359451294, -0.002947157947346568, \
-0.013766915537416935`}]|>, 
                 "Parameters" -> <|
                  "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                   "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                 "Inputs" -> <|
                  "Input" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                 "Outputs" -> <|
                  "Output" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
               "6" -> <|
                "Type" -> "Elementwise", "Arrays" -> <||>, 
                 "Parameters" -> <|
                  "Function" -> 
                   NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                 "Inputs" -> <|
                  "Input" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                 "Outputs" -> <|
                  "Output" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
               "7" -> <|
                "Type" -> "Linear", "Arrays" -> <|"Weights" -> CompressedData["
1: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
CSmxBZ35gRQrjhEnjA1EvZ9mmBNnSv8HM8Xrqw==
                    "], "Biases" -> 
                   RawArray["Real32",{
                    0.0085669606924057, -0.005816908087581396, \
-0.00622056657448411, -0.006515318062156439, 
                    0.012642390094697475`, -0.006272400729358196, 
                    0.007060045842081308, 0.0009837764082476497, 
                    0.008454084396362305, 0.0091059859842062, 
                    0.00019714095105882734`, 
                    0.002886500209569931, -0.007333200890570879, \
-0.0004301410517655313, -0.008454633876681328, -0.009274411015212536, 
                    0.0018094265833497047`, -0.03375590220093727, \
-0.014028504490852356`, -0.01576893962919712, -0.011982426047325134`, \
-0.007978128269314766, -0.00908033549785614, 0.010301726870238781`, 
                    0.0027259038761258125`, -0.014227363280951977`, \
-0.00851190835237503, -0.00037052982952445745`, 
                    0.00250793038867414, -0.0047514960169792175`, 
                    0.0021296311169862747`, -0.02267507277429104, \
-0.0006968285888433456, 0.007618354633450508, 
                    0.014515720307826996`, -0.00630565918982029, 
                    0.0018882949370890856`, -0.005293709225952625, \
-0.018618926405906677`, 0.016609342768788338`, 0.007530746981501579, 
                    0.007625256199389696, -0.006014507729560137, 
                    0.007178816013038158, 
                    0.014553128741681576`, -0.006171787157654762, 
                    0.0012284301919862628`, -0.011954723857343197`, \
-0.003772728145122528, 0.012225142680108547`}]|>, 
                 "Parameters" -> <|
                  "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                   "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                 "Inputs" -> <|
                  "Input" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                 "Outputs" -> <|
                  "Output" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
               "8" -> <|
                "Type" -> "Elementwise", "Arrays" -> <||>, 
                 "Parameters" -> <|
                  "Function" -> 
                   NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                 "Inputs" -> <|
                  "Input" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                 "Outputs" -> <|
                  "Output" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
               "9" -> <|
                "Type" -> "Linear", 
                 "Arrays" -> <|
                  "Weights" -> 
                   RawArray[
                    "Real32",{{-0.14669808745384216`, -0.03554145619273186, 
                    0.2883146107196808, 0.008508309721946716, 
                    0.16655868291854858`, -0.009286974556744099, 
                    0.05655810981988907, -0.030504625290632248`, 
                    0.058353569358587265`, 
                    0.02896176464855671, -0.05086623504757881, \
-0.025510365143418312`, 
                    0.3212010860443115, -0.4679584503173828, \
-0.15340545773506165`, 0.05453438684344292, -0.4052717387676239, 
                    0.16635684669017792`, 0.1012515276670456, 
                    0.08590944856405258, -0.3113340139389038, 
                    0.20390158891677856`, -0.021941184997558594`, 
                    0.14965033531188965`, 0.08241142332553864, 
                    0.05206910893321037, -0.07593682408332825, 
                    0.07982836663722992, -0.24622854590415955`, 
                    0.11494533717632294`, -0.1424265205860138, 
                    0.2204093337059021, 
                    0.21960042417049408`, -0.0022403772454708815`, \
-0.18525436520576477`, 0.11654142290353775`, -0.011941192671656609`, 
                    0.08550712466239929, 
                    0.03390452265739441, -0.024824095889925957`, \
-0.15898685157299042`, -0.15905553102493286`, 
                    0.09315269440412521, -0.38257381319999695`, \
-0.1475590169429779, -0.009955892339348793, -0.07568862289190292, \
-0.07195841521024704, -0.012298707850277424`, -0.03176585212349892}}], 
                   "Biases" -> RawArray["Real32",{-0.003006062936037779}]|>, 
                 "Parameters" -> <|
                  "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 
                   50, "$InputDimensions" -> {50}|>, 
                 "Inputs" -> <|
                  "Input" -> 
                   NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                 "Outputs" -> <|
                  "Output" -> 
                   NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
             "Edges" -> {
              NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Inputs", "Input"], 
               NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
               NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
               NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"]}, 
             "Inputs" -> <|
              "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
             "Outputs" -> <|
              "Output" -> 
               NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Outputs", "LogStd"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Mean"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"]}|>, <|
        "Version" -> "14.0.2", "Unstable" -> False|>], 
      "Training" -> <|
       "Optimizer" -> {"ADAM", "L2Regularization" -> None}, 
        TrainingProgressFunction -> {Null& , "Interval" -> 1}, 
        "TotalTrainingTime" -> 1.61598, "MeanInputsPerSecond" -> 
        6188.195398457902|>, "InputType" -> "NumericalVector", "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|
          "(f2(f1f3))" -> <|
            "Weight" -> {0.3333333333333333, 0.3333333333333333, 
              0.3333333333333333, 1., 1.}, "Type" -> "NumericalVector"|>|>, 
         "Output" -> <|
          "(f2(f1f3))" -> <|"Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "(f2(f1f3))" -> <|
                "Weight" -> {0.3333333333333333, 0.3333333333333333, 
                  0.3333333333333333, 1., 1.}, "Type" -> 
                 "NumericalVector"|>|>, 
             "Mean" -> {0.2289006333334619, 
              0.7531609000347783, -0.38489809835645766`, 
              0.0021722000731521753`, 0.0018086679846264998`}, 
             "StandardDeviation" -> {0.024567718522999566`, 
              0.34979307865674675`, 0.24486302601371027`, 1.0007092680619838`,
               1.000783622803944}, 
             "Output" -> <|
              "(f2(f1f3))" -> <|
                "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
             "Version" -> {14., 0}, "ID" -> 547806995614226278|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 3.|>, "Key" -> 
             "(f2(f1f3))", "Invertibility" -> "Perfect", 
             "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "FeatureNumber" -> 5, 
      "DistributionData" -> {NormalDistribution, Automatic}, "Calibrator" -> 
      None, "PostProcessor" -> MachineLearning`MLProcessor["Identity"], 
      "Options" -> <|
       "NetworkType" -> <|"Value" -> "FullyConnected", "Options" -> <||>|>, 
        "NetworkDepth" -> <|"Value" -> 4, "Options" -> <||>|>, 
        "NumberOfParameters" -> <|"Value" -> 20, "Options" -> <||>|>, 
        "ActivationFunction" -> <|"Value" -> "SELU", "Options" -> <||>|>, 
        "L2Regularization" -> <|"Value" -> None, "Options" -> <||>|>, 
        "Dropout" -> <|"Value" -> None, "Options" -> <||>|>, 
        "NetInitializationMethod" -> <|
         "Value" -> Automatic, "Options" -> <||>|>, 
        "OptimizationMethod" -> <|
         "Value" -> {"ADAM", "L2Regularization" -> None}, "Options" -> <||>|>,
         MaxTrainingRounds -> <|"Value" -> 1000, "Options" -> <||>|>, 
        ValidationSet -> <|"Value" -> Automatic, "Options" -> <||>|>, 
        "EarlyStopping" -> <|"Value" -> False, "Options" -> <||>|>, 
        TrainingProgressReporting -> <|"Value" -> None, "Options" -> <||>|>, 
        "NetTrainOptions" -> <|
         "Value" -> {LearningRateMultipliers -> {}, TargetDevice -> "CPU"}, 
          "Options" -> <||>|>, 
        "LossFunction" -> <|"Value" -> Automatic, "Options" -> <||>|>, 
        "ValidationSetRatio" -> <|"Value" -> None, "Options" -> <||>|>|>|>, 
    "TrainingInformation" -> <|
     "Reporting" -> None, "TrainingFunction" -> Predict, "EMIterations" -> 
      Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 
      15.056129751433541`, "PreprocessingTime" -> 1.066387`6.4794598355819355,
       "LossName" -> "StandardDeviation", "BestModelInformation" -> 
      Dataset[<|"MeanCrossEntropy" -> 
         Around[21.689293613250165`, 7.119320129561721], "StandardDeviation" -> 
         Around[4.470631080531977*^6, 1.9379883061443693`*^6], 
         "EvaluationTime" -> 0.006294627058970834, "TestSize" -> 2, 
         "ModelMemory" -> 97928, "ModelUtility" -> -16.273989322953067`, 
         "Round" -> 1, "Iteration" -> 1, 
         "Time" -> {1.090803`6.489291317193191, 3.252475`6.963758960557801}, 
         "TrainingSize" -> 8, "TrainingTime" -> 1.9952623149688797`, 
         "TrainingMemory" -> 5776280, "ExperimentCount" -> 1, 
         "MeanCrossEntropyHistory" -> {
           Around[21.689293613250165`, 5.034119541050982]}, 
         "StandardDeviationHistory" -> {
           Around[4.470631080531977*^6, 1.3703646731349144`*^6]}, 
         "IterationHistory" -> {1}, 
         "TimeHistory" -> {{
           1.090803`6.489291317193191, 3.252475`6.963758960557801}}, 
         "Configuration" -> {
          "NeuralNetwork", "NetworkType" -> "FullyConnected", "NetworkDepth" -> 
           4, "NumberOfParameters" -> 20, "ActivationFunction" -> "SELU", 
           "L2Regularization" -> None, "Dropout" -> None, 
           "NetInitializationMethod" -> Automatic, 
           "OptimizationMethod" -> {"ADAM", "L2Regularization" -> None}, 
           MaxTrainingRounds -> 1000, ValidationSet -> Automatic, 
           "EarlyStopping" -> False, TrainingProgressReporting -> None, 
           "NetTrainOptions" -> Automatic, "LossFunction" -> Automatic}, 
         "FinalTrainingSize" -> 10|>, 
        TypeSystem`Assoc[
         TypeSystem`Atom[String], TypeSystem`AnyType, 19], <||>], 
      "Configurations" -> 
      Dataset[<|<|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 4|>, 
             "NumberOfParameters" -> <|"Value" -> 20|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> None|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 1000|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[21.689293613250165`, 7.119320129561721], 
              "StandardDeviation" -> 
              Around[4.470631080531977*^6, 1.9379883061443693`*^6], 
              "EvaluationTime" -> 0.006294627058970834, "TestSize" -> 2, 
              "ModelMemory" -> 97928, "ModelUtility" -> -16.273989322953067`, 
              "Round" -> 1, "Iteration" -> 1, 
              "Time" -> {
               1.090803`6.489291317193191, 3.252475`6.963758960557801}, 
              "TrainingSize" -> 8, "TrainingTime" -> 1.9952623149688797`, 
              "TrainingMemory" -> 5776280, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[21.689293613250165`, 5.034119541050982]}, 
              "StandardDeviationHistory" -> {
                Around[4.470631080531977*^6, 1.3703646731349144`*^6]}, 
              "IterationHistory" -> {1}, 
              "TimeHistory" -> {{
                1.090803`6.489291317193191, 3.252475`6.963758960557801}}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.006294627058970834, "ModelMemory" -> 97928, 
             "StandardDeviation" -> 
             Around[4.470631080531977*^6, 1.9379883061443693`*^6], 
             "TrainingMemory" -> 5776280, "TrainingTime" -> 
             2.1947885464657677`|>, "Index" -> 1|>, <|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 4|>, 
             "NumberOfParameters" -> <|"Value" -> 20|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> 0.01|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 1000|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1|>, "Index" -> 
           2|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[String], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 14]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            TypeSystem`Assoc[
             TypeSystem`Atom[String], TypeSystem`AnyType, 17], 
            TypeSystem`AnyLength], 
           TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 5], 
           TypeSystem`Atom[Integer]}], 2], <||>], "TrainingSizes" -> {8}, 
      "MaxTrainingSize" -> 10, "PreprocessorEvaluationTime" -> 1.71875*^-6, 
      "PreprocessorMemory" -> 97144, "InputDimension" -> 5, "OutputDimension" -> 
      1, "BaselineLogProbability" -> -1.4189385332046727`, "VariableBudget" -> 
      True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
      False, "NaturalStop" -> True, "AbortStop" -> False, "RoundPartitioning" -> 
      Dataset[{<|
         "TrainingSizes" -> 8, "TimeBudgets" -> 1.6918980470745264`, 
          "ElapsedTimes" -> 2.251978, "ExperimentCounts" -> 1|>}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 1], <||>]|>, "AnomalyDetector" -> None,
     "Log" -> <|
     "Example" -> 
      MachineLearning`MLDataset[<|
        "f1" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {3}, "ID" -> 
           8467692391424180837|>, 
         "f2" -> <|
          "Type" -> "Nominal", "Weight" -> 1, "Values" -> {2}, "ID" -> 
           1153753162613013929|>, 
         "f3" -> <|
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {3}, "ID" -> 
           525854867134694125|>|>, <|
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False|>], "TrainingTime" -> 5.03933, 
      "MaxTrainingMemory" -> 90411816, "DataMemory" -> 1960, "FunctionMemory" -> 
      264448, "LanguageVersion" -> {14., 0}, "Date" -> 
      DateObject[{2024, 8, 30, 1, 58, 27.464457`8.19134599879819}, "Instant", 
        "Gregorian", 3.], "ProcessorCount" -> 8, "ProcessorType" -> "ARM64", 
      "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.861217715331965*^9, 3.861217910721914*^9, 
  3.861218901670416*^9, 3.861219090401678*^9, 3.869567638679812*^9, 
  3.929891871504787*^9, 3.93396110747828*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"aeb07027-8411-4d4b-9772-136d346b8ad3"],

Cell[BoxData["1.0532352742530745`*^7"], "Output",
 CellChangeTimes->{3.861217715331965*^9, 3.861217910721914*^9, 
  3.861218901670416*^9, 3.861219090401678*^9, 3.869567638679812*^9, 
  3.929891871504787*^9, 3.93396110750674*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"d6730260-e5b2-466f-9a06-e6cb9ecadf8e"]
}, Open  ]],

Cell["Which neural net is used?", "Text",
 CellChangeTimes->{{3.869567680202256*^9, 
  3.869567684677197*^9}},ExpressionUUID->"9cfa599f-0cc5-469f-a58e-\
428387f4126a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "@", "surrogate3D"}]], "Input",
 CellChangeTimes->{{3.86956771514972*^9, 3.869567718289619*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"96cbbc58-a909-4b8b-a341-1243d6ebaa6b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Predictor information\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Data type"], 
                   TextCell["Data type"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               RowBox[{"{", 
                
                RowBox[{"\<\"Numerical\"\>", ",", "\<\"Nominal\"\>", 
                 ",", "\<\"Numerical\"\>"}], "}"}]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Standard deviation"], 
                   TextCell["Standard deviation"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"4.470631080531977117061615`3.*^6", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "1.937988306144369300454855`2.*^6"},
                     "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "594654.4682432385161519051`3.", "\", \"", 
                   "8.3466076928207157179713249`3.*^6", "\"]\""}, 
                  "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 
                   594654.4682432385161519051`3., ", ", 
                   8.3466076928207157179713249`3.*^6, "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Method"], 
                   TextCell["Method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 
                 InterpretationBox[Cell[
                  "NeuralNetwork",ExpressionUUID->
                   "1a4b64a2-ce83-485f-9c48-5a6c7ec8180b"],
                  TextCell["NeuralNetwork"]],
                 StyleBox[
                  TagBox[
                   
                   GridBox[{{"\"NetworkDepth\"", "4"}, {
                    "MaxTrainingRounds", "1000"}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, "Rows" -> {{None}}}, 
                    GridBoxFrame -> {
                    "Columns" -> {{True}}, "Rows" -> {{True}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{1}}}, 
                    FrameStyle -> GrayLevel[0.84]], "Grid"], FontFamily -> 
                  "Verdana", StripOnInput -> False]],
                Annotation[#, 
                 Style[
                  
                  Grid[{{"NetworkDepth", 4}, {MaxTrainingRounds, 1000}}, 
                   Alignment -> Left, Frame -> All, FrameStyle -> 
                   GrayLevel[0.84], Spacings -> {1, 1}, Background -> {{{
                    GrayLevel[0.95], 
                    Opacity[0.8, 
                    GrayLevel[1]]}}, None}], FontFamily -> "Verdana"], 
                 "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Single evaluation time"], 
                   TextCell["Single evaluation time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"1.14`", 
                 
                 RowBox[{
                  "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                    "\"example\""}], "milliseconds per example", 
                 FractionBox["\"Milliseconds\"", "\"Examples\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Batch evaluation speed"], 
                   TextCell["Batch evaluation speed"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"54.3`", 
                 
                 RowBox[{
                  "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                   "\[InvisibleSpace]", "\"ms\""}], 
                 "examples per millisecond", 
                 FractionBox["\"Examples\"", "\"Milliseconds\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Loss"], 
                    TextCell["Loss"]], "\"Mean cross entropy\"", TooltipStyle -> 
                    "TextStyling"], 
                   Annotation[#, "Mean cross entropy", "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"21.689293613250164583`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "7.119320129561720556`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", "7.450653354126723471`3.",
                    "\", \"", "35.9279338723736074712`3.", "\"]\""}, 
                  "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 7.450653354126723471`3., 
                   ", ", 35.9279338723736074712`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Model memory"], 
                   TextCell["Model memory"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"269.`", "\"kB\"", "kilobytes", "\"Kilobytes\""},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Training examples used"], 
                   TextCell["Training examples used"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               
               TemplateBox[{"10", "\"examples\"", "examples", "\"Examples\""},
                
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Training time"], 
                   TextCell["Training time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"5.03`", "\"s\"", "seconds", "\"Seconds\""},
                "Quantity"]}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> 
           ".AppleSystemUIFont", NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  MachineLearning`MLInformationObject[
   PredictorFunction[<|
    "ExampleNumber" -> 10, 
     "Input" -> <|
      "Preprocessor" -> 
       MachineLearning`MLProcessor[
        "ToMLDataset", <|
         "Input" -> <|
           "f1" -> <|"Type" -> "Numerical"|>, "f2" -> <|"Type" -> "Nominal"|>,
             "f3" -> <|"Type" -> "Numerical"|>|>, 
          "Output" -> <|
           "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
            "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Preprocessor" -> 
          MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
               MachineLearning`MLProcessor[
               "Transpose", <|"FeatureNumber" -> 3|>], 
               MachineLearning`MLProcessor[
               "WrapMLDataset", <|
                "FeatureTypes" -> {"Numerical", "Nominal", "Numerical"}, 
                 "FeatureKeys" -> {"f1", "f2", "f3"}, "FeatureWeights" -> 
                 Automatic, "ExampleWeights" -> Automatic, "RawExample" -> 
                 Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                 False|>]}|>], "ScalarFeature" -> False, "Invertibility" -> 
          "Perfect", "StructurePreserving" -> False, "Missing" -> 
          "Allowed"|>], "Processor" -> 
       MachineLearning`MLProcessor[
        "Sequence", <|
         "Input" -> <|
           "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
            "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
            "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Output" -> <|
           "(f2(f1f3))" -> <|
             "Weight" -> {0.3333333333333333, 0.3333333333333333, 
               0.3333333333333333, 1., 1.}, "Type" -> "NumericalVector"|>|>, 
          "Processors" -> {
            MachineLearning`MLProcessor[
            "SynthesizeMissingValues", <|
             "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
              "Distribution" -> 
              LearnedDistribution[<|
                "ExampleNumber" -> 10, "Preprocessor" -> 
                 MachineLearning`MLProcessor[
                  "ToMLDataset", <|
                   "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical"|>, 
                    "f2" -> <|"Type" -> "Nominal"|>, 
                    "f3" -> <|"Type" -> "Numerical"|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> False, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                  "Processor" -> 
                 MachineLearning`MLProcessor[
                  "Sequence", <|
                   "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Weight" -> {1., 1., 1.}, "Type" -> "NumericalVector"|>|>,
                     "Processors" -> {
                    MachineLearning`MLProcessor[
                    "Threads", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f3)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 2|>, 
                    "f2" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f3)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 2|>|>, 
                    "Version" -> {14., 0}, "ID" -> 5012684870820858898|>], 
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "f2" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                    "Version" -> {14., 0}, "ID" -> 9153322266525338993|>]}, 
                    "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], 
                    MachineLearning`MLProcessor[
                    "IntegerEncodeNominalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f2" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                    "Index" -> {<|1 -> 1, 2 -> 2, 3 -> 3|>}, "MissingCode" -> 
                    Indeterminate, "Version" -> {14., 0}, "ID" -> 
                    1162366167511204112, 
                    "Output" -> <|
                    "f2" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
                    MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f3)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 2|>|>, 
                    "Mean" -> {3.2, 1.9000000000000001`}, 
                    "StandardDeviation" -> {1.3266499161421592`, 
                    1.2206555615733703`}, 
                    "Output" -> <|
                    "(f1f3)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 2|>|>, 
                    "Version" -> {14., 0}, "ID" -> 6200083942681816230|>], 
                    MachineLearning`MLProcessor[
                    "NumericalizeNominalVector", <|
                    "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f2" -> <|
                    "Type" -> "NominalVector", "Weight" -> 1, 
                    "SetSize" -> {3}|>|>, 
                    "Boundaries" -> {{-0.5, -0.16666666666666669`, 
                    0.16666666666666663`, 0.5}}, "Version" -> {14., 0}, "ID" -> 
                    5792661806759522573, 
                    "Output" -> <|
                    "f2" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1|>|>|>], 
                    MachineLearning`MLProcessor[
                    "MergeVectors", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f2" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "(f1f3)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 2|>|>, "Spans" -> {
                    Span[1, 1], 
                    Span[2, 3]}, "Wrappers" -> {Identity, Identity}, 
                    "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Weight" -> {1., 1., 1.}, "Type" -> "NumericalVector"|>|>,
                     "Version" -> {14., 0}, "ID" -> 6750470251532865016|>]}, 
                    "Invertibility" -> "Approximate", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                 "DirectTraining", "BatchProcessing" -> Automatic, 
                 "Model" -> <|
                  "RotationMatrix" -> {{0.0037932055138514493`}, {
                    0.7067956842998943}, {0.7074075715222264}}, 
                   "Precisions" -> {0.7931979295458775}, "NoisePrecision" -> 
                   2.6122999968531686`, "Processor" -> 
                   MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
                    "Mean" -> {-0.023209989782543794`, -0.002570887451823234, \
-0.0023545013137543425`}, 
                    "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
                    "Version" -> {14., 0}, "ID" -> 8399028061257246145|>], 
                   "PostProcessor" -> 
                   MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 3.|>,
                     "Key" -> "(f2(f1f3))", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                    "Method" -> "Multinormal", 
                   "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 1, "Options" -> <||>|>|>|>, 
                 "TrainingInformation" -> <|
                  "Configurations" -> 
                   Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
                    "Mean" -> {-0.023209989782543794`, \
-0.0025708874518232117`, -0.0023545013137543647`}, 
                    "StandardDeviation" -> {0.16826709703528725`, 
                    0.9992995157454727, 0.9997074025848053}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 3, 
                    "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {14., 0}, "ID" -> 
                    4235126271145478721|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                   Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                 "NaiveImputer" -> 
                 MachineLearning`MLProcessor[
                  "ImputeMissing", <|
                   "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
                    "Mean" -> {-0.023209989782543794`, \
-0.0025708874518232117`, -0.0023545013137543647`}, 
                    "StandardDeviation" -> {0.16826709703528725`, 
                    0.9992995157454727, 0.9997074025848053}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 3, 
                    "Output" -> <|
                    "(f2(f1f3))" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 3.|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {14., 0}, "ID" -> 
                    4235126271145478721|>], "InputDimension" -> 0, 
                 "OutputDimension" -> 3, 
                 "Log" -> <|
                  "Example" -> 
                   MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {3}, 
                    "ID" -> 204740655057220579|>, 
                    "f2" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {2}, "ID" -> 
                    3882307596864950694|>, 
                    "f3" -> <|
                    "Type" -> "Numerical", "Weight" -> 1, "Values" -> {3}, 
                    "ID" -> 1471168733138764385|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                   "TrainingTime" -> 0.228482, "MaxTrainingMemory" -> 
                   49676888, "DataMemory" -> 3808, "FunctionMemory" -> 63224, 
                   "LanguageVersion" -> {14., 0}, "Date" -> 
                   DateObject[{
                    2024, 8, 30, 1, 58, 22.663731`8.10790638998112}, 
                    "Instant", "Gregorian", 3.], "ProcessorCount" -> 8, 
                   "ProcessorType" -> "ARM64", "OperatingSystem" -> "MacOSX", 
                   "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                 "LogPDFDistribution" -> 
                 MachineLearning`TailedQuantileDistribution[<|
                   "Quantiles" -> {-1.9371099448337294`, \
-1.9371099448337294`, -1.9302124262386582`, -1.8100993465361457`, \
-1.7693979378337712`, -1.599595074124126, -1.5162845485860437`, \
-1.4898897805014888`, -1.3573747578645072`, -1.329046653824446, \
-1.196102402717133}, "LeftBoundary" -> -1.9302124262386582`, "LeftScale" -> 
                    0.0034487592975356307`, "LeftTailNorm" -> 0.2|>], 
                 "Entropy" -> Around[4.780533861918014, 0.2469105948325327], 
                 "EntropySampleSize" -> 10|>], 
              "Output" -> <|
               "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
              "EvaluationStrategy" -> "ModeFinding", "Version" -> {14., 0}, 
              "ID" -> 616651398117295976|>], 
            MachineLearning`MLProcessor[
            "Threads", <|
             "Input" -> <|
               "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
              "Output" -> <|
               "(f1f3)" -> <|"Type" -> "NumericalVector", "Weight" -> 2|>, 
                "f2" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
              "Processors" -> {
                MachineLearning`MLProcessor[
                "ToVector", <|
                 "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                  "StructurePreserving" -> True, 
                  "Input" -> <|
                   "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
                  "Output" -> <|
                   "(f1f3)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 2|>|>, 
                  "Version" -> {14., 0}, "ID" -> 4638787354345331223|>], 
                MachineLearning`MLProcessor[
                "ToVector", <|
                 "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                  "StructurePreserving" -> True, 
                  "Input" -> <|
                   "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                  "Output" -> <|
                   "f2" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                  "Version" -> {14., 0}, "ID" -> 5896072734193971629|>]}, 
              "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
              "Missing" -> "Allowed"|>], 
            MachineLearning`MLProcessor[
            "Standardize", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "(f1f3)" -> <|"Type" -> "NumericalVector", "Weight" -> 2|>|>, 
              "Mean" -> {3.2, 1.9000000000000001`}, 
              "StandardDeviation" -> {1.3266499161421592`, 
               1.2206555615733703`}, 
              "Output" -> <|
               "(f1f3)" -> <|"Type" -> "NumericalVector", "Weight" -> 2|>|>, 
              "Version" -> {14., 0}, "ID" -> 6035134038152122183|>], 
            MachineLearning`MLProcessor[
            "EmbedNominalVector", <|
             "Invertibility" -> "Impossible", "Missing" -> "Imputed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f2" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
              "Index" -> {<|1 -> 1, 2 -> 2, 3 -> 3|>}, 
              "Output" -> <|
               "f2" -> <|"Weight" -> 1, "Type" -> "NumericalVector"|>|>, 
              "EmbeddingVectors" -> {
               RawArray["Real32",{{0., 0., 0.}, {0.219885915517807, 
                 0.17539280652999878`, -0.8660410642623901}, {
                 0.24136008322238922`, 
                 0.980949342250824, -0.2453247457742691}, {
                 0.15971672534942627`, 
                 0.3141757547855377, -0.3996261656284332}}]}, 
              "Version" -> {14., 0}, "ID" -> 8321939724124983093|>], 
            MachineLearning`MLProcessor[
            "MergeVectors", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f2" -> <|"Weight" -> 1, "Type" -> "NumericalVector"|>, 
                "(f1f3)" -> <|"Type" -> "NumericalVector", "Weight" -> 2|>|>, 
              "Spans" -> {
                Span[1, 3], 
                Span[4, 5]}, "Wrappers" -> {Identity, Identity}, 
              "Output" -> <|
               "(f2(f1f3))" -> <|
                 "Weight" -> {0.3333333333333333, 0.3333333333333333, 
                   0.3333333333333333, 1., 1.}, "Type" -> 
                  "NumericalVector"|>|>, "Version" -> {14., 0}, "ID" -> 
              2306911464051571360|>]}, "Invertibility" -> "Impossible", 
          "StructurePreserving" -> True, "Missing" -> "Imputed"|>]|>, 
     "Output" -> <|
      "Preprocessor" -> 
       MachineLearning`MLProcessor[
        "ToMLDataset", <|
         "Input" -> <|"f1" -> <|"Type" -> "Numerical"|>|>, 
          "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Preprocessor" -> 
          MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
               MachineLearning`MLProcessor["List"], 
               MachineLearning`MLProcessor[
               "WrapMLDataset", <|
                "FeatureTypes" -> {"Numerical"}, "FeatureKeys" -> {"f1"}, 
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                  "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                 "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
          True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
          "Missing" -> "Allowed"|>], "Processor" -> 
       MachineLearning`MLProcessor[
        "Sequence", <|
         "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Output" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
          "Processors" -> {
            MachineLearning`MLProcessor[
            "ToVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|"f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>,
               "Output" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Version" -> {14., 0}, "ID" -> 1446207408289683828|>], 
            MachineLearning`MLProcessor[
            "Standardize", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Mean" -> {9.691924520200001*^6}, 
              "StandardDeviation" -> {3.4577538206311744`*^6}, 
              "Output" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Version" -> {14., 0}, "ID" -> 7585370691766012665|>], 
            MachineLearning`MLProcessor[
            "FromVector", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
              "Output" -> <|
               "f1" -> <|"Type" -> "Numerical", "Weight" -> 1|>|>, 
              "Version" -> {14., 0}, "ID" -> 6807722100842594269|>], 
            MachineLearning`MLProcessor[
            "FirstValues", <|
             "Info" -> <|"Type" -> "Numerical", "Weight" -> 1|>, "Key" -> 
              "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
              False, "Missing" -> "Allowed"|>]}, "Invertibility" -> "Perfect",
           "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
       "ProbabilityPostprocessor" -> Identity, 
       "InverseProcessorFunction" -> (9.691924520200001*^6 + 
        3.4577538206311744`*^6 #& ), 
       "ProcessorFunction" -> (-2.802953889421442 + 
        2.892050885847799*^-7 #& ), "Name" -> "value", 
       "Quantiles" -> {-1.6000225433024347`, 2.413341849847699}, "Mean" -> 
       9.6919245202*^6|>, "LabelSplitter" -> 
     MachineLearning`MLProcessor[
      "FeatureLabelSplit", <|
       "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
        "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
     "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
     "Prior" -> Automatic, "Utility" -> (DiracDelta[#2 - #]& ), "Threshold" -> 
     0, "PerformanceGoal" -> Automatic, "BatchProcessing" -> Automatic, 
     "Model" -> <|
      "Method" -> "NeuralNetwork", "Network" -> 
       NetGraph[<|
         "Type" -> "Graph", 
          "Inputs" -> <|
           "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
          "Outputs" -> <|
           "Mean" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], 
            "LogStd" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>, 
          "Nodes" -> <|
           "2" -> <|"Type" -> "NetArray", 
              "Arrays" -> <|
               "Array" -> RawArray["Real32",{-1.1989428997039795`}]|>, 
              "Parameters" -> <|
               "Dimensions" -> 
                NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT], 
                "$ArrayDimensions" -> {1}|>, "Inputs" -> <||>, 
              "Outputs" -> <|
               "Output" -> 
                NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>|>, 
            "1" -> <|"Type" -> "Chain", 
              "Nodes" -> <|
               "1" -> <|
                 "Type" -> "Linear", 
                  "Arrays" -> <|"Weights" -> CompressedData["
1:eJwViXsw1Wkch3UhrINxKRyn6bQobGqOO+f9vkVNYtdumNYUidbdWbfJYbXG
LaRSdm21pejitttltolWfu/3LbnsqHWOppT7rrvdZhhmSU2s/ng+M8/nkUYk
BkSt1tDQSNVemYBw5a6UlPCMQK2PEhme4ChL+BhlK2iucG3qMC6H1AseiU58
XMeefv7tz1S2ZMIzyBL+8vIIufjSkdhEe3OHiTF50mQtUfqr4b7+Q/RO12UP
5kYgQbDAsNGnZKfRZRbp+FhIG0iE+QdK3jNwVq4+2IH7xjtwj8Eg2j0/Aupn
1lAytBf1ktbQhuQKMqG8CheIIf3rpg5/cSYX3SZ1uFlUGowb1XoMG7li28VG
sM7UIk3WKjwzPwZ7tAqIVUsdNhSX4IO8/ViYJIGihj62nU+RXb02IJ2yhOhj
XtStNoaVfuEELs6HIebfY/J3Y4FwfeW326cAP1YAEq8c2FTjCanvmrEA9eQH
Lt8jdc0ZNL0sUEj2ssCY95t4gFKD+0WEolTcwtA4j4jVMxgSuqXpToiY714c
IindDSRm5CrTi/PDN4GM6KtF0KZYBYb9b7Fn6STu3qFNu7bF0nXTeryu0JVO
pJ4G85ZlzGnKgL7c31j3SY4DzXlEtfYVXMrK59kGn9G8YBF1zJLiolLsYd57
C1TaUvze9S7cqtDG4kx9+p2LD59VmbLzR9fQ6M3VrK4qHr7smkefOUO6Pv0/
qPpRxpvL3Jksb5LtrHfGzs1TsL+mGFWrdOhBna3U6+5jvL5gRH0tW3F4UNVU
0GuGD9+EQlClLSwUMvK0OJw2j/mihbMPnuvrQdndQ1hJT8BiKeKGViloXwug
CeJuKA+WkiunuoTFGAfud6KSu0ZIeL+BLpRJ14Lqh0q44deF9mV/k9gtT7Cn
Y4lEvo+H0XxdHK0YRBf722TBfZZkROry2znGtO3Xb/DJKRFYWzVixowhNRd9
AIXGGrrukQXNNkQME5LByEGHL3mvp5n+Vnw01IxILsvkDfKvYB6nia+mBdYG
FbL0hVm4n7ixKSnfkNbFVbE830eQfjaOuB1dTRUP3dnwfk88EyQI0a7ncYFU
C42eLez1zCr+eroQ0wKqwNYpGd/uFvOIRlP4NC2WqEuDSHWmu5BdYktfFTNM
vHAJ6vfNEf2S54IIS8kNyVa583EptSr/CTb+cQfzNU6A7zIKVl7aNHjBBc59
/YJ02xyA8PZ6ZvP7n9haBGyqVEJrWvtZV+d74jRiyx0+SPi28njcENVMcseq
yHCYCXXsryNDlgo8fmcHc92mFP4pUYFJuxYxbjtNsqzEaOfZC0n6N2n2oXtM
XWnHNfe2s+0HTGnCFRPsLOyGwfspHIo+gdGnz3CoRSH4R7hA/4iI/g+L7+tO

                    "], "Biases" -> 
                    RawArray["Real32",{-0.012169163674116135`, 
                    0.009650961495935917, -0.013100849464535713`, \
-0.020143963396549225`, 
                    0.006052089389413595, -0.002029701368883252, \
-0.006044588517397642, 0.007693909108638763, -0.0053748986683785915`, 
                    0.009160751476883888, -0.014554915018379688`, \
-0.016858527436852455`, 0.013982144184410572`, 
                    0.014517744071781635`, -0.008336205035448074, 
                    0.004692817572504282, -0.0059677897952497005`, \
-0.0004948508576489985, -0.006720861420035362, -0.0016040425980463624`, \
-0.0015893345698714256`, 0.016085965558886528`, -0.013168460689485073`, 
                    0.008929909206926823, -0.00793275237083435, \
-0.013195402920246124`, 0.0012483586324378848`, 
                    0.015255754813551903`, -0.006633432116359472, \
-0.009408091194927692, 0.0070306602865457535`, 0.0049194954335689545`, 
                    0.0004956835764460266, -0.0009747766889631748, 
                    0.016394779086112976`, -0.008808722719550133, \
-0.015088994987308979`, 0.007704492192715406, 0.005776808597147465, 
                    0.005734359845519066, 
                    0.002242754213511944, -0.009465075097978115, 
                    0.002219893503934145, -0.006096228491514921, 
                    0.012610032223165035`, -0.013916024006903172`, 
                    0.00878830999135971, -0.01231926865875721, 
                    0.0029074775520712137`, 0.01287225354462862}]|>, 
                  "Parameters" -> <|
                   "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                    "$InputSize" -> 5, "$InputDimensions" -> {5}|>, 
                  "Inputs" -> <|
                   "Input" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                "2" -> <|
                 "Type" -> "Elementwise", "Arrays" -> <||>, 
                  "Parameters" -> <|
                   "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                  "Inputs" -> <|
                   "Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                "3" -> <|
                 "Type" -> "Linear", 
                  "Arrays" -> <|"Weights" -> CompressedData["
1:eJwtl3c41//3xlFGSJSWVZQV0kDyfp1nKCOVHcosipKSSColGVkhI0RDVokG
Kt6vcxRSiYZCaWsXpb3z+3yv6/fHOdd1rvPXua/7uu7zUF+5wXm1mIiIyCap
/5rzikiLsLAVUS4S/xtWrVg3e9a6/y1n/X/lH5SmgnpJSql1Zy9erkTzmiRu
iJMnyxYfPBNxibiyCPb4hBMzlrfASTOHw4OPmkzfI1OQE6fMkhVimfPDLVBh
cRfzjMoFOrmELmdUqUU3kYs4sAa81tShjsETnOczQbhydzr6JTmw+7mJQJam
lJj9Ge6k7MHTE05Cf14QW9U+lvZnm9PH32fg7ncJuqNRQHc8t5B2kA+OT5Kl
BNd8FsUJuabzJrT2uCNU9iqQn+cSVphiQJ2RUag+/Qi1rbGG0o97eOuBP3ht
wRX+Oa9Jk+uySNJXlPmnZrFpxf7QZDV17uSSaaAyX5v9sQvDrDO+fL3cZz68
vRFbfA9xrvYZYG5hDLfvSVFl13Cq/V4PZw98RJc+A+bwtAknDGpREXcSV4p/
EMoEb0KdF+ns48273A+ViSxkVTbc2xNBIRkuXOHpT1BS+EYoDErAFUbjcUO/
HzYXirMfWyeyLp94+G3ZgE+St5Mmp0R1lm4sa145zNE3gErYzye2PUbbDAW4
2xkDHTMW8Ic+13B1xY0gP6kG01GcDZ6PQ9F/eqDbPY+O6t9HnLaT7ihZ4eth
1fyCxp1YWZcBn9z92PnUyWQt8Y8Pu9mFfsebUE9tNr2aLwnRZ62xbnUMDfUO
Y2H7U1DtVAR+Ggc0MlNUsNOosuHjphwUd4rjjk4QYpyoGBtYZctWpXbgMpt4
ulEsRQdFRoKHlTQdNhdQieEZ3l5sKdu8cq5Asj6NdrR5U4LGQmp8X4aK4lFw
tvEVeh4xp4mhY1hEMo8PL/rClccSTLPrFZ6slKC5EzzQ1HoF4xOKwDMpifty
uBsXPrrGGVisYwZPJViBiShFKS0nBeEmNqhdhy89TNmKmNuQP/0u1A27aHYr
iiOvP0fZuhQem0pfcZOeKbCTJSbwOOcASnyuE/78vhu7FY5DelEMZIpVoNup
ckFBcy4dXfYBS3AZvGqYzVulPUOT+a+4deZaXMONdUw65yHcrnRgyrw6PNuS
hrLpU2lB+jBWdigeJp4cJWi6MBZ6XRrx8hsZdIiYQeoTsklF9B2vvNgLsipW
YeAhAY8+ZlQlthdl+FlwUXw8W141D/2TP8NghD+3xKsWt3tsBOcPwaiSuRsc
kvfw0xRPcf1LRtG/9lz40LoNtO7qU/jcccz6yAhm5foNSrN/wd6SD2bXSmoo
fvMInFDJc9V68nTDVIVOJyDe8klinyTew+t78yFg5yizien2IP0xG3QenSQX
lZ/wLD4dZv4bw4xSR8DA6/W4yv0vf9hxEw3bmwF/k0KFPRMt2GUzFTTreY4L
jxqB3W5JtqkyFSXjJPG6aSfsCZrC3p3diT0/b8EU3RCoEe/GvrZldL0/DsyH
5JjPNBec/3QTNmjqkuD6K/z4ThrNb57nPsvGYIm7CJu9rJRZP4zH39ISYKu6
m4pHjcEmw/OUtjYVD7xIgWXXfgkcpH2pbxiHBZt0UayJEJLO4+EYHTAyzkHf
ikKwVE/FORey+dV3bLktn4axC0VvBa1cFXyqeo2ubhWg3bmJj17vivGesjCg
HMwb7cgGbnol8W8m4y4LQyYa8wvVvjXB9W3jgR3ShtuJyozLEpDNnlgo3+DH
3i9ToMo+N7izLpH927sQe9h9fmulBXjIB/GZ+ZJk4hFIm9uscIJLLLjXt+DY
5Aymfjsffx/RRAnxfNR//QD2+442S9Q9gflvX+KEOC8ISL2Mjg86IeN6HtLN
61BhK8PKHF5ykmYxEPRzA6TsfQhKa/ZxfhYhJNSuBpMCKbaqsAqO5l3GyxcH
+SeXtNgRoQHs8N0K1etNWUBINb+t4yjrPP0SLp7i8WqsKIt2CWDK5bvw41AT
dj9SJ7UeFXpzLh+Ky83Z/HIRtqr8Ef9QcwGqjsgko9pMGLb3IC34tJPtebaL
LTn/F7uvr8HHO2eDnUCLta1XZMLyzaww4ZTwRlIoaq64wj9begYllRezFilT
ijp0Fhc2ZuNssScNW/Rvcl79V6F1wWqs+efKubZNw8RR8Uzs4kvcu8SRcCAS
1vX24MCDAnj5+jm8/X0HRtpEwcZDAaDt4Qt9VjpwpH0WTT8xmfWzc+TUZPif
lmc5061+gt7Fu3DMl19oUSHKHkjmUftnE3B58g0vqnfVQ6s4zTqYwm09MJPN
edqDQ0tM4Z15BtsysB9ezLsuCFM+yi5PmoAHfIBNCZlJj8RnwcFA3mw4v47i
30iS2kwpNm9SDNSt2MjeHFwrUPbyRtaVQ7d6+zHIYSVUz5hIGubZ6JYWSq5e
s6jkrxJqSfpCqH0QXvEqYT1eeRAqZs6Z/RSnwHAb0npUC98dsvHR0wFu1f1U
0BMtoc1PlNCo4jLsy13BpoYrste9xbBTfgZpeRRg3I6xfKOKJotUKGXSab+w
7G8CU2nxZtk/b3JomYAuhY/Bd+xH/udvjllJdPBaQWPpi5Icy1h+BkOulVGV
vC59yezgHnEZoN5rRXbSCGtWR5u9k49gubs+o8nEUaR/wJSybglBf9FwliL7
Fm7YHeSH7xsFk57J0Y8d6qznjyicHfwn1Os0o+ieg9yzXCM4+C+albrpQtdw
A+HxB9Ig/DaS++4SyyJTvFlbkBRd+AYs3esv5hu28fOs9vCLrU1Zw4Q2/usj
SzKVFmd32V/Qjd3MxkStZe6be7m977fCibRYri38PkbP2y2osargxWNV6ci5
EHI+u05YOmw+3d5tSZYLZCDFawSeMFklmBfoT9kBn1FGqpA6/GPYWD1XvD2i
C7xrzeiB+y+4PVDP1j4fRZlWqbTSX5O/duQB1zRuKT8pRBu35LtwSheHg+P1
k3zFXXcavvk5po0/BruP76Pt/4b4c2ua8N37/7yj4IoHPrVz669YgfbYfiys
SKAMTykYdOvlbT9EwuXsA5S1ajYNnNiDt0OUWCO9xoAJ0Ux98m4smXJTcMMl
F+cqZPHq3aUwdGIL9lu/5fTKFHFjRxLfPNebQicApubHk9PfuZRoEMhuVHqi
scdIdsBHhgJ1spmfRQWXdOmsYNb6dMxdvwmc18uQF38StW+qQuiNXHbBfz0f
V6HKtjr+aRDu6YKZ9xm1hV0FH9tAlFgsTWlTFqP89IVkvb8FrM7EC7rWyDK3
9jGs+gEw38+GrKktH50LbOjG8LeUJeIMm3yXkdfzM9hYVgR2A3th50MDdm0g
gMsd3AXH2oqx4G0U1KUs4zIttoORpCe81L1JJ1L3gk2iBN1oGIIvX5eA925D
9mlQhc1OlmBOz2oalMaKs26Lm9xvmxQmZTqMRU0OxTMWLVyF8ivUCznJmfbV
4t3In9CruwmO/HJhV+yXkcX0eri21pqXu7RY0LliCZQqOnPBLm9Jo0GKcjbn
477gMAq59RH7ii1BKJ8GnXlFcELmMJ7daYWnD8wkxxN54DpNgxUYTxXy9lFk
5+dNfRNWshmtc9mZSVNY1td5DKaqsBEZiaiePoQGNiYYPek8H98pAybdL/ll
0+Lhy96HOLZnMo0Wu4N5uwV4tUAfbe6tosevOskv4YNALl2NzRIOozlNI6io
bC1TfSzLOqt1WdeMS+hnXIeqyz/D54cLzF505oCyZRWFNtRx/T71OE4mgsb2
7CabC+1chqgHjlm5mPxF9OiI6XzMK8oFuVudzEztDd0+KkGa5y/jVvVzDdbn
hfBacRS7lh7AGo1E8PbbHUz5P60iP0qzNxka9Nz1C3h8rRK+ljFmdYkl+L2X
I0WdUv7v+3Oc//qdkNBTSQO+XzGsuRKfF5qxEQrVeFh2HgzFPseU4wupvDOI
e7emEmo1ROnCriHwq5anF/dMmahuL0hdq+TcnzTgg+CVsMb+D6YqlGJKVTp7
bPCP02qfyhk2vOFin86GRSu3mraa3wC7yaL8DPlWkhSOZ3rsCPdZVQze5dZw
P6dfwbVG9WiOI5kgLAJQMQAVZxzBwSXJ4HO8B9bdE7AixzDoSag0K+lKYmNl
N7DMIF0mFDelnbESVG+6FT1WyVJImA385hr4BZMJl7mVst+RI0hLTIQyDhky
tyPpiGaj2OjvI8jjUhvIL0rl/zUb4hShI3M6bSscKBZlEzSPsPlF/QLLNxUc
W7gSQg0S2IlkH/a25zyczp7NXr4og9JbzrR8iQEN+KyD9MXf0VTbHc1UzWF9
xH483qxMJg1XoHLhfThmrs0U1l3EOossHPZvKebf1mDD9uyjRfWNOM7Im+Ij
TnHfY7LRdsI19IuYzJL3DuMyCkVYX7092c7bymefVmP3b8vx4duV0CzECdre
D/Lb8Tvpli1mFz8+4PozF3HhMw3pltsnbpd5KWclMpKp7o6DidJfhMvdtNEy
IIcP/JQtUAiQopDi7Sj3JB2Hh/13n6IiSe0tIcvH4+lRwjCW//IdZv2aSt6W
2dwSzTBukWgKap/aT1Gj45BKf8BB43sosWUWpSPjUk3UcEz4LzCquYFtf69z
U7yi0aTYhsvSWUB/2zeg9hYVdmvFWcQiMYo8doXT6ezDjQeOU/euu/iwcTT5
v/3B7+s14aT4ueB7Iw5Ptp8HLYck7J59DVtvz2entumz55+MWLtuPQb7vEff
Rbfx4+WJ0KIZyhzLvoKGSiKqbdhM+hNHCScPSUNzbhDMa1Rh0ldjYVyXJTO/
2MWP7EjlFq02pmT1Zvi+KZwNW/QMTvqPZRp/N8Gqko0s4pQsi4/dQdGVX8GZ
fyPccTYGFo25w8k95liITxeceuAvWBlyBeWbrmLd+n1sTtBF3s94Kb4/Hwwy
Xvex3bELrhQ8Fb6//wGMO7+BmKwPbe9RJUVnOUgIvwc9y/Pg0tdgerx+LKnt
M2fqp+Vx3I/ZTGKsId8b8oYTDfbFOX2ZaHlkI5vrcAxTbh7iN/+6wK1dsYv0
lHfh3sTTnMXxHNS/uISBvON/fltMM2Wj0G+8Ldqr2pM07ObNA8OYb7QFm6sa
TsbOBdgZl8223EP0WBENXrJOnPfDNfBgrTfVj76A6SWlZHnqFYT/nEXuzlrs
EcVxwx1HAB0sYIddhfBYwpzmWovQl041epFxBYY8ikCNfYXDqz9wTjU3+OmB
k1nd/Ktw6p09GxL6w3G/ZnT+bMb5OzlBvrUYndojz2utyOaCahZzS3+I88oz
fnJzO8yARpTA0Wm29KhDnDTrJCixZzP7aK8OTxT02BOFfDqptg8j5Et4/moS
2hqFQAufhkVzrzSMOr2BHa+Kg59FiiTnG8aLN9gw38h/qFcVSBFb1Wh50l8u
MDsBpGuNqGCGOxmHm4J1uA/gUhlWe0eJdd4pgP1CGQDTZhjqHsT1P2xpvOQ2
7rerFEwccMbPG3/gcqddsF1bhMKk9LgP6V/xwnkPWjv+Kaq7GqHkHAFXpFIO
ye2ZTE9uNr8ieQqLOW9M1ZNmQcOBOu6G8h4mLvYcT44xY02dD3Bmpxt9PyeN
Pz+Mo54PCaxZfQR7/m0v3gxt5mtEjrBVJDnP6eYfJjkuWrh6uRN39dhsvHl6
HmabbyO7v1PYJiV71lmfBT1iFnhU7DVKPFoL90PnwSXVAyTWFEQ1cQZgbmyK
B/7L56dtyTCNnQSRjzH40yeUU/7nRjO9HaBy8zWsKRSBgybnQUNZg/kqTKX7
i28K+/ZNYo9fHUYrhfl8n50TpJ7n8N2v4ZSppIBFv6axxwpLsbvAAEvGt9Fv
0VbIG1zBvgZ6wPnyLBzb4UZaedJg+msY8aTEHBXHsTH2vuh7wpdVfrjF2baF
0vucNSgarkKR7/ejV20dabZLMv99oZx/jSqlvrOjjO3TmeqUepx0bSGpLhFj
kq9F8aq1P7fuhwTppXoJpjXOFDS/1aPCyFWs99UvbrwVcWdNpVjVqXqocorG
SQHT4YZ5NswXjIasR6mQv+gclERWYcH+ZDYsoRpksgwgv+oIVOo2MXv7Hfh4
+U2ueWk//t1dg5LH/vIxr2uxb1Uad+VQE+x37MG3dYxGj8rnz7om4aiJ9vR1
xQE82ydJBUuXCrde2catq7Th6u+MQS3VWVTwbyyL75kDRYfdOI8TMfw1ZVu2
a+YnXPh5P6173SX4PmDIEo2HoKXWGdbL/wDJufqkPNWS2Z00ZAsFffBauBEz
9t+DR9XbYNMqa7Jo6keLPXtw2Zo6lB7qxph9ElCUe5/LXy9ObzMqOVBDiFra
DurC71i7aQFXOT8H5WolyDctBhaYyzLPkKcQmqaAss1x4J8vEG6fJs+22L1C
r3uS5Oy9C6ZvqOI9mALbT4ngJb0CPjetZw5RGezovdXU3voQOqYyQen2DjBZ
cA5k32uD5rtYNFmpgMo/5nCeX5Jhz4dY9jIzlxpSlcnqbjO+du3lTDIzcOjL
f/zs2Ifus+pg6YkENmW2JDtw/AkYNHjS4a9u3AqJL3WTZtbg+P+Qak7OBHg9
fi/KFS0k9TsmfNgwE4obp8vNUEpoGJguRz5ua8ko8xXeF1uLIxe+wpshyWxj
1QZS+3yUu5eSgCZ3hfgm+Roahx6ByeVKkCFxF8zemGGVZL9wrcdoJhsmx8KD
jbltPvlkfe8oRcTuwd/CcUxy8UPhe7kY1n+7FesldFiD51KMUZzKPE5PYCpB
aZAbVAcymwaEUQY+NH0wHCauXMqJxsuS2HFH4YXZ0uCs40jflvmxue7O7Ia1
ORWH+UHwuUh2IcwV3s+4wWS9BrgddhpgGIK8WWEsV1r+ESFClvV93sqOe60H
jdVbQGjZAVeLB7gLLfPpw/UuFFPQpxXH5gmnfFUnlc0VgqXfCHZ7a6P6qzk4
Q+MiWqUGQ6xnOzQcjYMbora4eMAAK1QPgWmUPgaP1wcdjVjwtSjhPLbdB8nl
Uyn3oD5JJdrjFu4S8zi7iI/50A3NxXZg9lSCyhKATfB25e7mV/I7LyqTi7wz
bMOFnET0NJx8zJ3EqrTZqUVPMTJRZl5/dDM+db9glv/xEmnucKWEt7Y4+UYW
mhX+lyXKLTiaE+MDmwahfHErVtcn8RotVqyqRQSDh00XqIafwuy2Y9D5VIfb
PvciutlLk/GiNwLHzE70XGjKaVR4otNyKfZtmR1Tlb2K04PPQab1KLMH1+Nh
YkoQ7HM2hEXi4sxdLwWCu2UaLatVKOfHYk4zqBYUx9azEbufQeCVJ5h8cx7c
+jiByS6LACfrucQll8HAl0SakxSLbwf6OcOrecy05iBQjjTzmCsPh75LYmSK
gKZ3fePv3ZlAio2+dI/Tg98e5vTynwwlOw9nwXwxjCJbCDN+xa+Zs5l9O2RP
D8visb0znE7ZppL/ySvcCaMF8OdDErVNUWU/iuzxdbYaPZivRGdOT4IaH8Hc
C9vE2NWnOdzlCG8q3VGAcz0bIGDJfJz6JEAY8/YP2UgJYf64l3DB7BUeV1pA
g7Z/QGXaaWxvvSVM117F5sie56VHRAhmLlpN3VUj6eVIbfZpyVMYl2uL/+qy
8Wbxesw+VADFeYdQULmb2SZlsOzUeHi6UR1a96qjVNMOKL5sRuz7Ljw3P54y
H1zAJ/Yi2FdTgbEDEiDWmIzNSo/xj+Mg+i5QI73taTi+ZCRTnCPG7VZownFH
PsPftdo0yfsTlzZmPzuzUIPtviTPJKaLsq8zn+OT8OPC0yjE8MXeLGRSOq6e
fAYzv9+ExodL0SVkFMn3eVEFP4XyR4qTp20DqFwaSQtjU/BrdiE5B+eQolsC
jn/Vwe/n1FkAbiDHYjFKjDoD1u8V0E7PGNcr3QGjrXFm20cr4IiSQiwSirG/
ZQvp0P1kepfdDcvWd6KtpDK6L4jjI+qeYbqjBMspnc3vfPMCfR+sZIHKU7my
o8cwfowQLI7WoGhNNN0tlWABfvp0WP0kXVV/D6FLDkJDThRbP2kiZYb4wOCd
xVi3YAeINSjRrV+NOLG5io310qP69lmQMtAPB6NdWF7lNTh+7gB5i95hhx5q
sM3XytiM8uf4Xr2Y5p9OJ8+Um5jikIjeF5NxT8p90NVLY/7tTrR1QgU3+tAk
+l6qyBYdF4fp+9dwdRqy9OrVBzBPu4S/Npdi+WVLElzRhX1Lm3G+szVvMkaR
jdh+hht2ux5nfPsBQXvuwUXpXXDaM5At35xPUldmsSuSxdARfwd2rkhgU1tM
mO1ZAzTOPAEliuNZbo4WHR2/S/jrj7xgRDlx6pckmcI0P7iUn8pSD1aB1k1N
JowqZwvOc3Q3Hti66HIwMgjAgHPzWF33aHbBu5jz1LfGSFUppir9Ccb6Iu+6
egs5KDiwu0JLJtaRy3QU64Vyy7JhpbQB+1K8AYdXdPH7c6vB7kgH73BgFLV7
3+C2HDMiv2hR+N2qz4pn+oJjcxrc6vmPjSN4XP3wBz/2lB5UW2RBa28vbPf9
hiqNV3gfc3OMTSqE3S9Khfu7s2DXkp3UdD0SchU6OYuMKn5M+l3Y6bWP0pYp
kPEUW+q6OwD3T+aQSOs6VqW1C/udy5nAiWNYcBum6X6Bv1w3tsuuAV/XPBg7
L4/VpF1HB0EjJT3KIfmlu+Hd4CM+03wsxNhYQ4J+JvM8L80cdtgR2+xJ1Xnj
0PD3dlDY9gOjvWzp8dBDPNZ/AApKg9mgdBC52hTgEacTGJ1viaJGNuxb6kT2
5loAKRTPoqCYfFLqC2Hg8pA3X3AZX0qUw0xxaXqnFcMeNXbi0eGjmaS6M5u/
LBOujdLCoROdoNO5AQRbZkLEvyeYuzYJ9QsPwsUOT5Z6ZCJElLvzyeMnMpqy
H2dtPoOfbYvMvizVIxMDVSq2a4N7zJGMno1lZ2zkaNeQCjM82o2Ws1XYoP0+
WuIlRPcfaTBkWAzmhyxAFyazM8Nj6QaV0aToRHZI9RH8zMvjHUU7cJP1Lubz
ORZ2bJKhbQ+TQa/kPKddBPR73myyrTrPS+1MhTe1I2mHpRY2BS6n7+/dWfP5
A/DWaTptqHkHHwwDKEnRmx3KqSBpFkVBXX2wKeEwt/vXW15tYg7mrf2CEU2S
9F33AcZZiZNEog9TX0M4uDEBo0LM8VZnbr0FOtMs03UE58aBe6oBPCifQTaq
B6BzFOJJ82z6NGInuxVtzE41r+MTo57zM/Tk6EqsPKyoc2C6Tt5su/Kv+tqd
+xi+S6G/CyeD/pQyeHvxGxzPPwoJ/mf4N1vL+LPGI2lBcAsdvyvJ9HuOgp9B
JGty7eOikqz5MPlV7Nrls9AlaQaHp1ryYXMsQfhBj/z7dTDtcAp9zNqEGbkl
GLFYRqDuYAPbprwQLg9uh/VmVWzweBnyYfexLUeerd97FnMzGdtuKEV2327x
LV/XU/fXRVxRZi1qyh/hJ0Qs4H9kFdCFxaF40umssNW6FzHygdC7+j/OsSkF
1/FX622GuUBp5zCmGKiIbbACda4Owa5aEZwWlUhFmAaN28UaWupmMxsFO5p5
313wwXoNpf9RZisFZjB1w0gifV/+k+YTfg23AeIqd8ChgybMaTAdhsXOwL+i
qpSbaUAvw9bAdau3GKasy3IGR7Pcoo0Q3HWaUqWuwKktz2Arf18o8dkMr0WP
IbUZQhS0WmBQuTr8/BFKzKOPmz1TKJS1Xsxy6tbC5jJVTj43HVtObeM/7XsB
e2f0C34cOkjOc6Yw/x3SmH6lllzqYsFcpgNTHaxw5tW9gtyuHcKC9sew40Ac
HQu4jNXned6lIAksNDbjYMxBsPmymGT4ZhQWd8KnpP0skt/Egkb9xpFqEpRf
ks+PeV+PU5J0sPt+LOlpW7K526sx9XcbvCney/qUXqNabhK0CnNh/ZQOvHxj
On6anotlmteFIYVnOb8THiCySwsF5S04U/01enTrCDdqbOFLI7K5cXXfMPcO
D71fa6D66Rh2Qykev8s/wHuZctSkdpR19MnC2r2Z4CenwsqVrPn06Z6UYKXP
du94jw9WpWFmXTM+cdah76ujyU73HKdjcwJOaPhR5HhvPu9KJDWZxDH7mrH8
GCshjX65ELa/1WFrJ7SAQ1ctK2vL5m0+t6KJwJCiexJZQ/AjEDMwo0VTFGjY
fllak0+4+t1UrsrYE4LeyLFvF97CsR85EM7s2eNL/Q2tA09xeWEKHR8xDGt0
dKDjyHC2TOmj8J1LKSrXC3D+hIdQ5zgPf5kqsRnrpqLE3jyYGqtFqqffoI1b
DMQ1KePGnf0gFzIWC4KrYZ3zEvo69g3Pszdw4utVQf3nTTAQakAtfjtAsS2C
s4xypZXTT6OUnCsk5WmynIB3cGjRYXa/fhGFi2bBxrIvvIbWPU5zySn0WlCB
Sw2rMXbncGrZ0IpVGzJBetYviNyTANWbSlhlK/ff71PHjclsEHo/m07PVB34
XbO06JKvHNkMCLncshVMNkAIu7t6cWOuL98SGwvuWx+dc3UbQ5evaqKJTQC1
JBBefJMDybKzeBFJe1g0/Cr03ymbu3FNJlMJm8F6zuhSpdsQ9/LJExjt6gSa
f8TJXuY0lExLRpmuZmBy5lTVLkpSLeage6ADR4+o5aptjdD/vR8brl8KPcyK
WSc0wp4IRfp9xZ99r3YiZV8PvF+wGuVnPcGvohMh6p8SXQ8uxLRpoyF8iQ6M
3/0TRbTUqPrRGvwtb4vVDx3oQewYuuXjwG6sEYPLdYXcWV0h3bNyZi+PfOTO
pGcI1iXogKZdFe7rSOb/FOWzJsF8urzyMOOPDqOSzd85waLDAtF6HaItWZz1
+wxsTBWhwjpxbN7RhyJjXGjN7/Fs1BQruOIdxD/d4EwQr0a51/fjz6zv2GIU
Rs6teVDw6QM6/FzFpOxj2EKy5DsnzaB7e8XYR1lJdLd1Jq/Qg7jY8TFaLv0F
3Tr3ce+kudhv4Q1ZiiMpyrYeE97JcBt5xnKDpfBLazd3IV4aLDfXgFusA3t9
vQU8XqeR9ZZ85nPsK1opljL12CZcus+Qyzy8ENpGSzPfc2/ArUeJdpnZYuCK
QLbKrhfwRD8u5S1YfPYKrKss4ZbVjmbzJ/pQydc/UK54CP1FRJnaCS/eLnU0
hEz8CJ/+NvGfno8Bb6sEuLDnC6a0elPMoQh6SuZs2lFd8E/3Ym9oAQll20Dp
1QvMdyW86n4OT0iKsEDTSTS0+w5+6QjGvCsBGH0jGcput3I3XrRD9fHR7GnC
JSbrHIhHvgwnk5GNLC2/Ccz3mMNw/1FsXLwmM3kWjPki03DfE1E61+bIWnSH
87GVv7gHaams50Yt7b/RiGcCNdEvT4W9fzSbucnnszHHTmNGW79A/2oc1Yds
ZA1HbsJll3A6E55Nhn3V/JOoYXTWXYT3v5sLFWMrqSRQhtlrfoKbQ5Mh17gX
ez17QT1hC1s+oxOfrt7LfhrFwkfRTrh3eRRVrpwK9UXj2Mp2B9qkLU21c2zp
ULQ7xK+IYd1TlfELf5DaJt+FhK1aBKW9YDJahVanvhO+WjCX1EK+YWm3MdnU
XkQVYQZZPajjEj/5stCnGqx1hCLFq/L8Z2UX1reFBMkYRmKz3nBTdi7Hq19E
2cu+2UyJxNn2rp3cmopncLvpL351HMlmtmeA/YeRtGVqPub5RPIB9+JxSehS
SHpnxlrN33JOFQk4aetL+ByYAOFrROnjv1w2+aITK1z/Hi21fcH+qy3liEtw
zybvQCr9y5/PXk7bcqu5kv365PmnAi22KLPx39aA/a4K+uooRlmXrkLjvkIW
s2Up/UnpgN+hWmh6agrIUSyUldfj9seVsOx1Azqf6MLmwVBQqMnj7PacRPWy
GWaRzVLU0HqZH1FvzD0atGN3Qv1prdRboUN/N5DfPr5eYgOIrUSB5YXp5Htx
FHtuNBeUgvRxUmcJaqfnYUZVKpZ2tGHzizNCVa2v2GDtg90e//Fn63G2/WA+
teu2YLioBpmEmrKet4eZ74ID6Dp+Efv2JR5XPTegYoU+rFuRBWULp2Le03Sc
afac3zjZF15V23PZ41xo1/sAQcDIv6it2AeFlyRod0kBOxNnzgrc9WHXlyrO
Z2gkc+pWg8xDRTg6To1i622ZtE8sV/4jFtR/TKPvwZ1Ye1qW/dS+ynnevY6/
81OgfeZtUCgOA2XJcVyLhzI9rxFjRz7k8GktB/COYSZ3adpCkJ/7XmgXIUJm
hQfwe6Q2KsELaP0zCvtvtwvtpKTmckO6vKhGDqoM+ZPtxZvUYXiHmzpkSxMN
c7Dl4W981lDB+z36wR2teoSj/8sHt4BL0DfqOA4G1NB9GQnKjp2K4bYqwt7e
h9D2NBFDb80BQ7HNWKOqyX6n/sVxrePw1KSR4LzluaCU6wbDUl9ovDUGxQUb
8UNAIaf1zJ9+la1m02xd2IIR+mxYXSrzHT2ewif5o3/tTBp89AQihSL0L6YV
N+ctRyXTJfRCYx3rejaNTXsQgofTprD22XN4y6RLsCSjnldefxze66uQ4hdP
JuamIZidOZ0CI+9jgOUDyKmzoZGbSzDhx0zWrV4EHptqcVy+NI1MSQNp0Uew
VFWRhZ34DiaDxf9xqxscWCdLmzYJ+aJAY/Znug1dAif+/wCEwBBZ
                    "], "Biases" -> 
                    RawArray["Real32",{-0.016855556517839432`, 
                    0.0132837425917387, -0.0008768085390329361, 
                    0.0052915834821760654`, 
                    0.0027843292336910963`, -0.003698379499837756, \
-0.018797684460878372`, 
                    0.001909635029733181, -0.0032004108652472496`, \
-0.0021246206015348434`, -0.00209363317117095, 0.004849011078476906, 
                    0.015473847277462482`, -0.002095770090818405, \
-0.004852868150919676, 
                    0.003735683625563979, -0.018036937341094017`, \
-0.005769259296357632, 
                    0.00924748182296753, -0.0053855618461966515`, \
-0.010243135504424572`, 0.0026551897171884775`, 0.008476866409182549, 
                    0.00027884868904948235`, 
                    0.0001943559618666768, -0.011052536778151989`, \
-0.00904067326337099, 
                    0.0036407792940735817`, -0.018745727837085724`, \
-0.016538191586732864`, -0.005400519352406263, -0.0259801484644413, \
-0.014598118141293526`, -0.006325799971818924, -0.001701550674624741, \
-0.009855473414063454, 0.0009022941812872887, -0.008556058630347252, 
                    0.008934074081480503, -0.01370132714509964, \
-0.012249063700437546`, -0.015533125959336758`, -0.008746887557208538, \
-0.0013278448022902012`, -0.014745539054274559`, -0.00016663662972860038`, \
-0.005673646926879883, -0.009721470065414906, -0.006482403259724379, \
-0.013270319439470768`}]|>, 
                  "Parameters" -> <|
                   "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                    "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                  "Inputs" -> <|
                   "Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                "4" -> <|
                 "Type" -> "Elementwise", "Arrays" -> <||>, 
                  "Parameters" -> <|
                   "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                  "Inputs" -> <|
                   "Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                "5" -> <|
                 "Type" -> "Linear", 
                  "Arrays" -> <|"Weights" -> CompressedData["
1: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
                    "], "Biases" -> 
                    RawArray["Real32",{
                    0.005410715937614441, -0.01599864475429058, \
-0.012356334365904331`, -0.0019229502649977803`, -0.007912768982350826, \
-0.00126570463180542, 0.003363359719514847, 0.00792764499783516, 
                    0.013893168419599533`, 0.005173259414732456, 
                    0.011369266547262669`, 0.017860183492302895`, 
                    0.0115943793207407, 0.003669050754979253, 
                    0.00040802027797326446`, 
                    0.007683065254241228, -0.00001977363535843324, \
-0.0014695654390379786`, 
                    0.014884470961987972`, -0.0012553277192637324`, \
-0.0032390437554568052`, 
                    0.006286051589995623, -0.011098824441432953`, \
-0.010812340304255486`, -0.0026847096160054207`, -0.014801149256527424`, 
                    0.017792388796806335`, -0.006464314181357622, \
-0.002623572712764144, 0.011417768895626068`, 
                    0.010380287654697895`, -0.013666956685483456`, \
-0.006392901763319969, 0.0034489280078560114`, -0.008446968160569668, 
                    0.0041366745717823505`, 0.00017079095414374024`, 
                    0.00804638396948576, 0.0008761084172874689, 
                    0.0025355147663503885`, -0.018615897744894028`, 
                    0.01630355231463909, -0.0017558278050273657`, \
-0.008287418633699417, -0.005215818993747234, 0.003731731092557311, 
                    0.004112285561859608, 
                    0.004349738359451294, -0.002947157947346568, \
-0.013766915537416935`}]|>, 
                  "Parameters" -> <|
                   "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                    "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                  "Inputs" -> <|
                   "Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                "6" -> <|
                 "Type" -> "Elementwise", "Arrays" -> <||>, 
                  "Parameters" -> <|
                   "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                  "Inputs" -> <|
                   "Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                "7" -> <|
                 "Type" -> "Linear", 
                  "Arrays" -> <|"Weights" -> CompressedData["
1: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
CSmxBZ35gRQrjhEnjA1EvZ9mmBNnSv8HM8Xrqw==
                    "], "Biases" -> 
                    RawArray["Real32",{
                    0.0085669606924057, -0.005816908087581396, \
-0.00622056657448411, -0.006515318062156439, 
                    0.012642390094697475`, -0.006272400729358196, 
                    0.007060045842081308, 0.0009837764082476497, 
                    0.008454084396362305, 0.0091059859842062, 
                    0.00019714095105882734`, 
                    0.002886500209569931, -0.007333200890570879, \
-0.0004301410517655313, -0.008454633876681328, -0.009274411015212536, 
                    0.0018094265833497047`, -0.03375590220093727, \
-0.014028504490852356`, -0.01576893962919712, -0.011982426047325134`, \
-0.007978128269314766, -0.00908033549785614, 0.010301726870238781`, 
                    0.0027259038761258125`, -0.014227363280951977`, \
-0.00851190835237503, -0.00037052982952445745`, 
                    0.00250793038867414, -0.0047514960169792175`, 
                    0.0021296311169862747`, -0.02267507277429104, \
-0.0006968285888433456, 0.007618354633450508, 
                    0.014515720307826996`, -0.00630565918982029, 
                    0.0018882949370890856`, -0.005293709225952625, \
-0.018618926405906677`, 0.016609342768788338`, 0.007530746981501579, 
                    0.007625256199389696, -0.006014507729560137, 
                    0.007178816013038158, 
                    0.014553128741681576`, -0.006171787157654762, 
                    
                    0.0012284301919862628`, -0.011954723857343197`, \
-0.003772728145122528, 0.012225142680108547`}]|>, 
                  "Parameters" -> <|
                   "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                    "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                  "Inputs" -> <|
                   "Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                "8" -> <|
                 "Type" -> "Elementwise", "Arrays" -> <||>, 
                  "Parameters" -> <|
                   "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                  "Inputs" -> <|
                   "Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                "9" -> <|
                 "Type" -> "Linear", 
                  "Arrays" -> <|
                   "Weights" -> 
                    RawArray[
                    "Real32",{{-0.14669808745384216`, -0.03554145619273186, 
                    0.2883146107196808, 0.008508309721946716, 
                    0.16655868291854858`, -0.009286974556744099, 
                    0.05655810981988907, -0.030504625290632248`, 
                    0.058353569358587265`, 
                    0.02896176464855671, -0.05086623504757881, \
-0.025510365143418312`, 
                    0.3212010860443115, -0.4679584503173828, \
-0.15340545773506165`, 0.05453438684344292, -0.4052717387676239, 
                    0.16635684669017792`, 0.1012515276670456, 
                    0.08590944856405258, -0.3113340139389038, 
                    0.20390158891677856`, -0.021941184997558594`, 
                    0.14965033531188965`, 0.08241142332553864, 
                    0.05206910893321037, -0.07593682408332825, 
                    0.07982836663722992, -0.24622854590415955`, 
                    0.11494533717632294`, -0.1424265205860138, 
                    0.2204093337059021, 
                    0.21960042417049408`, -0.0022403772454708815`, \
-0.18525436520576477`, 0.11654142290353775`, -0.011941192671656609`, 
                    0.08550712466239929, 
                    0.03390452265739441, -0.024824095889925957`, \
-0.15898685157299042`, -0.15905553102493286`, 
                    0.09315269440412521, -0.38257381319999695`, \
-0.1475590169429779, -0.009955892339348793, -0.07568862289190292, \
-0.07195841521024704, -0.012298707850277424`, -0.03176585212349892}}], 
                    "Biases" -> RawArray["Real32",{-0.003006062936037779}]|>, 
                  "Parameters" -> <|
                   "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                  "Inputs" -> <|
                   "Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
              "Edges" -> {
               NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath["Inputs", "Input"], 
                NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
                NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
                NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
                NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
                NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
                NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
                NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
                NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
                NeuralNetworks`NetPath["Outputs", "Output"] -> 
                NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"]}, 
              "Inputs" -> <|
               "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>,
               "Outputs" -> <|
               "Output" -> 
                NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
          "Edges" -> {
           NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
            NeuralNetworks`NetPath["Inputs", "Input"], 
            NeuralNetworks`NetPath["Outputs", "LogStd"] -> 
            NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
            NeuralNetworks`NetPath["Outputs", "Mean"] -> 
            NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"]}|>, <|
         "Version" -> "14.0.2", "Unstable" -> False|>], 
       "Training" -> <|
        "Optimizer" -> {"ADAM", "L2Regularization" -> None}, 
         TrainingProgressFunction -> {Null& , "Interval" -> 1}, 
         "TotalTrainingTime" -> 1.61598, "MeanInputsPerSecond" -> 
         6188.195398457902|>, "InputType" -> "NumericalVector", "Processor" -> 
       MachineLearning`MLProcessor[
        "Sequence", <|
         "Input" -> <|
           "(f2(f1f3))" -> <|
             "Weight" -> {0.3333333333333333, 0.3333333333333333, 
               0.3333333333333333, 1., 1.}, "Type" -> "NumericalVector"|>|>, 
          "Output" -> <|
           "(f2(f1f3))" -> <|"Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
          "Processors" -> {
            MachineLearning`MLProcessor[
            "Standardize", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, 
              "Input" -> <|
               "(f2(f1f3))" -> <|
                 "Weight" -> {0.3333333333333333, 0.3333333333333333, 
                   0.3333333333333333, 1., 1.}, "Type" -> 
                  "NumericalVector"|>|>, 
              "Mean" -> {0.2289006333334619, 
               0.7531609000347783, -0.38489809835645766`, 
               0.0021722000731521753`, 0.0018086679846264998`}, 
              "StandardDeviation" -> {0.024567718522999566`, 
               0.34979307865674675`, 0.24486302601371027`, 
               1.0007092680619838`, 1.000783622803944}, 
              "Output" -> <|
               "(f2(f1f3))" -> <|
                 "Type" -> "NumericalVector", "Weight" -> 3.|>|>, 
              "Version" -> {14., 0}, "ID" -> 547806995614226278|>], 
            MachineLearning`MLProcessor[
            "FirstValues", <|
             "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 3.|>, "Key" -> 
              "(f2(f1f3))", "Invertibility" -> "Perfect", 
              "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
          "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
          "Missing" -> "Allowed"|>], "FeatureNumber" -> 5, 
       "DistributionData" -> {NormalDistribution, Automatic}, "Calibrator" -> 
       None, "PostProcessor" -> MachineLearning`MLProcessor["Identity"], 
       "Options" -> <|
        "NetworkType" -> <|"Value" -> "FullyConnected", "Options" -> <||>|>, 
         "NetworkDepth" -> <|"Value" -> 4, "Options" -> <||>|>, 
         "NumberOfParameters" -> <|"Value" -> 20, "Options" -> <||>|>, 
         "ActivationFunction" -> <|"Value" -> "SELU", "Options" -> <||>|>, 
         "L2Regularization" -> <|"Value" -> None, "Options" -> <||>|>, 
         "Dropout" -> <|"Value" -> None, "Options" -> <||>|>, 
         "NetInitializationMethod" -> <|
          "Value" -> Automatic, "Options" -> <||>|>, 
         "OptimizationMethod" -> <|
          "Value" -> {"ADAM", "L2Regularization" -> None}, 
           "Options" -> <||>|>, 
         MaxTrainingRounds -> <|"Value" -> 1000, "Options" -> <||>|>, 
         ValidationSet -> <|"Value" -> Automatic, "Options" -> <||>|>, 
         "EarlyStopping" -> <|"Value" -> False, "Options" -> <||>|>, 
         TrainingProgressReporting -> <|"Value" -> None, "Options" -> <||>|>, 
         "NetTrainOptions" -> <|
          "Value" -> {LearningRateMultipliers -> {}, TargetDevice -> "CPU"}, 
           "Options" -> <||>|>, 
         "LossFunction" -> <|"Value" -> Automatic, "Options" -> <||>|>, 
         "ValidationSetRatio" -> <|"Value" -> None, "Options" -> <||>|>|>|>, 
     "TrainingInformation" -> <|
      "Reporting" -> None, "TrainingFunction" -> Predict, "EMIterations" -> 
       Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 
       15.056129751433541`, "PreprocessingTime" -> 
       1.066387`6.4794598355819355, "LossName" -> "StandardDeviation", 
       "BestModelInformation" -> 
       Dataset[<|
         "MeanCrossEntropy" -> Around[21.689293613250165`, 7.119320129561721],
           "StandardDeviation" -> 
          Around[4.470631080531977*^6, 1.9379883061443693`*^6], 
          "EvaluationTime" -> 0.006294627058970834, "TestSize" -> 2, 
          "ModelMemory" -> 97928, "ModelUtility" -> -16.273989322953067`, 
          "Round" -> 1, "Iteration" -> 1, 
          "Time" -> {1.090803`6.489291317193191, 3.252475`6.963758960557801}, 
          "TrainingSize" -> 8, "TrainingTime" -> 1.9952623149688797`, 
          "TrainingMemory" -> 5776280, "ExperimentCount" -> 1, 
          "MeanCrossEntropyHistory" -> {
            Around[21.689293613250165`, 5.034119541050982]}, 
          "StandardDeviationHistory" -> {
            Around[4.470631080531977*^6, 1.3703646731349144`*^6]}, 
          "IterationHistory" -> {1}, 
          "TimeHistory" -> {{
            1.090803`6.489291317193191, 3.252475`6.963758960557801}}, 
          "Configuration" -> {
           "NeuralNetwork", "NetworkType" -> "FullyConnected", "NetworkDepth" -> 
            4, "NumberOfParameters" -> 20, "ActivationFunction" -> "SELU", 
            "L2Regularization" -> None, "Dropout" -> None, 
            "NetInitializationMethod" -> Automatic, 
            "OptimizationMethod" -> {"ADAM", "L2Regularization" -> None}, 
            MaxTrainingRounds -> 1000, ValidationSet -> Automatic, 
            "EarlyStopping" -> False, TrainingProgressReporting -> None, 
            "NetTrainOptions" -> Automatic, "LossFunction" -> Automatic}, 
          "FinalTrainingSize" -> 10|>, 
         TypeSystem`Assoc[
          TypeSystem`Atom[String], TypeSystem`AnyType, 19], <||>], 
       "Configurations" -> 
       Dataset[<|<|
           "Value" -> "NeuralNetwork", 
            "Options" -> <|
             "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
              "NetworkDepth" -> <|"Value" -> 4|>, 
              "NumberOfParameters" -> <|"Value" -> 20|>, 
              "ActivationFunction" -> <|"Value" -> "SELU"|>, 
              "L2Regularization" -> <|"Value" -> None|>, 
              "Dropout" -> <|"Value" -> None|>, 
              "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
              "OptimizationMethod" -> <|
               "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
              MaxTrainingRounds -> <|"Value" -> 1000|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "EarlyStopping" -> <|"Value" -> False|>, 
              TrainingProgressReporting -> <|"Value" -> None|>, 
              "NetTrainOptions" -> <|"Value" -> Automatic|>, 
              "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
           "Experiments" -> {<|
              "MeanCrossEntropy" -> 
               Around[21.689293613250165`, 7.119320129561721], 
               "StandardDeviation" -> 
               Around[4.470631080531977*^6, 1.9379883061443693`*^6], 
               "EvaluationTime" -> 0.006294627058970834, "TestSize" -> 2, 
               "ModelMemory" -> 97928, "ModelUtility" -> -16.273989322953067`,
                "Round" -> 1, "Iteration" -> 1, 
               "Time" -> {
                1.090803`6.489291317193191, 3.252475`6.963758960557801}, 
               "TrainingSize" -> 8, "TrainingTime" -> 1.9952623149688797`, 
               "TrainingMemory" -> 5776280, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[21.689293613250165`, 5.034119541050982]}, 
               "StandardDeviationHistory" -> {
                 Around[4.470631080531977*^6, 1.3703646731349144`*^6]}, 
               "IterationHistory" -> {1}, 
               "TimeHistory" -> {{
                 1.090803`6.489291317193191, 3.252475`6.963758960557801}}|>}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 0.006294627058970834, "ModelMemory" -> 97928,
               "StandardDeviation" -> 
              Around[4.470631080531977*^6, 1.9379883061443693`*^6], 
              "TrainingMemory" -> 5776280, "TrainingTime" -> 
              2.1947885464657677`|>, "Index" -> 1|>, <|
           "Value" -> "NeuralNetwork", 
            "Options" -> <|
             "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
              "NetworkDepth" -> <|"Value" -> 4|>, 
              "NumberOfParameters" -> <|"Value" -> 20|>, 
              "ActivationFunction" -> <|"Value" -> "SELU"|>, 
              "L2Regularization" -> <|"Value" -> None|>, 
              "Dropout" -> <|"Value" -> 0.01|>, 
              "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
              "OptimizationMethod" -> <|
               "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
              MaxTrainingRounds -> <|"Value" -> 1000|>, 
              ValidationSet -> <|"Value" -> Automatic|>, 
              "EarlyStopping" -> <|"Value" -> False|>, 
              TrainingProgressReporting -> <|"Value" -> None|>, 
              "NetTrainOptions" -> <|"Value" -> Automatic|>, 
              "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
           "Experiments" -> {}, 
            "PredictedPerformances" -> <|
             "EvaluationTime" -> 1, "ModelMemory" -> 1, "StandardDeviation" -> 
              1, "TrainingMemory" -> 1, "TrainingTime" -> 1|>, "Index" -> 
            2|>|>, 
         TypeSystem`Assoc[
          TypeSystem`Struct[{"Value", "Options"}, {
            TypeSystem`Atom[String], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 14]}], 
          
          TypeSystem`Struct[{
           "Experiments", "PredictedPerformances", "Index"}, {
            TypeSystem`Vector[
             TypeSystem`Assoc[
              TypeSystem`Atom[String], TypeSystem`AnyType, 17], 
             TypeSystem`AnyLength], 
            TypeSystem`Assoc[TypeSystem`AnyType, TypeSystem`AnyType, 5], 
            TypeSystem`Atom[Integer]}], 2], <||>], "TrainingSizes" -> {8}, 
       "MaxTrainingSize" -> 10, "PreprocessorEvaluationTime" -> 1.71875*^-6, 
       "PreprocessorMemory" -> 97144, "InputDimension" -> 5, 
       "OutputDimension" -> 1, 
       "BaselineLogProbability" -> -1.4189385332046727`, "VariableBudget" -> 
       True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
       False, "NaturalStop" -> True, "AbortStop" -> False, 
       "RoundPartitioning" -> 
       Dataset[{<|
          "TrainingSizes" -> 8, "TimeBudgets" -> 1.6918980470745264`, 
           "ElapsedTimes" -> 2.251978, "ExperimentCounts" -> 1|>}, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
            "ExperimentCounts"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer]}], 1], <||>]|>, "AnomalyDetector" -> 
     None, "Log" -> <|
      "Example" -> 
       MachineLearning`MLDataset[<|
         "f1" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {3}, "ID" -> 
            8467692391424180837|>, 
          "f2" -> <|
           "Type" -> "Nominal", "Weight" -> 1, "Values" -> {2}, "ID" -> 
            1153753162613013929|>, 
          "f3" -> <|
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {3}, "ID" -> 
            525854867134694125|>|>, <|
         "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0,
           "RawExample" -> False|>], "TrainingTime" -> 5.03933, 
       "MaxTrainingMemory" -> 90411816, "DataMemory" -> 1960, 
       "FunctionMemory" -> 264448, "LanguageVersion" -> {14., 0}, "Date" -> 
       DateObject[{2024, 8, 30, 1, 58, 27.464457`8.19134599879819}, "Instant",
          "Gregorian", 3.], "ProcessorCount" -> 8, "ProcessorType" -> "ARM64",
        "OperatingSystem" -> "MacOSX", "SystemWordLength" -> 64, 
       "Evaluations" -> {}|>|>]]]], "Output",
 CellChangeTimes->{3.869567719257928*^9, 3.929891877144655*^9, 
  3.9339611084491034`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"20b53604-e225-4368-b47d-3eeb082cea76"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Keys", "[", 
  RowBox[{"surrogate3D", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "\"\<Model\>\""}], "]"}], "]"}], "]"}], "\n", 
 RowBox[{"Values", "[", 
  RowBox[{"surrogate3D", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "\"\<Model\>\""}], "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.869567836565824*^9, 3.869567841344432*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"821b20c8-9a5a-4f00-8551-d2bc6f5a5bf7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Method\"\>", ",", "\<\"Network\"\>", ",", "\<\"Training\"\>", 
   ",", "\<\"InputType\"\>", ",", "\<\"Processor\"\>", 
   ",", "\<\"FeatureNumber\"\>", ",", "\<\"DistributionData\"\>", 
   ",", "\<\"Calibrator\"\>", ",", "\<\"PostProcessor\"\>", 
   ",", "\<\"Options\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.869567841735056*^9, 3.929891882700859*^9, 
  3.9339611098675737`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"067cea13-d2ed-40b0-913e-17505ae59d4f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"NeuralNetwork\"\>", ",", 
   InterpretationBox[
    RowBox[{
     TagBox["NetGraph",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 TagBox[
                  StyleBox[
                   TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                   "SummaryItemAnnotation"], "SummaryItem"], 
                 TagBox[
                  StyleBox[
                   TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
                 TagBox[
                  StyleBox[
                   
                   TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
                 TagBox[
                  StyleBox["2", "SummaryItem"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 TagBox[
                  
                  DynamicModuleBox[{
                   NeuralNetworks`Private`NetGraph`selection = None}, 
                   GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {
                    0.18751000502404325`, -0.18751000502404314`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {
                    1.187510005024043, -0.18751003181894016`}], 
                    
                    Offset[{0, -15.5}, {
                    1.187510005024043, -0.18751003181894016`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Mean\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {
                    2.1875100050240426`, -0.18751005861383718`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {
                    0.18751000502404302`, -0.5625300686619237}], 
                    
                    Offset[{0, -13.5}, {
                    0.18751000502404302`, -0.5625300686619237}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"LogStd\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {
                    1.1875100050240426`, -0.5625300954568208}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{1.4737193362868162`*^-7, 5.499999999999999}, {
                    0.7375100050240432, -0.1875100197612365}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897023396658`*^-8}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{1.4737193362868164`*^-7, 5.499999999999999}, {
                    1.7375100050240428`, -0.18751004655613351`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897023396664`*^-8}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399298`*^-7, 5.499999999999999}, {
                    0.7375100050240428, -0.5625300833991171}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897078907816`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{0.18751000502404325`, -0.18751000502404314`}, {
                    1.187510005024043, -0.18751003181894016`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{1.187510005024043, -0.18751003181894016`}, {
                    2.1875100050240426`, -0.18751005861383718`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mean\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Mean"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{0.18751000502404302`, -0.5625300686619237}, {
                    1.1875100050240426`, -0.5625300954568208}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"LogStd\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "LogStd"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> False]], {
                    0.7375100050240432, -0.1875100197612365}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794897023396658`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> False]], {
                    1.7375100050240428`, -0.18751004655613351`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794897023396658`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mean\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Mean"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> False]], {
                    0.7375100050240428, -0.5625300833991171}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999996, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"LogStd\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "LogStd"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0.18751000502404325`, -0.18751000502404314`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {
                    1.187510005024043, -0.18751003181894016`}], 
                    
                    Offset[{-12.5, -12.5}, {
                    1.187510005024043, -0.18751003181894016`}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {
                    1.187510005024043, -0.18751003181894016`}], 
                    
                    Offset[{12.5, 12.5}, {
                    1.187510005024043, -0.18751003181894016`}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {
                    1.187510005024043, -0.18751003181894016`}], 
                    Offset[{-10.5, -10.5}, {
                    1.187510005024043, -0.18751003181894016`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {
                    1.187510005024043, -0.18751003181894016`}], 
                    
                    Offset[{10.5, 10.5}, {
                    1.187510005024043, -0.18751003181894016`}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {
                    1.187510005024043, -0.18751003181894016`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.1875100050240426`, -0.18751005861383718`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Mean\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Mean", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {
                    0.18751000502404302`, -0.5625300686619237}], 
                    
                    Offset[{-10.5, -10.5}, {
                    0.18751000502404302`, -0.5625300686619237}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {
                    0.18751000502404302`, -0.5625300686619237}], 
                    
                    Offset[{10.5, 10.5}, {
                    0.18751000502404302`, -0.5625300686619237}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {
                    0.18751000502404302`, -0.5625300686619237}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{1.1875100050240426`, -0.5625300954568208}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"LogStd\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["LogStd", Bold]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{0.18751000502404325`, -0.18751000502404314`}, {
                    1.187510005024043, -0.18751003181894016`}, {
                    2.1875100050240426`, -0.18751005861383718`}, {
                    0.18751000502404302`, -0.5625300686619237}, {
                    1.1875100050240426`, -0.5625300954568208}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 8, 21, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {167.99999999999997`, 68.62610497380277}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29., 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Port", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Mean\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Mean\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Mean"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Mean\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Mean"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"LogStd\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"LogStd\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"LogStd"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"LogStd\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"LogStd"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "2" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{1}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {1}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "1" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50, 5}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{50}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                    "$InputSize" -> 5, "$InputDimensions" -> {5}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50, 50}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{50}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                    "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50, 50}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{50}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                    "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50, 50}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{50}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                    "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1, 50}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "9", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Mean" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "LogStd" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "LogStd"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Mean"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Outputs", "Mean"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Outputs", "LogStd"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Outputs", "Mean"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Outputs", "LogStd"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                   Initialization :> {NetGraph}], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    NetGraph[<|
     "Type" -> "Graph", 
      "Inputs" -> <|
       "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
      "Outputs" -> <|
       "Mean" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], "LogStd" -> 
        NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>, 
      "Nodes" -> <|
       "2" -> <|"Type" -> "NetArray", 
          "Arrays" -> <|
           "Array" -> RawArray["Real32",{-1.1989428997039795`}]|>, 
          "Parameters" -> <|
           "Dimensions" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT], 
            "$ArrayDimensions" -> {1}|>, "Inputs" -> <||>, 
          "Outputs" -> <|
           "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>|>, 
        "1" -> <|"Type" -> "Chain", 
          "Nodes" -> <|
           "1" -> <|"Type" -> "Linear", 
              "Arrays" -> <|"Weights" -> CompressedData["
1:eJwViXsw1Wkch3UhrINxKRyn6bQobGqOO+f9vkVNYtdumNYUidbdWbfJYbXG
LaRSdm21pejitttltolWfu/3LbnsqHWOppT7rrvdZhhmSU2s/ng+M8/nkUYk
BkSt1tDQSNVemYBw5a6UlPCMQK2PEhme4ChL+BhlK2iucG3qMC6H1AseiU58
XMeefv7tz1S2ZMIzyBL+8vIIufjSkdhEe3OHiTF50mQtUfqr4b7+Q/RO12UP
5kYgQbDAsNGnZKfRZRbp+FhIG0iE+QdK3jNwVq4+2IH7xjtwj8Eg2j0/Aupn
1lAytBf1ktbQhuQKMqG8CheIIf3rpg5/cSYX3SZ1uFlUGowb1XoMG7li28VG
sM7UIk3WKjwzPwZ7tAqIVUsdNhSX4IO8/ViYJIGihj62nU+RXb02IJ2yhOhj
XtStNoaVfuEELs6HIebfY/J3Y4FwfeW326cAP1YAEq8c2FTjCanvmrEA9eQH
Lt8jdc0ZNL0sUEj2ssCY95t4gFKD+0WEolTcwtA4j4jVMxgSuqXpToiY714c
IindDSRm5CrTi/PDN4GM6KtF0KZYBYb9b7Fn6STu3qFNu7bF0nXTeryu0JVO
pJ4G85ZlzGnKgL7c31j3SY4DzXlEtfYVXMrK59kGn9G8YBF1zJLiolLsYd57
C1TaUvze9S7cqtDG4kx9+p2LD59VmbLzR9fQ6M3VrK4qHr7smkefOUO6Pv0/
qPpRxpvL3Jksb5LtrHfGzs1TsL+mGFWrdOhBna3U6+5jvL5gRH0tW3F4UNVU
0GuGD9+EQlClLSwUMvK0OJw2j/mihbMPnuvrQdndQ1hJT8BiKeKGViloXwug
CeJuKA+WkiunuoTFGAfud6KSu0ZIeL+BLpRJ14Lqh0q44deF9mV/k9gtT7Cn
Y4lEvo+H0XxdHK0YRBf722TBfZZkROry2znGtO3Xb/DJKRFYWzVixowhNRd9
AIXGGrrukQXNNkQME5LByEGHL3mvp5n+Vnw01IxILsvkDfKvYB6nia+mBdYG
FbL0hVm4n7ixKSnfkNbFVbE830eQfjaOuB1dTRUP3dnwfk88EyQI0a7ncYFU
C42eLez1zCr+eroQ0wKqwNYpGd/uFvOIRlP4NC2WqEuDSHWmu5BdYktfFTNM
vHAJ6vfNEf2S54IIS8kNyVa583EptSr/CTb+cQfzNU6A7zIKVl7aNHjBBc59
/YJ02xyA8PZ6ZvP7n9haBGyqVEJrWvtZV+d74jRiyx0+SPi28njcENVMcseq
yHCYCXXsryNDlgo8fmcHc92mFP4pUYFJuxYxbjtNsqzEaOfZC0n6N2n2oXtM
XWnHNfe2s+0HTGnCFRPsLOyGwfspHIo+gdGnz3CoRSH4R7hA/4iI/g+L7+tO

                 "], "Biases" -> 
                RawArray["Real32",{-0.012169163674116135`, 
                  0.009650961495935917, -0.013100849464535713`, \
-0.020143963396549225`, 
                  0.006052089389413595, -0.002029701368883252, \
-0.006044588517397642, 0.007693909108638763, -0.0053748986683785915`, 
                  0.009160751476883888, -0.014554915018379688`, \
-0.016858527436852455`, 0.013982144184410572`, 
                  0.014517744071781635`, -0.008336205035448074, 
                  0.004692817572504282, -0.0059677897952497005`, \
-0.0004948508576489985, -0.006720861420035362, -0.0016040425980463624`, \
-0.0015893345698714256`, 0.016085965558886528`, -0.013168460689485073`, 
                  0.008929909206926823, -0.00793275237083435, \
-0.013195402920246124`, 0.0012483586324378848`, 
                  0.015255754813551903`, -0.006633432116359472, \
-0.009408091194927692, 0.0070306602865457535`, 0.0049194954335689545`, 
                  0.0004956835764460266, -0.0009747766889631748, 
                  0.016394779086112976`, -0.008808722719550133, \
-0.015088994987308979`, 0.007704492192715406, 0.005776808597147465, 
                  0.005734359845519066, 
                  0.002242754213511944, -0.009465075097978115, 
                  0.002219893503934145, -0.006096228491514921, 
                  0.012610032223165035`, -0.013916024006903172`, 
                  0.00878830999135971, -0.01231926865875721, 
                  0.0029074775520712137`, 0.01287225354462862}]|>, 
              "Parameters" -> <|
               "OutputDimensions" -> {50}, "$OutputSize" -> 50, "$InputSize" -> 
                5, "$InputDimensions" -> {5}|>, 
              "Inputs" -> <|
               "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>,
               "Outputs" -> <|
               "Output" -> 
                NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
            "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
              "Parameters" -> <|
               "Function" -> 
                NeuralNetworks`ValidatedParameter[
                 "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
              "Inputs" -> <|
               "Input" -> 
                NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
              "Outputs" -> <|
               "Output" -> 
                NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
            "3" -> <|"Type" -> "Linear", 
              "Arrays" -> <|"Weights" -> CompressedData["
1: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
                 "], "Biases" -> 
                RawArray["Real32",{-0.016855556517839432`, 
                  0.0132837425917387, -0.0008768085390329361, 
                  0.0052915834821760654`, 
                  0.0027843292336910963`, -0.003698379499837756, \
-0.018797684460878372`, 
                  0.001909635029733181, -0.0032004108652472496`, \
-0.0021246206015348434`, -0.00209363317117095, 0.004849011078476906, 
                  0.015473847277462482`, -0.002095770090818405, \
-0.004852868150919676, 
                  0.003735683625563979, -0.018036937341094017`, \
-0.005769259296357632, 
                  0.00924748182296753, -0.0053855618461966515`, \
-0.010243135504424572`, 0.0026551897171884775`, 0.008476866409182549, 
                  0.00027884868904948235`, 
                  0.0001943559618666768, -0.011052536778151989`, \
-0.00904067326337099, 
                  0.0036407792940735817`, -0.018745727837085724`, \
-0.016538191586732864`, -0.005400519352406263, -0.0259801484644413, \
-0.014598118141293526`, -0.006325799971818924, -0.001701550674624741, \
-0.009855473414063454, 0.0009022941812872887, -0.008556058630347252, 
                  
                  0.008934074081480503, -0.01370132714509964, \
-0.012249063700437546`, -0.015533125959336758`, -0.008746887557208538, \
-0.0013278448022902012`, -0.014745539054274559`, -0.00016663662972860038`, \
-0.005673646926879883, -0.009721470065414906, -0.006482403259724379, \
-0.013270319439470768`}]|>, 
              "Parameters" -> <|
               "OutputDimensions" -> {50}, "$OutputSize" -> 50, "$InputSize" -> 
                50, "$InputDimensions" -> {50}|>, 
              "Inputs" -> <|
               "Input" -> 
                NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
              "Outputs" -> <|
               "Output" -> 
                NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
            "4" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
              "Parameters" -> <|
               "Function" -> 
                NeuralNetworks`ValidatedParameter[
                 "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
              "Inputs" -> <|
               "Input" -> 
                NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
              "Outputs" -> <|
               "Output" -> 
                NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
            "5" -> <|"Type" -> "Linear", 
              "Arrays" -> <|"Weights" -> CompressedData["
1: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
                 "], "Biases" -> 
                RawArray["Real32",{
                  0.005410715937614441, -0.01599864475429058, \
-0.012356334365904331`, -0.0019229502649977803`, -0.007912768982350826, \
-0.00126570463180542, 0.003363359719514847, 0.00792764499783516, 
                  0.013893168419599533`, 0.005173259414732456, 
                  0.011369266547262669`, 0.017860183492302895`, 
                  0.0115943793207407, 0.003669050754979253, 
                  0.00040802027797326446`, 
                  0.007683065254241228, -0.00001977363535843324, \
-0.0014695654390379786`, 
                  0.014884470961987972`, -0.0012553277192637324`, \
-0.0032390437554568052`, 
                  0.006286051589995623, -0.011098824441432953`, \
-0.010812340304255486`, -0.0026847096160054207`, -0.014801149256527424`, 
                  0.017792388796806335`, -0.006464314181357622, \
-0.002623572712764144, 0.011417768895626068`, 
                  0.010380287654697895`, -0.013666956685483456`, \
-0.006392901763319969, 0.0034489280078560114`, -0.008446968160569668, 
                  0.0041366745717823505`, 0.00017079095414374024`, 
                  0.00804638396948576, 0.0008761084172874689, 
                  0.0025355147663503885`, -0.018615897744894028`, 
                  0.01630355231463909, -0.0017558278050273657`, \
-0.008287418633699417, -0.005215818993747234, 0.003731731092557311, 
                  0.004112285561859608, 
                  0.004349738359451294, -0.002947157947346568, \
-0.013766915537416935`}]|>, 
              "Parameters" -> <|
               "OutputDimensions" -> {50}, "$OutputSize" -> 50, "$InputSize" -> 
                50, "$InputDimensions" -> {50}|>, 
              "Inputs" -> <|
               "Input" -> 
                NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
              "Outputs" -> <|
               "Output" -> 
                NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
            "6" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
              "Parameters" -> <|
               "Function" -> 
                NeuralNetworks`ValidatedParameter[
                 "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
              "Inputs" -> <|
               "Input" -> 
                NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
              "Outputs" -> <|
               "Output" -> 
                NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
            "7" -> <|"Type" -> "Linear", 
              "Arrays" -> <|"Weights" -> CompressedData["
1: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
CSmxBZ35gRQrjhEnjA1EvZ9mmBNnSv8HM8Xrqw==
                 "], "Biases" -> 
                RawArray["Real32",{
                  0.0085669606924057, -0.005816908087581396, \
-0.00622056657448411, -0.006515318062156439, 
                  0.012642390094697475`, -0.006272400729358196, 
                  0.007060045842081308, 0.0009837764082476497, 
                  0.008454084396362305, 0.0091059859842062, 
                  0.00019714095105882734`, 
                  0.002886500209569931, -0.007333200890570879, \
-0.0004301410517655313, -0.008454633876681328, -0.009274411015212536, 
                  0.0018094265833497047`, -0.03375590220093727, \
-0.014028504490852356`, -0.01576893962919712, -0.011982426047325134`, \
-0.007978128269314766, -0.00908033549785614, 0.010301726870238781`, 
                  0.0027259038761258125`, -0.014227363280951977`, \
-0.00851190835237503, -0.00037052982952445745`, 
                  0.00250793038867414, -0.0047514960169792175`, 
                  0.0021296311169862747`, -0.02267507277429104, \
-0.0006968285888433456, 0.007618354633450508, 
                  0.014515720307826996`, -0.00630565918982029, 
                  0.0018882949370890856`, -0.005293709225952625, \
-0.018618926405906677`, 0.016609342768788338`, 0.007530746981501579, 
                  0.007625256199389696, -0.006014507729560137, 
                  0.007178816013038158, 
                  0.014553128741681576`, -0.006171787157654762, 
                  0.0012284301919862628`, -0.011954723857343197`, \
-0.003772728145122528, 0.012225142680108547`}]|>, 
              "Parameters" -> <|
               "OutputDimensions" -> {50}, "$OutputSize" -> 50, "$InputSize" -> 
                50, "$InputDimensions" -> {50}|>, 
              "Inputs" -> <|
               "Input" -> 
                NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
              "Outputs" -> <|
               "Output" -> 
                NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
            "8" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
              "Parameters" -> <|
               "Function" -> 
                NeuralNetworks`ValidatedParameter[
                 "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
              "Inputs" -> <|
               "Input" -> 
                NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
              "Outputs" -> <|
               "Output" -> 
                NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
            "9" -> <|"Type" -> "Linear", 
              "Arrays" -> <|
               "Weights" -> 
                RawArray[
                  "Real32",{{-0.14669808745384216`, -0.03554145619273186, 
                  0.2883146107196808, 0.008508309721946716, 
                  0.16655868291854858`, -0.009286974556744099, 
                  0.05655810981988907, -0.030504625290632248`, 
                  0.058353569358587265`, 
                  0.02896176464855671, -0.05086623504757881, \
-0.025510365143418312`, 
                  0.3212010860443115, -0.4679584503173828, \
-0.15340545773506165`, 0.05453438684344292, -0.4052717387676239, 
                  0.16635684669017792`, 0.1012515276670456, 
                  0.08590944856405258, -0.3113340139389038, 
                  0.20390158891677856`, -0.021941184997558594`, 
                  0.14965033531188965`, 0.08241142332553864, 
                  0.05206910893321037, -0.07593682408332825, 
                  0.07982836663722992, -0.24622854590415955`, 
                  0.11494533717632294`, -0.1424265205860138, 
                  0.2204093337059021, 
                  0.21960042417049408`, -0.0022403772454708815`, \
-0.18525436520576477`, 0.11654142290353775`, -0.011941192671656609`, 
                  0.08550712466239929, 
                  0.03390452265739441, -0.024824095889925957`, \
-0.15898685157299042`, -0.15905553102493286`, 
                  0.09315269440412521, -0.38257381319999695`, \
-0.1475590169429779, -0.009955892339348793, -0.07568862289190292, \
-0.07195841521024704, -0.012298707850277424`, -0.03176585212349892}}], 
                "Biases" -> RawArray["Real32",{-0.003006062936037779}]|>, 
              "Parameters" -> <|
               "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 
                50, "$InputDimensions" -> {50}|>, 
              "Inputs" -> <|
               "Input" -> 
                NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
              "Outputs" -> <|
               "Output" -> 
                NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
          "Edges" -> {
           NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
            NeuralNetworks`NetPath["Inputs", "Input"], 
            NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
            NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
            NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
            NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
            NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
            NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
            NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
            NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
            NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
            NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
            NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
            NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
            NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
            NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
            NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
            NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
            NeuralNetworks`NetPath["Outputs", "Output"] -> 
            NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"]}, 
          "Inputs" -> <|
           "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
          "Outputs" -> <|
           "Output" -> 
            NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
      "Edges" -> {
       NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
        NeuralNetworks`NetPath["Inputs", "Input"], 
        NeuralNetworks`NetPath["Outputs", "LogStd"] -> 
        NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
        NeuralNetworks`NetPath["Outputs", "Mean"] -> 
        NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"]}|>, <|
     "Version" -> "14.0.2", "Unstable" -> False|>],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Optimizer\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\<\"ADAM\"\>", ",", 
        RowBox[{"\<\"L2Regularization\"\>", "\[Rule]", "None"}]}], "}"}]}], 
     ",", 
     RowBox[{"TrainingProgressFunction", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Null", "&"}], ",", 
        RowBox[{"\<\"Interval\"\>", "\[Rule]", "1"}]}], "}"}]}], ",", 
     RowBox[{"\<\"TotalTrainingTime\"\>", "\[Rule]", "1.61598`"}], ",", 
     RowBox[{"\<\"MeanInputsPerSecond\"\>", "\[Rule]", 
      "6188.195398457902`"}]}], "\[RightAssociation]"}], 
   ",", "\<\"NumericalVector\"\>", ",", 
   TagBox[
    TooltipBox[
     FrameBox[
      TemplateBox[{"\[ThinSpace]", "\" \"", 
        TagBox[
         TooltipBox[
          FrameBox[
           StyleBox[
           "\"Standardize\"", {
            FontFamily -> "Helvetica Neue", FontWeight -> "Light", FontColor -> 
             GrayLevel[0.]}, StripOnInput -> False], RoundingRadius -> 2, 
           FrameStyle -> {
             Thickness[0.5], 
             Opacity[1.], 
             GrayLevel[0.83]}, FrameMargins -> {{3, 3}, {0.5, 0.5}}, 
           Background -> Opacity[1., 
             RGBColor[{0.97, 0.97, 0.9602999999999999}]], StripOnInput -> 
           False], 
          TagBox[
           GridBox[{{
              RowBox[{
                PanelBox[
                 TagBox[
                  
                  GridBox[{{"\"(f2(f1f3))\"", "\"NumericalVector\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"]], "\[Rule]", 
                PanelBox[
                 TagBox[
                  
                  GridBox[{{"\"(f2(f1f3))\"", "\"NumericalVector\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"]]}]}, {
              TagBox[
               GridBox[{{
                  RowBox[{"\"Invertibility\"", "\[Rule]", 
                    TagBox["\"Perfect\"", Short[#, 5]& ]}]}, {
                  RowBox[{"\"Missing\"", "\[Rule]", 
                    TagBox["\"Allowed\"", Short[#, 5]& ]}]}, {
                  RowBox[{"\"StructurePreserving\"", "\[Rule]", 
                    TagBox["True", Short[#, 5]& ]}]}, {
                  RowBox[{"\"Mean\"", "\[Rule]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.2289006333334619`", ",", "0.7531609000347783`", ",", 
                    RowBox[{"-", "0.38489809835645766`"}], ",", 
                    "0.0021722000731521753`", ",", "0.0018086679846264998`"}],
                     "}"}], Short[#, 5]& ]}]}, {
                  RowBox[{"\"StandardDeviation\"", "\[Rule]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "0.024567718522999566`", ",", "0.34979307865674675`", ",",
                     "0.24486302601371027`", ",", "1.0007092680619838`", ",", 
                    "1.000783622803944`"}], "}"}], Short[#, 5]& ]}]}, {
                  RowBox[{"\"Version\"", "\[Rule]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"14.`", ",", "0"}], "}"}], Short[#, 5]& ]}]}, {
                  RowBox[{"\"ID\"", "\[Rule]", 
                    TagBox["547806995614226278", Short[#, 5]& ]}]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
                "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            DefaultBaseStyle -> "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], Annotation[#, 
          Column[{Panel[
              Grid[{{"(f2(f1f3))", "NumericalVector"}}]] -> Panel[
              Grid[{{"(f2(f1f3))", "NumericalVector"}}]], 
            
            Column[{"Invertibility" -> Short["Perfect", 5], "Missing" -> 
              Short["Allowed", 5], "StructurePreserving" -> Short[True, 5], 
              "Mean" -> Short[{0.2289006333334619, 
                0.7531609000347783, -0.38489809835645766`, 
                0.0021722000731521753`, 0.0018086679846264998`}, 5], 
              "StandardDeviation" -> 
              Short[{0.024567718522999566`, 0.34979307865674675`, 
                0.24486302601371027`, 1.0007092680619838`, 1.000783622803944},
                 5], "Version" -> Short[{14., 0}, 5], "ID" -> 
              Short[547806995614226278, 5]}]}], "Tooltip"]& ], 
        StyleBox["\"\[RightArrow]\"", 
         Directive[
          GrayLevel[0.4], 15], StripOnInput -> False], 
        TagBox[
         TooltipBox[
          FrameBox[
           StyleBox[
           "\"FirstValues\"", {
            FontFamily -> "Helvetica Neue", FontWeight -> "Light", FontColor -> 
             GrayLevel[0.]}, StripOnInput -> False], RoundingRadius -> 2, 
           FrameStyle -> {
             Thickness[0.5], 
             Opacity[1.], 
             GrayLevel[0.83]}, FrameMargins -> {{3, 3}, {0.5, 0.5}}, 
           Background -> Opacity[1., 
             RGBColor[{0.97, 0.97, 0.9602999999999999}]], StripOnInput -> 
           False], 
          TagBox[
           GridBox[{{""}, {
              TagBox[
               GridBox[{{
                  RowBox[{"\"Info\"", "\[Rule]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    RowBox[{"\"Type\"", "\[Rule]", "\"NumericalVector\""}], 
                    ",", 
                    RowBox[{"\"Weight\"", "\[Rule]", "3.`"}]}], 
                    "\[RightAssociation]"}], Short[#, 5]& ]}]}, {
                  RowBox[{"\"Key\"", "\[Rule]", 
                    TagBox["\"(f2(f1f3))\"", Short[#, 5]& ]}]}, {
                  RowBox[{"\"Invertibility\"", "\[Rule]", 
                    TagBox["\"Perfect\"", Short[#, 5]& ]}]}, {
                  RowBox[{"\"StructurePreserving\"", "\[Rule]", 
                    TagBox["False", Short[#, 5]& ]}]}, {
                  RowBox[{"\"Missing\"", "\[Rule]", 
                    TagBox["\"Allowed\"", Short[#, 5]& ]}]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
                "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            DefaultBaseStyle -> "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
           "Column"]], Annotation[#, 
          Column[{Null, 
            
            Column[{"Info" -> 
              Short[<|"Type" -> "NumericalVector", "Weight" -> 3.|>, 5], 
              "Key" -> Short["(f2(f1f3))", 5], "Invertibility" -> 
              Short["Perfect", 5], "StructurePreserving" -> Short[False, 5], 
              "Missing" -> Short["Allowed", 5]}]}], "Tooltip"]& ]},
       "RowWithSeparators"],
      Background->Opacity[0.3, 
        RGBColor[{0.99, 0.99, 0.9801}]],
      FrameMargins->3 + Rational[1, 25] 7409^Rational[1, 2],
      FrameStyle->{
        Thickness[0.5], 
        Opacity[1.], 
        GrayLevel[0.83]},
      RoundingRadius->2,
      StripOnInput->False],
     TagBox[
      GridBox[{{
         RowBox[{
           PanelBox[
            TagBox[
             
             GridBox[{{"\"(f2(f1f3))\"", "\"NumericalVector\""}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Grid"]], "\[Rule]", 
           PanelBox[
            TagBox[
             
             GridBox[{{"\"(f2(f1f3))\"", "\"NumericalVector\""}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
             "Grid"]]}]}, {
         TagBox[
          GridBox[{{
             RowBox[{"\"Invertibility\"", "\[Rule]", 
               TagBox["\"Perfect\"", Short[#, 5]& ]}]}, {
             RowBox[{"\"StructurePreserving\"", "\[Rule]", 
               TagBox["False", Short[#, 5]& ]}]}, {
             RowBox[{"\"Missing\"", "\[Rule]", 
               TagBox["\"Allowed\"", Short[#, 5]& ]}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
           "Column", 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
          "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
       DefaultBaseStyle -> "Column", 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
    Annotation[#, 
     Column[{Panel[
         Grid[{{"(f2(f1f3))", "NumericalVector"}}]] -> Panel[
         Grid[{{"(f2(f1f3))", "NumericalVector"}}]], 
       Column[{
        "Invertibility" -> Short["Perfect", 5], "StructurePreserving" -> 
         Short[False, 5], "Missing" -> Short["Allowed", 5]}]}], "Tooltip"]& ],
    ",", "5", ",", 
   RowBox[{"{", 
    RowBox[{"NormalDistribution", ",", "Automatic"}], "}"}], ",", "None", ",", 
   TagBox[
    TooltipBox[
     FrameBox[
      StyleBox["\<\"Identity\"\>",
       StripOnInput->False,
       FontFamily->"Helvetica Neue",
       FontWeight->"Light",
       FontColor->GrayLevel[0.]],
      Background->Opacity[1., 
        RGBColor[{0.97, 0.97, 0.9602999999999999}]],
      FrameMargins->{{3, 3}, {0.5, 0.5}},
      FrameStyle->{
        Thickness[0.5], 
        Opacity[1.], 
        GrayLevel[0.83]},
      RoundingRadius->2,
      StripOnInput->False],
     TagBox[
      GridBox[{{""}, {
         InterpretationBox[
          TagBox[
           
           GridBox[{{""}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
            DefaultBaseStyle -> "Column", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"], 
          Column[{}]]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
       DefaultBaseStyle -> "Column", 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]],
    Annotation[#, 
     Column[{Null, 
       Column[{}]}], "Tooltip"]& ], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"NetworkType\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Value\"\>", "\[Rule]", "\<\"FullyConnected\"\>"}], ",", 
        RowBox[{"\<\"Options\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
       "\[RightAssociation]"}]}], ",", 
     RowBox[{"\<\"NetworkDepth\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Value\"\>", "\[Rule]", "4"}], ",", 
        RowBox[{"\<\"Options\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
       "\[RightAssociation]"}]}], ",", 
     RowBox[{"\<\"NumberOfParameters\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Value\"\>", "\[Rule]", "20"}], ",", 
        RowBox[{"\<\"Options\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
       "\[RightAssociation]"}]}], ",", 
     RowBox[{"\<\"ActivationFunction\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Value\"\>", "\[Rule]", "\<\"SELU\"\>"}], ",", 
        RowBox[{"\<\"Options\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
       "\[RightAssociation]"}]}], ",", 
     RowBox[{"\<\"L2Regularization\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Value\"\>", "\[Rule]", "None"}], ",", 
        RowBox[{"\<\"Options\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
       "\[RightAssociation]"}]}], ",", 
     RowBox[{"\<\"Dropout\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Value\"\>", "\[Rule]", "None"}], ",", 
        RowBox[{"\<\"Options\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
       "\[RightAssociation]"}]}], ",", 
     RowBox[{"\<\"NetInitializationMethod\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Value\"\>", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"\<\"Options\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
       "\[RightAssociation]"}]}], ",", 
     RowBox[{"\<\"OptimizationMethod\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Value\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\<\"ADAM\"\>", ",", 
           RowBox[{"\<\"L2Regularization\"\>", "\[Rule]", "None"}]}], "}"}]}],
         ",", 
        RowBox[{"\<\"Options\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
       "\[RightAssociation]"}]}], ",", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Value\"\>", "\[Rule]", "1000"}], ",", 
        RowBox[{"\<\"Options\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
       "\[RightAssociation]"}]}], ",", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Value\"\>", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"\<\"Options\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
       "\[RightAssociation]"}]}], ",", 
     RowBox[{"\<\"EarlyStopping\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Value\"\>", "\[Rule]", "False"}], ",", 
        RowBox[{"\<\"Options\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
       "\[RightAssociation]"}]}], ",", 
     RowBox[{"TrainingProgressReporting", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Value\"\>", "\[Rule]", "None"}], ",", 
        RowBox[{"\<\"Options\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
       "\[RightAssociation]"}]}], ",", 
     RowBox[{"\<\"NetTrainOptions\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Value\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"LearningRateMultipliers", "\[Rule]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"TargetDevice", "\[Rule]", "\<\"CPU\"\>"}]}], "}"}]}], ",", 
        RowBox[{"\<\"Options\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
       "\[RightAssociation]"}]}], ",", 
     RowBox[{"\<\"LossFunction\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Value\"\>", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"\<\"Options\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
       "\[RightAssociation]"}]}], ",", 
     RowBox[{"\<\"ValidationSetRatio\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{"\<\"Value\"\>", "\[Rule]", "None"}], ",", 
        RowBox[{"\<\"Options\"\>", "\[Rule]", 
         RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
       "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.869567841735056*^9, 3.929891882700859*^9, 
  3.933961109988866*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"d26adb3a-d0fe-4ec3-a4c2-ce67f58ee72b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"net", "=", 
  RowBox[{
   RowBox[{"Values", "[", 
    RowBox[{"surrogate3D", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "\"\<Model\>\""}], "]"}], "]"}], "]"}], 
   "\[LeftDoubleBracket]", "2", 
   "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<onnx_model.onnx\>\""}], ",", "net"}], "]"}]}], "Input",
 CellChangeTimes->{{3.869568040920177*^9, 3.869568048673661*^9}, {
  3.869568148884672*^9, 3.869568151010188*^9}, {3.869569483653434*^9, 
  3.869569518877932*^9}, {3.869569549709498*^9, 3.869569560355215*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"413d39d3-05d6-41d7-9e54-8f2c4fe88ed1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetGraph",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0149], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.03], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {18.5, 
                27.5}, {35., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {49.5, 
                27.5}, {33., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {18.5, 
                25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
               FaceForm[
                RGBColor[0.631, 0.8160000000000001, 0.498]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.40800000000000003`, 0.627, 0.196]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {22., 
                40.}}}]}, {
               FaceForm[
                RGBColor[0.38, 0.753, 0.89]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
               FaceForm[
                RGBColor[0.24300000000000002`, 0.608, 0.71]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {22., 
                19.}}}]}, {
               FaceForm[
                RGBColor[0.584, 0.51, 0.8390000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
               FaceForm[
                RGBColor[0.4, 0.396, 0.659]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {37., 
                30.}}}]}, {
               FaceForm[
                RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.647, 0.259, 0.08600000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {52., 
                40.}}}]}}, ImageMargins -> 0, ImageSize -> {36, Automatic}, 
             PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 
                 TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["2", "SummaryItem"], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0149], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.03], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {18.5, 
                27.5}, {35., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {49.5, 
                27.5}, {33., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {18.5, 
                25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
               FaceForm[
                RGBColor[0.631, 0.8160000000000001, 0.498]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.40800000000000003`, 0.627, 0.196]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {22., 
                40.}}}]}, {
               FaceForm[
                RGBColor[0.38, 0.753, 0.89]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
               FaceForm[
                RGBColor[0.24300000000000002`, 0.608, 0.71]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {22., 
                19.}}}]}, {
               FaceForm[
                RGBColor[0.584, 0.51, 0.8390000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
               FaceForm[
                RGBColor[0.4, 0.396, 0.659]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {37., 
                30.}}}]}, {
               FaceForm[
                RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.647, 0.259, 0.08600000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {52., 
                40.}}}]}}, ImageMargins -> 0, ImageSize -> {36, Automatic}, 
             PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetGraph`selection = None}, 
                 GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {
                    0.18751000502404325`, -0.18751000502404314`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {
                    1.187510005024043, -0.18751003181894016`}], 
                    
                    Offset[{0, -15.5}, {
                    1.187510005024043, -0.18751003181894016`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Mean\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {
                    2.1875100050240426`, -0.18751005861383718`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {
                    0.18751000502404302`, -0.5625300686619237}], 
                    
                    Offset[{0, -13.5}, {
                    0.18751000502404302`, -0.5625300686619237}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"LogStd\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {
                    1.1875100050240426`, -0.5625300954568208}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{1.4737193362868162`*^-7, 5.499999999999999}, {
                    0.7375100050240432, -0.1875100197612365}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897023396658`*^-8}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{1.4737193362868164`*^-7, 5.499999999999999}, {
                    1.7375100050240428`, -0.18751004655613351`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897023396664`*^-8}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399298`*^-7, 5.499999999999999}, {
                    0.7375100050240428, -0.5625300833991171}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897078907816`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{0.18751000502404325`, -0.18751000502404314`}, {
                    1.187510005024043, -0.18751003181894016`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{1.187510005024043, -0.18751003181894016`}, {
                    2.1875100050240426`, -0.18751005861383718`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mean\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Mean"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{0.18751000502404302`, -0.5625300686619237}, {
                    1.1875100050240426`, -0.5625300954568208}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"LogStd\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "LogStd"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> False]], {
                    0.7375100050240432, -0.1875100197612365}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794897023396658`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 5\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> False]], {
                    1.7375100050240428`, -0.18751004655613351`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794897023396658`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mean\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Mean"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> False]], {
                    0.7375100050240428, -0.5625300833991171}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999996, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"LogStd\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "LogStd"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0.18751000502404325`, -0.18751000502404314`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {
                    1.187510005024043, -0.18751003181894016`}], 
                    
                    Offset[{-12.5, -12.5}, {
                    1.187510005024043, -0.18751003181894016`}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {
                    1.187510005024043, -0.18751003181894016`}], 
                    
                    Offset[{12.5, 12.5}, {
                    1.187510005024043, -0.18751003181894016`}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {
                    1.187510005024043, -0.18751003181894016`}], 
                    
                    Offset[{-10.5, -10.5}, {
                    1.187510005024043, -0.18751003181894016`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {
                    1.187510005024043, -0.18751003181894016`}], 
                    
                    Offset[{10.5, 10.5}, {
                    1.187510005024043, -0.18751003181894016`}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {
                    1.187510005024043, -0.18751003181894016`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.1875100050240426`, -0.18751005861383718`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Mean\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Mean", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {
                    0.18751000502404302`, -0.5625300686619237}], 
                    
                    Offset[{-10.5, -10.5}, {
                    0.18751000502404302`, -0.5625300686619237}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {
                    0.18751000502404302`, -0.5625300686619237}], 
                    
                    Offset[{10.5, 10.5}, {
                    0.18751000502404302`, -0.5625300686619237}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {
                    0.18751000502404302`, -0.5625300686619237}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{1.1875100050240426`, -0.5625300954568208}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"LogStd\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["LogStd", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{0.18751000502404325`, -0.18751000502404314`}, {
                    1.187510005024043, -0.18751003181894016`}, {
                    2.1875100050240426`, -0.18751005861383718`}, {
                    0.18751000502404302`, -0.5625300686619237}, {
                    1.1875100050240426`, -0.5625300954568208}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 8, 21, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {167.99999999999997`, 68.62610497380277}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29., 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Port", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Mean\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Mean\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Mean"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Mean\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Mean"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"LogStd\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"LogStd\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"LogStd"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"LogStd\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"LogStd"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "2" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{1}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {1}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "1" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50, 5}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{50}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                    "$InputSize" -> 5, "$InputDimensions" -> {5}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50, 50}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{50}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                    "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50, 50}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{50}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                    "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                    "6" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{50, 50}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{50}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                    "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                    "8" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                    "9" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{1, 50}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{1}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "9", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Mean" -> NeuralNetworks`TensorT[{1}, 
                    NeuralNetworks`RealT], "LogStd" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "LogStd"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Mean"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Outputs", "Mean"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Outputs", "LogStd"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Outputs", "Mean"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Outputs", "LogStd"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                 Initialization :> {NetGraph}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetGraph[<|
   "Type" -> "Graph", 
    "Inputs" -> <|
     "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
    "Outputs" -> <|
     "Mean" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT], "LogStd" -> 
      NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>, 
    "Nodes" -> <|
     "2" -> <|"Type" -> "NetArray", 
        "Arrays" -> <|"Array" -> RawArray["Real32",{-1.1989428997039795`}]|>, 
        "Parameters" -> <|
         "Dimensions" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT], 
          "$ArrayDimensions" -> {1}|>, "Inputs" -> <||>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`AtomT]|>|>, 
      "1" -> <|"Type" -> "Chain", 
        "Nodes" -> <|
         "1" -> <|"Type" -> "Linear", 
            "Arrays" -> <|"Weights" -> CompressedData["
1:eJwViXsw1Wkch3UhrINxKRyn6bQobGqOO+f9vkVNYtdumNYUidbdWbfJYbXG
LaRSdm21pejitttltolWfu/3LbnsqHWOppT7rrvdZhhmSU2s/ng+M8/nkUYk
BkSt1tDQSNVemYBw5a6UlPCMQK2PEhme4ChL+BhlK2iucG3qMC6H1AseiU58
XMeefv7tz1S2ZMIzyBL+8vIIufjSkdhEe3OHiTF50mQtUfqr4b7+Q/RO12UP
5kYgQbDAsNGnZKfRZRbp+FhIG0iE+QdK3jNwVq4+2IH7xjtwj8Eg2j0/Aupn
1lAytBf1ktbQhuQKMqG8CheIIf3rpg5/cSYX3SZ1uFlUGowb1XoMG7li28VG
sM7UIk3WKjwzPwZ7tAqIVUsdNhSX4IO8/ViYJIGihj62nU+RXb02IJ2yhOhj
XtStNoaVfuEELs6HIebfY/J3Y4FwfeW326cAP1YAEq8c2FTjCanvmrEA9eQH
Lt8jdc0ZNL0sUEj2ssCY95t4gFKD+0WEolTcwtA4j4jVMxgSuqXpToiY714c
IindDSRm5CrTi/PDN4GM6KtF0KZYBYb9b7Fn6STu3qFNu7bF0nXTeryu0JVO
pJ4G85ZlzGnKgL7c31j3SY4DzXlEtfYVXMrK59kGn9G8YBF1zJLiolLsYd57
C1TaUvze9S7cqtDG4kx9+p2LD59VmbLzR9fQ6M3VrK4qHr7smkefOUO6Pv0/
qPpRxpvL3Jksb5LtrHfGzs1TsL+mGFWrdOhBna3U6+5jvL5gRH0tW3F4UNVU
0GuGD9+EQlClLSwUMvK0OJw2j/mihbMPnuvrQdndQ1hJT8BiKeKGViloXwug
CeJuKA+WkiunuoTFGAfud6KSu0ZIeL+BLpRJ14Lqh0q44deF9mV/k9gtT7Cn
Y4lEvo+H0XxdHK0YRBf722TBfZZkROry2znGtO3Xb/DJKRFYWzVixowhNRd9
AIXGGrrukQXNNkQME5LByEGHL3mvp5n+Vnw01IxILsvkDfKvYB6nia+mBdYG
FbL0hVm4n7ixKSnfkNbFVbE830eQfjaOuB1dTRUP3dnwfk88EyQI0a7ncYFU
C42eLez1zCr+eroQ0wKqwNYpGd/uFvOIRlP4NC2WqEuDSHWmu5BdYktfFTNM
vHAJ6vfNEf2S54IIS8kNyVa583EptSr/CTb+cQfzNU6A7zIKVl7aNHjBBc59
/YJ02xyA8PZ6ZvP7n9haBGyqVEJrWvtZV+d74jRiyx0+SPi28njcENVMcseq
yHCYCXXsryNDlgo8fmcHc92mFP4pUYFJuxYxbjtNsqzEaOfZC0n6N2n2oXtM
XWnHNfe2s+0HTGnCFRPsLOyGwfspHIo+gdGnz3CoRSH4R7hA/4iI/g+L7+tO

               "], "Biases" -> 
              RawArray["Real32",{-0.012169163674116135`, 
                0.009650961495935917, -0.013100849464535713`, \
-0.020143963396549225`, 
                0.006052089389413595, -0.002029701368883252, \
-0.006044588517397642, 0.007693909108638763, -0.0053748986683785915`, 
                0.009160751476883888, -0.014554915018379688`, \
-0.016858527436852455`, 0.013982144184410572`, 
                0.014517744071781635`, -0.008336205035448074, 
                0.004692817572504282, -0.0059677897952497005`, \
-0.0004948508576489985, -0.006720861420035362, -0.0016040425980463624`, \
-0.0015893345698714256`, 0.016085965558886528`, -0.013168460689485073`, 
                0.008929909206926823, -0.00793275237083435, \
-0.013195402920246124`, 0.0012483586324378848`, 
                
                0.015255754813551903`, -0.006633432116359472, \
-0.009408091194927692, 0.0070306602865457535`, 0.0049194954335689545`, 
                0.0004956835764460266, -0.0009747766889631748, 
                0.016394779086112976`, -0.008808722719550133, \
-0.015088994987308979`, 0.007704492192715406, 0.005776808597147465, 
                0.005734359845519066, 
                0.002242754213511944, -0.009465075097978115, 
                0.002219893503934145, -0.006096228491514921, 
                0.012610032223165035`, -0.013916024006903172`, 
                0.00878830999135971, -0.01231926865875721, 
                0.0029074775520712137`, 0.01287225354462862}]|>, 
            "Parameters" -> <|
             "OutputDimensions" -> {50}, "$OutputSize" -> 50, "$InputSize" -> 
              5, "$InputDimensions" -> {5}|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
          "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
            "Parameters" -> <|
             "Function" -> 
              NeuralNetworks`ValidatedParameter[
               "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
          "3" -> <|"Type" -> "Linear", 
            "Arrays" -> <|"Weights" -> CompressedData["
1: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
               "], "Biases" -> 
              RawArray["Real32",{-0.016855556517839432`, 
                0.0132837425917387, -0.0008768085390329361, 
                0.0052915834821760654`, 
                0.0027843292336910963`, -0.003698379499837756, \
-0.018797684460878372`, 
                0.001909635029733181, -0.0032004108652472496`, \
-0.0021246206015348434`, -0.00209363317117095, 0.004849011078476906, 
                0.015473847277462482`, -0.002095770090818405, \
-0.004852868150919676, 
                0.003735683625563979, -0.018036937341094017`, \
-0.005769259296357632, 
                0.00924748182296753, -0.0053855618461966515`, \
-0.010243135504424572`, 0.0026551897171884775`, 0.008476866409182549, 
                0.00027884868904948235`, 
                0.0001943559618666768, -0.011052536778151989`, \
-0.00904067326337099, 
                0.0036407792940735817`, -0.018745727837085724`, \
-0.016538191586732864`, -0.005400519352406263, -0.0259801484644413, \
-0.014598118141293526`, -0.006325799971818924, -0.001701550674624741, \
-0.009855473414063454, 0.0009022941812872887, -0.008556058630347252, 
                0.008934074081480503, -0.01370132714509964, \
-0.012249063700437546`, -0.015533125959336758`, -0.008746887557208538, \
-0.0013278448022902012`, -0.014745539054274559`, -0.00016663662972860038`, \
-0.005673646926879883, -0.009721470065414906, -0.006482403259724379, \
-0.013270319439470768`}]|>, 
            "Parameters" -> <|
             "OutputDimensions" -> {50}, "$OutputSize" -> 50, "$InputSize" -> 
              50, "$InputDimensions" -> {50}|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
          "4" -> <|
           "Type" -> "Elementwise", "Arrays" -> <||>, 
            "Parameters" -> <|
             "Function" -> 
              NeuralNetworks`ValidatedParameter[
               "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
          "5" -> <|"Type" -> "Linear", 
            "Arrays" -> <|"Weights" -> CompressedData["
1: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
               "], "Biases" -> 
              RawArray["Real32",{
                0.005410715937614441, -0.01599864475429058, \
-0.012356334365904331`, -0.0019229502649977803`, -0.007912768982350826, \
-0.00126570463180542, 0.003363359719514847, 0.00792764499783516, 
                0.013893168419599533`, 0.005173259414732456, 
                0.011369266547262669`, 0.017860183492302895`, 
                0.0115943793207407, 0.003669050754979253, 
                0.00040802027797326446`, 
                0.007683065254241228, -0.00001977363535843324, \
-0.0014695654390379786`, 
                0.014884470961987972`, -0.0012553277192637324`, \
-0.0032390437554568052`, 
                0.006286051589995623, -0.011098824441432953`, \
-0.010812340304255486`, -0.0026847096160054207`, -0.014801149256527424`, 
                0.017792388796806335`, -0.006464314181357622, \
-0.002623572712764144, 0.011417768895626068`, 
                0.010380287654697895`, -0.013666956685483456`, \
-0.006392901763319969, 0.0034489280078560114`, -0.008446968160569668, 
                0.0041366745717823505`, 0.00017079095414374024`, 
                0.00804638396948576, 0.0008761084172874689, 
                0.0025355147663503885`, -0.018615897744894028`, 
                0.01630355231463909, -0.0017558278050273657`, \
-0.008287418633699417, -0.005215818993747234, 0.003731731092557311, 
                0.004112285561859608, 
                0.004349738359451294, -0.002947157947346568, \
-0.013766915537416935`}]|>, 
            "Parameters" -> <|
             "OutputDimensions" -> {50}, "$OutputSize" -> 50, "$InputSize" -> 
              50, "$InputDimensions" -> {50}|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
          "6" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
            "Parameters" -> <|
             "Function" -> 
              NeuralNetworks`ValidatedParameter[
               "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
          "7" -> <|"Type" -> "Linear", 
            "Arrays" -> <|"Weights" -> CompressedData["
1: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
CSmxBZ35gRQrjhEnjA1EvZ9mmBNnSv8HM8Xrqw==
               "], "Biases" -> 
              RawArray["Real32",{
                0.0085669606924057, -0.005816908087581396, \
-0.00622056657448411, -0.006515318062156439, 
                0.012642390094697475`, -0.006272400729358196, 
                0.007060045842081308, 0.0009837764082476497, 
                0.008454084396362305, 0.0091059859842062, 
                0.00019714095105882734`, 
                0.002886500209569931, -0.007333200890570879, \
-0.0004301410517655313, -0.008454633876681328, -0.009274411015212536, 
                0.0018094265833497047`, -0.03375590220093727, \
-0.014028504490852356`, -0.01576893962919712, -0.011982426047325134`, \
-0.007978128269314766, -0.00908033549785614, 0.010301726870238781`, 
                0.0027259038761258125`, -0.014227363280951977`, \
-0.00851190835237503, -0.00037052982952445745`, 
                0.00250793038867414, -0.0047514960169792175`, 
                0.0021296311169862747`, -0.02267507277429104, \
-0.0006968285888433456, 0.007618354633450508, 
                0.014515720307826996`, -0.00630565918982029, 
                0.0018882949370890856`, -0.005293709225952625, \
-0.018618926405906677`, 0.016609342768788338`, 0.007530746981501579, 
                0.007625256199389696, -0.006014507729560137, 
                0.007178816013038158, 
                0.014553128741681576`, -0.006171787157654762, 
                0.0012284301919862628`, -0.011954723857343197`, \
-0.003772728145122528, 0.012225142680108547`}]|>, 
            "Parameters" -> <|
             "OutputDimensions" -> {50}, "$OutputSize" -> 50, "$InputSize" -> 
              50, "$InputDimensions" -> {50}|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
          "8" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
            "Parameters" -> <|
             "Function" -> 
              NeuralNetworks`ValidatedParameter[
               "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
          "9" -> <|"Type" -> "Linear", 
            "Arrays" -> <|
             "Weights" -> 
              RawArray["Real32",{{-0.14669808745384216`, -0.03554145619273186,
                 0.2883146107196808, 0.008508309721946716, 
                0.16655868291854858`, -0.009286974556744099, 
                0.05655810981988907, -0.030504625290632248`, 
                0.058353569358587265`, 
                0.02896176464855671, -0.05086623504757881, \
-0.025510365143418312`, 
                0.3212010860443115, -0.4679584503173828, \
-0.15340545773506165`, 0.05453438684344292, -0.4052717387676239, 
                0.16635684669017792`, 0.1012515276670456, 
                0.08590944856405258, -0.3113340139389038, 
                0.20390158891677856`, -0.021941184997558594`, 
                0.14965033531188965`, 0.08241142332553864, 
                0.05206910893321037, -0.07593682408332825, 
                0.07982836663722992, -0.24622854590415955`, 
                0.11494533717632294`, -0.1424265205860138, 0.2204093337059021,
                 0.21960042417049408`, -0.0022403772454708815`, \
-0.18525436520576477`, 0.11654142290353775`, -0.011941192671656609`, 
                0.08550712466239929, 
                0.03390452265739441, -0.024824095889925957`, \
-0.15898685157299042`, -0.15905553102493286`, 
                0.09315269440412521, -0.38257381319999695`, \
-0.1475590169429779, -0.009955892339348793, -0.07568862289190292, \
-0.07195841521024704, -0.012298707850277424`, -0.03176585212349892}}], 
              "Biases" -> RawArray["Real32",{-0.003006062936037779}]|>, 
            "Parameters" -> <|
             "OutputDimensions" -> {1}, "$OutputSize" -> 1, "$InputSize" -> 
              50, "$InputDimensions" -> {50}|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
        "Edges" -> {
         NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Inputs", "Input"], 
          NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Outputs", "Output"] -> 
          NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"]}, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Inputs", "Input"], 
      NeuralNetworks`NetPath["Outputs", "LogStd"] -> 
      NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Mean"] -> 
      NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"]}|>, <|
   "Version" -> "14.0.2", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.869568049960586*^9, 3.869568151347547*^9, 
  3.8695694841453238`*^9, 3.8695695211968603`*^9, 3.869569561513593*^9, 
  3.869569642717991*^9, 3.929891887443746*^9, 3.933961112557372*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"9ebeb750-7610-4bd8-902c-5e6b43d5a2fa"]
}, Open  ]],

Cell[TextData[StyleBox["The + above is clickable.",
 FontColor->RGBColor[1, 0, 1]]], "Text",
 CellChangeTimes->{{3.869569653757218*^9, 3.869569671403265*^9}, {
  3.933961133532617*^9, 
  3.93396114782928*^9}},ExpressionUUID->"1940a1c3-f303-4a35-a5b7-\
b526f85be5f4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"listdensityplot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"surrogate3D", "[", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "1", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{"\[ScriptCapitalD]", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"PointSize", "[", ".05", "]"}]}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Atom\>\"", ",", "\"\<Size\>\"", ",", "\"\<Dopant %\>\""}],
        "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListDensityPlot3D", "[", 
    RowBox[{"listdensityplot", ",", 
     RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
     RowBox[{"PlotLegends", "->", "Automatic"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Atom\>\"", ",", "\"\<Size\>\"", ",", "\"\<Dopant %\>\""}],
        "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.861217926002501*^9, 3.8612179718802757`*^9}, {
  3.8612180129806547`*^9, 3.86121802444725*^9}, {3.861218058395845*^9, 
  3.861218064416959*^9}, {3.861218123457266*^9, 3.861218130136543*^9}, {
  3.861218187923891*^9, 3.861218191390875*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"217d551d-66b4-4953-b38a-4a03693ad446"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{{{{{
         Directive[
          RGBColor[1, 0, 0], 
          PointSize[0.05]], 
         Point3DBox[{{4., 1., 1.}, {5., 2., 4.}, {3., 2., 3.}, {3., 2., 1.}, {
          1., 2., 1.}, {1., 2., 1.}, {3., 3., 2.}, {4., 2., 1.}, {3., 1., 
          4.}, {5., 2., 1.}}]}}, {}, {}}, {}}, 
     Raster3DBox[CompressedData["
1:eJw1jXss1AEAx6+oi81jUW2tTbczNEk7Io98FVlm6ciy7NB0OVEsPU6zYsSk
WkWljhjOlRaOuevFbRzupFg6rfP83cP9cp17TERSWavP9t3nr+8+tJSs2FNW
FApl3er+W/Q5mpF5XgUDYdekzCaQZIna3ykkUMuMWx4aJTDo5ue1p5rA2t+J
42UcEnzLIYUfjcQk1fE1i62D3Id6xvm5FuqLb4Ss7VroD0p7XeqMiDhbt0Y6
akTWIy5RUTSLbkb+wx7NV7xd6Mjd2TSDqa742wFOakS0HtaDT+DWDgeuQ7QK
vjZ3XiROEHD/tNxh3kRASc8MKRwhsTj1pC35FQmzrWBpIlAH35OKtPzLWoSm
OYYFf9Mgd4rh70M1QVPRY83uNeFErFtqUa8RrLpnOTyBAdfiG3krczPos1QW
pUANSYf/xppOFR40pi6OVakgrOduiWwnQPkLgYyIPJeENBLSXV0Oc4UkxmCK
ZAXrIMsovseRacHnNmRzhzTw3Vtwf/N607+fGfIr7xntR0wQM9n+Yr4Bj8X7
YhRBejRbvucPx6iR1Hp3nF+txkC3T//LFRVqbrjahziqUMUrqHSOICALk7V8
SCdRkiSSjyp1cG/m5lTW62B3wXa4OmgabSWGUsoPDdyKl2rZX4y4OhC+ITbP
BI+oWpnkphEHrk8fL+IYIAmyTkn31uOp56+FhnA1XPveBfKUalDTraSCS2pY
T87HlZIqKDl5XuVmAhKOZ/m20yRC5TTR7o8kPBwSV37SSXgztnITWla7dMog
L0ALs8GG1n90tcuMtxUHG2FfRh9ZEM4iWSQ4xmQZcE5ByZh30uMPk2k2MA==

      "], {{1, 1, 1}, {5, 3, 5}}, ColorFunction -> (If[# >= 0.5, 
        Opacity[
         If[
          Or[
           Inequality[
            Rational[1, 16], LessEqual, -1. + 2. #, Less, 
            Rational[3, 16]], 
           Inequality[
            Rational[1, 4], LessEqual, -1. + 2. #, Less, 
            Rational[5, 16]], 
           Inequality[
            Rational[3, 8], LessEqual, -1. + 2. #, Less, 
            Rational[1, 2]], 
           Inequality[
            Rational[9, 16], LessEqual, -1. + 2. #, Less, 
            Rational[5, 8]], 
           Inequality[
            Rational[11, 16], LessEqual, -1. + 2. #, Less, 
            Rational[3, 4]], 
           Inequality[
            Rational[13, 16], LessEqual, -1. + 2. #, Less, 
            Rational[15, 16]]], 0.01, 0.5, 0], 
         Blend[{{0., 
            RGBColor[0.178927, 0.305394, 0.933501]}, {0.01, 
            RGBColor[0.19450528, 0.32176776, 0.93438816]}, {0.02, 
            RGBColor[0.21008356, 0.33814152, 0.93527532]}, {0.03, 
            RGBColor[0.22566184, 0.35451528, 0.93616248]}, {0.04, 
            RGBColor[0.24124012, 0.37088904, 0.93704964]}, {0.05, 
            RGBColor[0.2568184, 0.3872628, 0.9379368]}, {0.06, 
            RGBColor[0.27239668, 0.40363656000000003`, 0.93882396]}, {0.07, 
            RGBColor[0.28797496, 0.42001032000000005`, 0.93971112]}, {0.08, 
            RGBColor[0.30355324, 0.43638408, 0.94059828]}, {0.09, 
            RGBColor[0.32031176, 0.45185968, 0.94163096]}, {0.1, 
            RGBColor[0.3376604, 0.46688620000000003`, 0.9427364]}, {0.11, 
            RGBColor[0.35500904, 0.48191272, 0.94384184]}, {0.12, 
            RGBColor[0.37235768, 0.49693924, 0.9449472800000001]}, {0.13, 
            RGBColor[0.38970632000000005`, 0.51196576, 0.94605272]}, {0.14, 
            RGBColor[0.40705496, 0.52699228, 0.94715816]}, {0.15, 
            RGBColor[0.4244036, 0.5420188, 0.9482636]}, {0.16, 
            RGBColor[0.44175224, 0.55704532, 0.94936904]}, {0.17, 
            RGBColor[0.46087964000000003`, 0.57320188, 0.95070128]}, {0.18, 
            RGBColor[0.48356456, 0.59161852, 0.95248712]}, {0.19, 
            RGBColor[0.50624948, 0.61003516, 0.95427296]}, {0.2, 
            RGBColor[0.5289344, 0.6284518, 0.9560588]}, {0.21, 
            RGBColor[0.55161932, 0.64686844, 0.95784464]}, {0.22, 
            RGBColor[0.57430424, 0.6652850800000001, 0.95963048]}, {0.23, 
            RGBColor[0.59698916, 0.6837017200000001, 0.96141632]}, {0.24, 
            RGBColor[0.61967408, 0.70211836, 0.9632021599999999]}, {0.25, 
            RGBColor[0.642359, 0.720535, 0.964988]}, {0.26, 
            RGBColor[0.6636740000000001, 0.73718644, 0.9671124799999999]}, {
           0.27, 
            RGBColor[
            0.6849890000000001, 0.7538378800000001, 0.9692369599999999]}, {
           0.28, 
            RGBColor[0.706304, 0.77048932, 0.97136144]}, {0.29, 
            RGBColor[0.727619, 0.78714076, 0.97348592]}, {0.3, 
            RGBColor[0.748934, 0.8037922, 0.9756104]}, {0.31, 
            RGBColor[0.7702490000000001, 0.82044364, 0.97773488]}, {0.32, 
            RGBColor[0.791564, 0.83709508, 0.97985936]}, {0.33, 
            RGBColor[0.8128790000000001, 0.8537465200000001, 0.98198384]}, {
           0.34, 
            RGBColor[0.8292412000000001, 0.86667844, 0.98357496]}, {
           0.35000000000000003`, 
            RGBColor[0.8431270000000001, 0.8777506, 0.9848994]}, {0.36, 
            RGBColor[0.8570128, 0.8888227599999999, 0.98622384]}, {0.37, 
            RGBColor[0.8708986, 0.8998949199999999, 0.98754828]}, {0.38, 
            RGBColor[0.8847844, 0.91096708, 0.98887272]}, {0.39, 
            RGBColor[0.8986702, 0.92203924, 0.99019716]}, {0.4, 
            RGBColor[0.9125559999999999, 0.9331114, 0.9915216]}, {
           0.41000000000000003`, 
            RGBColor[0.9264418, 0.94418356, 0.99284604]}, {0.42, 
            RGBColor[
            0.9376387199999999, 0.9530116399999999, 0.9904455600000001]}, {
           0.43, 
            RGBColor[0.94345788, 0.95735156, 0.98059524]}, {0.44, 
            RGBColor[0.9492770399999999, 0.96169148, 0.97074492]}, {0.45, 
            RGBColor[0.9550962, 0.9660314, 0.9608945999999999]}, {0.46, 
            RGBColor[0.96091536, 0.97037132, 0.95104428]}, {
           0.47000000000000003`, 
            RGBColor[0.9667345199999999, 0.97471124, 0.94119396]}, {0.48, 
            RGBColor[0.97255368, 0.97905116, 0.93134364]}, {0.49, 
            RGBColor[0.9783728399999999, 0.98339108, 0.92149332]}, {0.5, 
            RGBColor[0.984192, 0.987731, 0.911643]}, {0.51, 
            RGBColor[0.9855227999999999, 0.98828132, 0.8895881999999999]}, {
           0.52, 
            RGBColor[0.9868536, 0.98883164, 0.8675333999999999]}, {0.53, 
            RGBColor[0.9881844, 0.98938196, 0.8454786]}, {0.54, 
            RGBColor[0.9895151999999999, 0.98993228, 0.8234237999999999]}, {
           0.55, 
            RGBColor[0.990846, 0.9904826, 0.8013689999999999]}, {0.56, 
            RGBColor[0.9921768, 0.99103292, 0.7793142]}, {
           0.5700000000000001, 
            RGBColor[0.9935076, 0.99158324, 0.7572593999999999]}, {0.58, 
            RGBColor[0.9948384, 0.99213356, 0.7352046000000001]}, {0.59, 
            RGBColor[0.99505968, 0.99184148, 0.7036548400000002]}, {0.6, 
            RGBColor[0.9947262, 0.9911282, 0.6673576000000001]}, {0.61, 
            RGBColor[0.99439272, 0.99041492, 0.6310603600000001]}, {0.62, 
            RGBColor[0.99405924, 0.98970164, 0.59476312]}, {0.63, 
            RGBColor[0.99372576, 0.98898836, 0.55846588]}, {0.64, 
            RGBColor[0.99339228, 0.9882750800000001, 0.5221686399999999]}, {
           0.65, 
            RGBColor[0.9930588, 0.9875618, 0.48587139999999984`]}, {0.66, 
            RGBColor[0.99272532, 0.98684852, 0.4495741599999998]}, {0.67, 
            RGBColor[0.9910414, 0.9814426799999999, 0.41969795999999987`]}, {
           0.68, 
            RGBColor[0.9866566, 0.9666517199999999, 0.40266383999999983`]}, {
           0.6900000000000001, 
            RGBColor[0.9822718, 0.9518607599999999, 0.38562971999999984`]}, {
           0.7000000000000001, 
            RGBColor[0.977887, 0.9370697999999998, 0.3685955999999998]}, {
           0.71, 
            RGBColor[0.9735022, 0.92227884, 0.35156148]}, {0.72, 
            RGBColor[0.9691174, 0.90748788, 0.33452736]}, {0.73, 
            RGBColor[0.9647326, 0.89269692, 0.31749324]}, {0.74, 
            RGBColor[0.9603478, 0.87790596, 0.30045911999999997`]}, {0.75, 
            RGBColor[0.955963, 0.863115, 0.283425]}, {0.76, 
            RGBColor[0.94975468, 0.83850108, 0.27842964]}, {0.77, 
            RGBColor[0.94354636, 0.8138871599999999, 0.27343428]}, {0.78, 
            RGBColor[0.93733804, 0.78927324, 0.26843891999999997`]}, {0.79, 
            RGBColor[
            0.9311297199999999, 0.7646593199999999, 0.26344355999999997`]}, {
           0.8, 
            RGBColor[0.9249214, 0.7400454, 0.2584482]}, {0.81, 
            RGBColor[0.91871308, 0.7154314799999999, 0.25345284]}, {
           0.8200000000000001, 
            RGBColor[0.91250476, 0.6908175599999999, 0.24845748]}, {
           0.8300000000000001, 
            RGBColor[0.90629644, 0.6662036399999999, 0.24346212]}, {0.84, 
            RGBColor[0.90056124, 0.6413536400000002, 0.23873820000000004`]}, {
           0.85, 
            RGBColor[0.8950626, 0.6163856000000001, 0.23415000000000002`]}, {
           0.86, 
            RGBColor[0.88956396, 0.59141756, 0.2295618]}, {0.87, 
            RGBColor[0.88406532, 0.56644952, 0.2249736]}, {0.88, 
            RGBColor[0.8785666799999999, 0.54148148, 0.2203854]}, {0.89, 
            RGBColor[0.8730680399999999, 0.51651344, 0.2157972]}, {0.9, 
            RGBColor[
            0.8675693999999999, 0.4915453999999999, 0.21120899999999998`]}, {
           0.91, 
            RGBColor[
            0.8620707599999999, 0.46657735999999983`, 
             0.20662079999999997`]}, {0.92, 
            RGBColor[
            0.8567615599999999, 0.43729979999999974`, 
             0.20198823999999996`]}, {0.93, 
            RGBColor[0.85183124, 0.3994031999999997, 0.19726695999999996`]}, {
           0.9400000000000001, 
            RGBColor[0.84690092, 0.3615065999999997, 0.19254567999999997`]}, {
           0.9500000000000001, 
            RGBColor[
            0.8419705999999999, 0.3236099999999997, 0.18782439999999995`]}, {
           0.96, 
            RGBColor[0.83704028, 0.28571340000000006`, 0.18310312]}, {0.97, 
            RGBColor[0.83210996, 0.24781680000000006`, 0.17838184]}, {0.98, 
            RGBColor[
            0.82717964, 0.20992020000000003`, 0.17366056000000002`]}, {0.99, 
            RGBColor[0.8222493200000001, 0.1720236, 0.16893928]}, {1., 
            RGBColor[0.817319, 0.134127, 0.164218]}}, -1. + 2. #]], 
        RGBColor[0, 0, 0, 0]]& ), 
      VertexDataCoordinates -> {{0, 0, 0}, {1, 1, 1}}, 
      Method -> {
       "InterpolateValues" -> True, "FastRendering" -> True, "SampleLayers" -> 
        Automatic}]}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic, Automatic}, 
     FaceGrids -> None, Ticks -> {Automatic, Automatic, Automatic}, AxesLabel -> {
       FormBox[
        TagBox["\"Atom\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"Size\"", HoldForm], TraditionalForm], 
       FormBox[
        TagBox["\"Dopant %\"", HoldForm], TraditionalForm]}, Axes -> True, 
     PlotRange -> {{1., 5.}, {1., 3.}, Automatic}, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Lighting -> {{"Ambient", 
        GrayLevel[0.5]}, {"Directional", 
        GrayLevel[0.5], 
        ImageScaled[{0, 2, 2}]}, {"Directional", 
        GrayLevel[0.5], 
        ImageScaled[{2, 2, 2}]}, {"Directional", 
        GrayLevel[0.5], 
        ImageScaled[{2, 0, 2}]}}, FaceGridsStyle -> Automatic, 
     BoxRatios -> {1, 1, 0.4}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, 
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGA4CcSMQMwCxLNmgsBNe3SaAQweYIiPyg8O+WqRde4Pq1pG
5UflR+UHYf4c6fIDHf+j8qP5YzDLD3T8j8qPyg9m+YHOn6Pyo+XXYJYf6Pgf
lR/NH4NZfqDjf1R+NH+Myo/Kj5ZfQ1seADcCBho=
              "], {{
                Rational[-75, 8], -75}, {
                Rational[-45, 8], 75}}], 
             RasterBox[CompressedData["
1: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
getYWGKr07x4Yyl0Fr47Jy1Qjv8BItrFlw==
              "], {{
                Rational[-45, 8], -75}, {
                Rational[75, 8], 75}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[75, 8], -75}, {
                  Rational[-75, 8], -75}, {
                  Rational[-75, 8], 75}, {
                  Rational[75, 8], 75}, {
                  Rational[75, 8], -75}}, {{
                 9.375, -75}, {-9.375, -75}, {-9.375, 75}, {9.375, 75}, {
                 9.375, -75}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{9.375, -75.}, {9.375, 75.}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{9.375, -59.48275862068966}, 
                    Offset[{4., 0}, {9.375, -59.48275862068966}]}, {{
                    9.375, -33.62068965517241}, 
                    Offset[{4., 0}, {9.375, -33.62068965517241}]}, {{
                    9.375, -7.758620689655173}, 
                    Offset[{4., 0}, {9.375, -7.758620689655173}]}, {{9.375, 
                    18.10344827586207}, 
                    Offset[{4., 0}, {9.375, 18.10344827586207}]}, {{9.375, 
                    43.96551724137932}, 
                    Offset[{4., 0}, {9.375, 43.96551724137932}]}, {{9.375, 
                    69.82758620689656}, 
                    Offset[{4., 0}, {9.375, 69.82758620689656}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{9.375, -75.}, 
                    Offset[{2.5, 0.}, {9.375, -75.}]}, {{
                    9.375, -69.82758620689656}, 
                    Offset[{2.5, 0.}, {9.375, -69.82758620689656}]}, {{
                    9.375, -64.65517241379311}, 
                    Offset[{2.5, 0.}, {9.375, -64.65517241379311}]}, {{
                    9.375, -54.31034482758621}, 
                    Offset[{2.5, 0.}, {9.375, -54.31034482758621}]}, {{
                    9.375, -49.13793103448276}, 
                    Offset[{2.5, 0.}, {9.375, -49.13793103448276}]}, {{
                    9.375, -43.96551724137932}, 
                    Offset[{2.5, 0.}, {9.375, -43.96551724137932}]}, {{
                    9.375, -38.793103448275865`}, 
                    Offset[{2.5, 0.}, {9.375, -38.793103448275865`}]}, {{
                    9.375, -28.448275862068968`}, 
                    Offset[{2.5, 0.}, {9.375, -28.448275862068968`}]}, {{
                    9.375, -23.27586206896552}, 
                    Offset[{2.5, 0.}, {9.375, -23.27586206896552}]}, {{
                    9.375, -18.10344827586207}, 
                    Offset[{2.5, 0.}, {9.375, -18.10344827586207}]}, {{
                    9.375, -12.931034482758621`}, 
                    Offset[{2.5, 0.}, {9.375, -12.931034482758621`}]}, {{
                    9.375, -2.586206896551724}, 
                    Offset[{2.5, 0.}, {9.375, -2.586206896551724}]}, {{9.375, 
                    2.586206896551724}, 
                    Offset[{2.5, 0.}, {9.375, 2.586206896551724}]}, {{9.375, 
                    7.758620689655173}, 
                    Offset[{2.5, 0.}, {9.375, 7.758620689655173}]}, {{9.375, 
                    12.931034482758621`}, 
                    Offset[{2.5, 0.}, {9.375, 12.931034482758621`}]}, {{9.375,
                     23.27586206896552}, 
                    Offset[{2.5, 0.}, {9.375, 23.27586206896552}]}, {{9.375, 
                    28.448275862068968`}, 
                    Offset[{2.5, 0.}, {9.375, 28.448275862068968`}]}, {{9.375,
                     33.62068965517241}, 
                    Offset[{2.5, 0.}, {9.375, 33.62068965517241}]}, {{9.375, 
                    38.793103448275865`}, 
                    Offset[{2.5, 0.}, {9.375, 38.793103448275865`}]}, {{9.375,
                     49.13793103448276}, 
                    Offset[{2.5, 0.}, {9.375, 49.13793103448276}]}, {{9.375, 
                    54.31034482758621}, 
                    Offset[{2.5, 0.}, {9.375, 54.31034482758621}]}, {{9.375, 
                    59.48275862068966}, 
                    Offset[{2.5, 0.}, {9.375, 59.48275862068966}]}, {{9.375, 
                    64.65517241379311}, 
                    Offset[{2.5, 0.}, {9.375, 64.65517241379311}]}, {{9.375, 
                    75.}, 
                    Offset[{2.5, 0.}, {9.375, 75.}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"5.00\"", ShowStringCharacters -> False], 5., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], 
                    
                    TemplateBox[{"10.`", "6"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {9.375, -59.48275862068966}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"7.50\"", ShowStringCharacters -> False], 7.5, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], 
                    
                    TemplateBox[{"10.`", "6"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {9.375, -33.62068965517241}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"1.00\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], 
                    
                    TemplateBox[{"10.`", "7"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {9.375, -7.758620689655173}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"1.25\"", ShowStringCharacters -> False], 1.25,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], 
                    
                    TemplateBox[{"10.`", "7"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {9.375, 18.10344827586207}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"1.50\"", ShowStringCharacters -> False], 1.5, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], 
                    
                    TemplateBox[{"10.`", "7"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {9.375, 43.96551724137932}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"1.75\"", ShowStringCharacters -> False], 1.75,
                     AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], 
                    
                    TemplateBox[{"10.`", "7"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {9.375, 69.82758620689656}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                   StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                 False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4], 
                   Opacity[0.3]]}}, StripOnInput -> False]}, {"GraphicsAxes"},
               StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 150}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                RowBox[{
                  TagBox["ColorDataFunction", "SummaryHead"], "[", 
                  
                  DynamicModuleBox[{
                   Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                   TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"TemperatureMap\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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

                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"TemperatureMap\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1:eJwVlXk41nkXxm1ZIyVFDAkZQqQiS3dSyhIpZZsWJNmXZKtISaUik2w1Q4VE
SkoUlcmS3WPPvj6WZ/l9bTNRqvd5/zjXOf+c61znPtfnPgoufofceLm4uLg5
4caJ/9fVN14Er56oxlXjVNO7N9tQIb7jotEgG7Qp3LpFr8GP3pjGruR2rBVI
/xU1zkaPGe0h31gdgoKDbGUzO+D1g+9yNZuNsacniy+MNIAl7tJ7sqATH+c8
+UT+ZYMSmmmYH2rCqTxrl6yyLkgwaDHWS2wsvd4V8MaPhr69RlNTNV/gPrRd
KJGXAjdd8MKsbwtsh9T8NTu6Udr54OYXYQr8ki0xmr6taAiX+ho43IMVjTxi
v62iILI3NcHTpw0mkvwRxexeuFacueMsTcHawZe+FNkOudqffXuYfZA0NNnV
pUDh1WDtMf0HHXgm9ONJ8HA//vu3K4auRmHNaeXOkJJO7DD/HpjTNYCuF96N
czoUwlmXrIrau1Adu2jU0ziIEg/u1TxGFAYC+6pnp78gl36ej99lCCmKSY7i
phSMF3WhJdqD6WXfp+T6hxDWr/ZQzppCZuTdYh/VXuhuDG/WtR+GY/LHCXV7
CoL8ZHPe3j5cNF18fbBtGAY2tpoGzhRGDljaiEb2Q9BFIjTPbgS9BQZrlb0p
PJHKryyZHYB0kOt/N6gRfHOq2VMdTqF4hl92i84Q1GJeBZ25OgopgSOB7jco
rLMr7hBgD8EghXfOVHYMuoXD6YIpFC6Wucf3Zw/DMvdwgPKrMRw95tv4NJvC
kIKU2auTIzhe9pjwmtMRJPj9m3kRBZNrNTw31o3Cr2nOZ2SIjruvrv3OqqCQ
zQotO94+iktDJqzykHG8PL766O1WCkKHVIO3xo0hYfauZ7rYBGhCD69oDlOI
uJtt3GJIh4+DE59g8gSkppQG781SmG1XFPVl0mFevuFvf/lJnKzJ0f/BS3B6
zcMvwmnj2KjC0O1+MomnT9STTkkS9NjJZT7ZPwGeuJctxlpTmIkpmKnfSGCV
et9vz9cJDMyHeuWWTGHH6a0HdPQIKnqkDIazJlHqtGuZhDEDUXtLctLMCHRl
k/gjbKeQ/Ekg/XwtA7VKhnw8TgTPjkm0ruNlIEi1WW/MholVfOUnPLwJ4vut
u5RuMBBsH+HdXsqEaG69dmAYwdMlrzD6NwZuein4XF/DgouOzEeLaM5cmesy
2d5MpEdU+hgGsFBc5mmpHE/Qr5/5/vQAE68T3H2n61lYbvqu+2cqwYJD+QmV
gyzUZQr7ZW5kw6VZyP1LJsGqsD7uyX9YGCzO97OPYqPY3mH+5QsC9ZSFxzk6
bMzXHfRf3sfG8pGcqJvvCPYVrzb1yGJDaGDOv3w7BWevBTG3KgLVjFLGBm4K
PIYH96yKpHDPVXL03UuCB7KhiU1aFKo3y79Pf0QhekfjHiFnArHUrTvDT1KI
VaS2aVRTCFpxNdtOnCBKcmZC+Q6FA2vfP383RcGVbiiY/ZHCfEJ+QgsnrxS5
pbJflOBw6bzHvC+F02KeBhcJhfafjhkdWgQmCc/qd8tR6I7dSP9dniBlVlXa
1ZZAx/2URkIjGxYCo3HtVgRO4wsJ0yEEG4xk4wcvsPHhSrrepQgC+Z7PwhH3
ObpItE9rqLMRX+8r636DYPm7RGWuDAJLYaNnUSEsOEvs5LJKJFhMdd51maNj
DHe2e8cnJrY4iY5tTScYD9N04ntK8M+CmKKqGBO8j/s+y+QStDl8PxeTT/Cd
hAxccGCgg5GXx1NEUL6j5o5gIcG2iaFUWuYUsrecj5/6SJAvfS8v9g2B/4DZ
EaXpSYSGm5+l1RGkLTpXLy8lyO0oFA81mITZJ2kOkQTXujWH4zh94w0yDfUx
E1jnQne71sWZa8O2U3tPECfzQsUuehxMjc3CDe0EB5IyLxwqJmDcszv805GO
ssXQ5+KtBJ97nB6Gc+63T5wrMkt7DLerPh060kywW16i+lEewePYnFxLwVEc
T1j+NbWBoMy1jlGXRcC1zKZzbmAYm48dvT9Qy+EgJ2rFHEePPyIXue8XDYFL
NQOKnwlesvS2yqQRBM6ZOEVLDaJlfmrUvZJgk/a0vQlH102TiYWtVX344Y2g
B5z9w+ZfhH9zJzgbIt1h29eDYaNnfQV/EgQUXUpqpii0GCyL21nVjSox6b1V
vgQewTaFmecoaHHNmP7+/AtyBq/md5sTOOtuaArj/Im4yr5fK5O7cKtgVpLi
8O20MDtldYWN6es1Jd8jO+EfdSKCh+MTh99WLFMSZsP6wOsA+pkO2B5qGF8z
SMEiPFFh8Q4Lz1dmqDXbtENXcYf1plKOnxm4GTWt5XDXeXO0RL8NMvNZxUim
YLC0zeHx30x4pYU8eKTYioQj+mzXUxy/tLuuy9XBgOSJy7frWlogWNy04bo2
hQ+FPZLHRBj4qHg7YjayBRFSrvbPfrLBJaYx/9Z4Ch6TyX7rNFswH/b1Nq2e
DWOPyNY1oZOQyH90cncfDV69NyvmU9i4UtlScPb5BD4E5Nt4xtIwbLh+Ueo0
G5XySvG0sXGc2V6y+089Guz/fq1pxOGd/3ywj4bMOJT+u+oe1NiMpl/7Tzlz
sbGvs8Yi1oaO0Mj7ZpWqzZgWMWhya2GBJpa+cuHqGBZVnqgvxjXBne10yDGT
hYVtuha+b0chNqRxJ2OhEQNNFzqtONysP9YcPcYagWLK67l9Lo04UvCXo4k5
C2bR7h8c149A76CBHalvQH3ChwHd31gIyPv1lXZ4GFaCn94lbWvA7rODLurT
TKS1JmvvuzYE1/L9cjvT6/HWlmtifQUT0XMnOsPPDSI0tDmKLlgPre0KXpJJ
TLQb3zFz7+vHba2j9FuBdVD1l9RL9mTiL4FRy5KlXmhzX1Qr76mFilNBks5u
JhzKwv1b47sxxzO2RWRXLZRMLf5tlmZiTcCqRNaGLhTxWRgczaqBgvb4Ye8Z
BtqUc4v537QjmL/Q5KFwDeRlowoFOb6f3GPcu96sFfqC0pYsv8/4TUB2ZVYG
Azlyr36cK2nGktAlW92OaqybfeNnHMqAwvWRPbkDdfggMvHHZf1qSPXbNPVb
M5A2s/LWAF81IkWt3BrTqyBZw1IPV2FgtZNx26pN/8B4RZGP1LIq/A+f0N5y

                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                ColorDataFunction[
                "TemperatureMap", "Gradients", {0, 1}, Blend[
                 "TemperatureMap", #]& ], Selectable -> False, Editable -> 
                False, SelectWithContents -> True], ",", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "3.527065639015883`*^6", ",", "1.803805778849246`*^7"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "150"}], ",", 
           RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
           RowBox[{"OpacityFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    FractionBox["1", "16"], "\[LessEqual]", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", "#1"}]}], "<", 
                    FractionBox["3", "16"]}], "||", 
                    RowBox[{
                    FractionBox["1", "4"], "\[LessEqual]", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", "#1"}]}], "<", 
                    FractionBox["5", "16"]}], "||", 
                    RowBox[{
                    FractionBox["3", "8"], "\[LessEqual]", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", "#1"}]}], "<", 
                    FractionBox["1", "2"]}], "||", 
                    RowBox[{
                    FractionBox["9", "16"], "\[LessEqual]", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", "#1"}]}], "<", 
                    FractionBox["5", "8"]}], "||", 
                    RowBox[{
                    FractionBox["11", "16"], "\[LessEqual]", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", "#1"}]}], "<", 
                    FractionBox["3", "4"]}], "||", 
                    RowBox[{
                    FractionBox["13", "16"], "\[LessEqual]", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", "#1"}]}], "<", 
                    FractionBox["15", "16"]}]}], ",", "0.01`", ",", "0.5`", 
                    ",", "0"}], "]"}], "&"}], ")"}], "[", 
                   RowBox[{"Rescale", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5`", ",", "1"}], "}"}]}], "]"}], "]"}], "&"}], 
               ")"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.861217941322769*^9, 3.861217975158493*^9, {3.86121801552005*^9, 
   3.861218031143889*^9}, 3.861218070982581*^9, 3.861218133375935*^9, 
   3.8612181931673937`*^9, 3.861218907176721*^9, 3.8612190949706707`*^9, 
   3.929891900929564*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"06741a50-97b4-4140-bcd4-1f8f4cecc1cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"all3Dpoints", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", "j", ",", "k"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}], ",", "2"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.86121826395594*^9, 3.8612183102275877`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"67335ee5-3032-4982-ad95-7469babd4e35"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "5"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.86121828987148*^9, 3.861218310739188*^9}, 
   3.8612189111374083`*^9, 3.929891909400791*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"5ec08f83-fc1b-41bb-9e43-655598e4c2b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomChoice", "[", 
  RowBox[{"all3Dpoints", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.861218321043416*^9, 3.861218327207177*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"87f8fc4c-e1b5-4169-92fe-c69bc6a6d978"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.861218327654759*^9, 3.929891911871057*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"7c28c43a-d60a-4798-b690-a96f4fb8adaa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"acquisitionPI", "[", 
    RowBox[{"data_", ",", "nrandom_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Data", "=", "data"}], ",", 
       RowBox[{"Nrandom", "=", "nrandom"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"best\[Mu]", "=", 
       RowBox[{"Max", "@", 
        RowBox[{"surrogate3D", "[", 
         RowBox[{"Data", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}]}], 
      ";", " ", 
      RowBox[{"(*", 
       RowBox[{
       "Max", " ", "of", " ", "surrogate", " ", "at", " ", "the", " ", "x", 
        " ", "points", " ", "in", " ", "\[ScriptCapitalD]"}], " ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"newxpoints", "=", 
       RowBox[{"RandomChoice", "[", 
        RowBox[{"all3Dpoints", ",", "Nrandom"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"new\[Mu]", "=", 
       RowBox[{"surrogate3D", "[", "newxpoints", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"new\[Sigma]", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"StandardDeviation", "[", 
          RowBox[{"surrogate3D", "[", 
           RowBox[{"#", ",", "\"\<Distribution\>\""}], "]"}], "]"}], "&"}], "/@",
         "newxpoints"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"acquisitionProbability", "=", 
       RowBox[{"Chop", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"CDF", "[", 
           RowBox[{
            RowBox[{"NormalDistribution", "[", "]"}], ",", 
            FractionBox[
             RowBox[{
              RowBox[{
              "new\[Mu]", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], "-", "best\[Mu]"}], 
             RowBox[{
             "new\[Sigma]", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}]]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "@", "newxpoints"}]}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"argmax", "=", 
       RowBox[{
        RowBox[{"Position", "[", 
         RowBox[{"acquisitionProbability", ",", 
          RowBox[{"Max", "@", "acquisitionProbability"}]}], "]"}], 
        "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8399100134211392`*^9, 3.839910016328432*^9}, {
   3.839929348070524*^9, 3.839929351133572*^9}, {3.839929452845924*^9, 
   3.8399295055228233`*^9}, {3.839929679439012*^9, 3.839929687962658*^9}, {
   3.839929820941065*^9, 3.839929833200377*^9}, {3.839929863670355*^9, 
   3.839929868628977*^9}, {3.839930572767632*^9, 3.83993057293255*^9}, {
   3.839930661839614*^9, 3.839930692577365*^9}, {3.839930852802819*^9, 
   3.839930898027756*^9}, {3.839947173029624*^9, 3.839947271676084*^9}, {
   3.839947313953219*^9, 3.839947314053084*^9}, {3.839947613042748*^9, 
   3.8399476586769*^9}, {3.839948536616286*^9, 3.8399485375070868`*^9}, {
   3.839948728841096*^9, 3.8399487311417*^9}, {3.839948801136297*^9, 
   3.839948819541644*^9}, {3.839949176440452*^9, 3.8399491772549334`*^9}, {
   3.86121144201476*^9, 3.861211492111801*^9}, {3.861211538132603*^9, 
   3.8612115392731247`*^9}, {3.861212084457945*^9, 3.861212085194569*^9}, 
   3.861218219111195*^9, {3.861218258027754*^9, 3.861218262508445*^9}, {
   3.861218343765676*^9, 3.861218369055645*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"e1096f99-9dfb-4c69-a515-407e784028bf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"acquisitionPI", "[", 
  RowBox[{"\[ScriptCapitalD]", ",", "30"}], 
  "]"}], "\[IndentingNewLine]", "argmax", "\[IndentingNewLine]", 
 RowBox[{"newxpoints", "\[LeftDoubleBracket]", "argmax", 
  "\[RightDoubleBracket]"}]}], "Input",
 CellChangeTimes->{{3.861211690413377*^9, 3.861211751601278*^9}, {
   3.861212099506104*^9, 3.8612120995938263`*^9}, 3.861212138916745*^9},
 CellLabel->"In[64]:=",ExpressionUUID->"204735c1-aee2-4b1e-8afa-129929939e16"],

Cell[BoxData["15"], "Output",
 CellChangeTimes->{
  3.8612116268894444`*^9, {3.86121170554792*^9, 3.861211714958081*^9}, {
   3.861211752049541*^9, 3.861211754779156*^9}, {3.8612120942593727`*^9, 
   3.861212105129492*^9}, 3.861218389023369*^9, 3.861218927300702*^9, 
   3.929891923849997*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"2da45a37-8780-4fa4-a0e1-91655c834e32"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "2"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8612116268894444`*^9, {3.86121170554792*^9, 3.861211714958081*^9}, {
   3.861211752049541*^9, 3.861211754779156*^9}, {3.8612120942593727`*^9, 
   3.861212105129492*^9}, 3.861218389023369*^9, 3.861218927300702*^9, 
   3.929891923850683*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"f7babf11-315f-429c-8370-3354b270fba7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["with neural network",
  FontWeight->"Bold"],
 "\nfor loop"
}], "Section",
 CellChangeTimes->{{3.8398463858731937`*^9, 3.83984638947034*^9}, {
  3.8612189421067953`*^9, 
  3.8612189448143187`*^9}},ExpressionUUID->"d3566370-4ae0-4723-b6a4-\
b1fc37125733"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalD]", "=", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"{", 
         RowBox[{"4", ",", "1", ",", "1"}], "}"}], "5.631243992`*^6"},
       {
        RowBox[{"{", 
         RowBox[{"5", ",", "2", ",", "4"}], "}"}], "8.68652729`*^6"},
       {
        RowBox[{"{", 
         RowBox[{"3", ",", "2", ",", "3"}], "}"}], "9.168048034999996`*^6"},
       {
        RowBox[{"{", 
         RowBox[{"3", ",", "2", ",", "1"}], "}"}], "1.0247463781000003`*^7"},
       {
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "1"}], "}"}], "1.0247463781000003`*^7"},
       {
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "1"}], "}"}], "1.0247463781000003`*^7"},
       {
        RowBox[{"{", 
         RowBox[{"3", ",", "3", ",", "2"}], "}"}], "1.803666652199999`*^7"},
       {
        RowBox[{"{", 
         RowBox[{"4", ",", "2", ",", "1"}], "}"}], "1.0247463781000003`*^7"},
       {
        RowBox[{"{", 
         RowBox[{"3", ",", "1", ",", "4"}], "}"}], "4.1594404579999982`*^6"},
       {
        RowBox[{"{", 
         RowBox[{"5", ",", "2", ",", "1"}], "}"}], "1.0247463781000003`*^7"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptCapitalD]", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.929892145236438*^9, 3.929892178366269*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"a63b0cef-482f-4729-a6dc-865b5ac35578"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", 
       RowBox[{"4", ",", "1", ",", "1"}], "}"}], "5.631243992`*^6"},
     {
      RowBox[{"{", 
       RowBox[{"5", ",", "2", ",", "4"}], "}"}], "8.68652729`*^6"},
     {
      RowBox[{"{", 
       RowBox[{"3", ",", "2", ",", "3"}], "}"}], "9.168048034999996`*^6"},
     {
      RowBox[{"{", 
       RowBox[{"3", ",", "2", ",", "1"}], "}"}], "1.0247463781000003`*^7"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "1"}], "}"}], "1.0247463781000003`*^7"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "1"}], "}"}], "1.0247463781000003`*^7"},
     {
      RowBox[{"{", 
       RowBox[{"3", ",", "3", ",", "2"}], "}"}], "1.803666652199999`*^7"},
     {
      RowBox[{"{", 
       RowBox[{"4", ",", "2", ",", "1"}], "}"}], "1.0247463781000003`*^7"},
     {
      RowBox[{"{", 
       RowBox[{"3", ",", "1", ",", "4"}], "}"}], "4.1594404579999982`*^6"},
     {
      RowBox[{"{", 
       RowBox[{"5", ",", "2", ",", "1"}], "}"}], "1.0247463781000003`*^7"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.929892178767171*^9},
 CellLabel->
  "Out[76]//MatrixForm=",ExpressionUUID->"4c9661e0-bd1a-45ce-94c3-\
28a7a2714fa5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Niterations", "=", "10"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", " ", "Niterations"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"surrogate3D", "=", 
     RowBox[{"Predict", "[", 
      RowBox[{
       RowBox[{"Rule", "@@@", "\[ScriptCapitalD]"}], ",", 
       RowBox[{"Method", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<NeuralNetwork\>\"", ",", 
          RowBox[{"\"\<NetworkDepth\>\"", "\[Rule]", "4"}]}], "}"}]}]}], 
      "]"}]}], " ", ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"acquisitionPI", "[", 
     RowBox[{"\[ScriptCapitalD]", ",", "10"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"\[ScriptCapitalD]", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "newxpoints", "\[LeftDoubleBracket]", "argmax", 
         "\[RightDoubleBracket]"}], ",", 
        RowBox[{"objspectrum", "[", 
         RowBox[{"Sequence", "@@", 
          RowBox[{
          "newxpoints", "\[LeftDoubleBracket]", "argmax", 
           "\[RightDoubleBracket]"}]}], "]"}]}], "}"}]}], "]"}]}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 

 RowBox[{"\[ScriptCapitalD]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{"MaximalBy", "[", 
   RowBox[{"\[ScriptCapitalD]", ",", "Last"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.839768412071842*^9, 3.839768478381783*^9}, {
   3.839768538185245*^9, 3.839768586462804*^9}, {3.839949263412101*^9, 
   3.839949288181122*^9}, {3.839949379643992*^9, 3.839949389548135*^9}, {
   3.839949573562777*^9, 3.839949573923835*^9}, 3.839953479253183*^9, {
   3.839954303727742*^9, 3.839954304720728*^9}, {3.839954336791809*^9, 
   3.839954345579199*^9}, {3.839954468315017*^9, 3.839954469289606*^9}, 
   3.839954538240017*^9, {3.839954641947346*^9, 3.839954642078555*^9}, {
   3.839957582334197*^9, 3.839957584638*^9}, 3.8399577092576637`*^9, {
   3.861212354986677*^9, 3.861212355709484*^9}, {3.861212407475978*^9, 
   3.861212413941792*^9}, {3.861212570772829*^9, 3.861212572235668*^9}, {
   3.861212766995914*^9, 3.861212768081884*^9}, {3.861212955524865*^9, 
   3.8612129555853643`*^9}, {3.861212986988404*^9, 3.86121298718589*^9}, 
   3.861213751176965*^9, {3.861213818587407*^9, 3.861213818867723*^9}, {
   3.861218395245317*^9, 3.861218400056388*^9}, 3.861218434452634*^9, {
   3.861218949754148*^9, 3.861218955101098*^9}, 3.861219071279763*^9, {
   3.861219125942581*^9, 3.861219127031375*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"03c825b0-e709-4b0b-a0d0-835036b9dc7f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "1", ",", "1"}], "}"}], ",", "5.631243992`*^6"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "2", ",", "4"}], "}"}], ",", "8.68652729`*^6"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "2", ",", "3"}], "}"}], ",", 
     "9.168048034999996`*^6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "2", ",", "1"}], "}"}], ",", 
     "1.0247463781000003`*^7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
     "1.0247463781000003`*^7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
     "1.0247463781000003`*^7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "2"}], "}"}], ",", 
     "1.803666652199999`*^7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "2", ",", "1"}], "}"}], ",", 
     "1.0247463781000003`*^7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "4"}], "}"}], ",", 
     "4.1594404579999982`*^6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "2", ",", "1"}], "}"}], ",", 
     "1.0247463781000003`*^7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "1"}], "}"}], ",", "1.7377915059`*^7"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "2"}], "}"}], ",", 
     "1.911665681100001`*^7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "1"}], "}"}], ",", "1.7377915059`*^7"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "2"}], "}"}], ",", 
     "1.803666652199999`*^7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "1"}], "}"}], ",", "1.7377915059`*^7"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "3", ",", "4"}], "}"}], ",", 
     "2.019348095899999`*^7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "3"}], "}"}], ",", 
     "1.974690468799999`*^7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "3", ",", "4"}], "}"}], ",", 
     "2.0671751441000007`*^7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
     "1.904913383899999`*^7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "3", ",", "5"}], "}"}], ",", 
     "1.9270566400999993`*^7"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.861218973291362*^9, 3.8612191586384697`*^9, 
  3.9298920033485518`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"a525c639-c2ec-4d0b-9b40-a7d3b85966ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "3", ",", "4"}], "}"}], ",", 
    "2.0671751441000007`*^7"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.861218973291362*^9, 3.8612191586384697`*^9, 
  3.929892003349668*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"1fab9af2-b180-449f-a106-26c8994eb41f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalD]output", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "1", ",", "1"}], "}"}], ",", "5.631243992`*^6"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "2", ",", "4"}], "}"}], ",", "8.68652729`*^6"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "2", ",", "3"}], "}"}], ",", 
       "9.168048034999996`*^6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "2", ",", "1"}], "}"}], ",", 
       "1.0247463781000003`*^7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
       "1.0247463781000003`*^7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", 
       "1.0247463781000003`*^7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "2"}], "}"}], ",", 
       "1.803666652199999`*^7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "2", ",", "1"}], "}"}], ",", 
       "1.0247463781000003`*^7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "1", ",", "4"}], "}"}], ",", 
       "4.1594404579999982`*^6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "2", ",", "1"}], "}"}], ",", 
       "1.0247463781000003`*^7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "1"}], "}"}], ",", "1.7377915059`*^7"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "2"}], "}"}], ",", 
       "1.911665681100001`*^7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "1"}], "}"}], ",", "1.7377915059`*^7"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "2"}], "}"}], ",", 
       "1.803666652199999`*^7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "1"}], "}"}], ",", "1.7377915059`*^7"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "4"}], "}"}], ",", 
       "2.019348095899999`*^7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "3"}], "}"}], ",", 
       "1.974690468799999`*^7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "4"}], "}"}], ",", 
       "2.0671751441000007`*^7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", 
       "1.904913383899999`*^7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "5"}], "}"}], ",", 
       "1.9270566400999993`*^7"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[ScriptCapitalD]output", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "=", 
   RowBox[{"Round", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"\[ScriptCapitalD]output", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], 
      SuperscriptBox["10", "6"]], ",", "0.1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptCapitalD]output", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.929892219600429*^9, 3.929892230397064*^9}, {
  3.929892423286872*^9, 3.929892423655189*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"fa42b697-34ce-492b-992b-1c0a74da0bb1"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"{", 
       RowBox[{"4", ",", "1", ",", "1"}], "}"}], "5.6000000000000005`"},
     {
      RowBox[{"{", 
       RowBox[{"5", ",", "2", ",", "4"}], "}"}], "8.700000000000001`"},
     {
      RowBox[{"{", 
       RowBox[{"3", ",", "2", ",", "3"}], "}"}], "9.200000000000001`"},
     {
      RowBox[{"{", 
       RowBox[{"3", ",", "2", ",", "1"}], "}"}], "10.200000000000001`"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "1"}], "}"}], "10.200000000000001`"},
     {
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "1"}], "}"}], "10.200000000000001`"},
     {
      RowBox[{"{", 
       RowBox[{"3", ",", "3", ",", "2"}], "}"}], "18.`"},
     {
      RowBox[{"{", 
       RowBox[{"4", ",", "2", ",", "1"}], "}"}], "10.200000000000001`"},
     {
      RowBox[{"{", 
       RowBox[{"3", ",", "1", ",", "4"}], "}"}], "4.2`"},
     {
      RowBox[{"{", 
       RowBox[{"5", ",", "2", ",", "1"}], "}"}], "10.200000000000001`"},
     {
      RowBox[{"{", 
       RowBox[{"3", ",", "3", ",", "1"}], "}"}], "17.400000000000002`"},
     {
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "2"}], "}"}], "19.1`"},
     {
      RowBox[{"{", 
       RowBox[{"3", ",", "3", ",", "1"}], "}"}], "17.400000000000002`"},
     {
      RowBox[{"{", 
       RowBox[{"3", ",", "3", ",", "2"}], "}"}], "18.`"},
     {
      RowBox[{"{", 
       RowBox[{"3", ",", "3", ",", "1"}], "}"}], "17.400000000000002`"},
     {
      RowBox[{"{", 
       RowBox[{"5", ",", "3", ",", "4"}], "}"}], "20.200000000000003`"},
     {
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "3"}], "}"}], "19.700000000000003`"},
     {
      RowBox[{"{", 
       RowBox[{"4", ",", "3", ",", "4"}], "}"}], "20.700000000000003`"},
     {
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "5"}], "}"}], "19.`"},
     {
      RowBox[{"{", 
       RowBox[{"5", ",", "3", ",", "5"}], "}"}], "19.3`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.929892230979464*^9, 3.9298924245361023`*^9},
 CellLabel->
  "Out[102]//MatrixForm=",ExpressionUUID->"f8767440-6c25-422b-9adf-\
37ed6428d378"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ScriptCapitalD]output", "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
  "\[LeftDoubleBracket]", 
  RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.9298929243600397`*^9, 3.929892925295951*^9}, {
  3.929893017435122*^9, 3.929893037456658*^9}, {3.929893315897003*^9, 
  3.929893321832469*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"52951e8d-4b2c-4fc6-afd3-375781272ee4"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.9298929179516153`*^9, 3.929892925602168*^9}, {
   3.929893018347279*^9, 3.9298930379233932`*^9}, 3.929893317606236*^9, 
   3.9298938450718822`*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"0c76c6c9-ff77-4273-a7ed-0345b3e32ed5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"names", "=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"titlescorrected", "\[LeftDoubleBracket]", 
      RowBox[{"graphenes", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{
         RowBox[{"\[ScriptCapitalD]output", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", "2", ",", 
        RowBox[{
         RowBox[{"\[ScriptCapitalD]output", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{
         RowBox[{"\[ScriptCapitalD]output", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"i", ",", "3"}], "\[RightDoubleBracket]"}]}], 
       "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "@", "\[ScriptCapitalD]output"}]}], "}"}]}], "]"}], 
   "\[LeftDoubleBracket]", 
   RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}]], "Input",
 CellChangeTimes->{{3.929893791574739*^9, 3.9298937944827003`*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"ce0e0590-d65a-4013-8fce-27445e37c3bc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"1nm-pure-0percent\"\>", ",", "\<\"1.5nm-Pdoped-5percent\"\>", 
   ",", "\<\"1.5nm-Odoped-3percent\"\>", ",", "\<\"1.5nm-pure-0percent\"\>", 
   ",", "\<\"1.5nm-pure-0percent\"\>", ",", "\<\"1.5nm-pure-0percent\"\>", 
   ",", "\<\"2nm-Odoped-1.5percent\"\>", ",", "\<\"1.5nm-pure-0percent\"\>", 
   ",", "\<\"1nm-Odoped-5percent\"\>", ",", "\<\"1.5nm-pure-0percent\"\>", 
   ",", "\<\"2nm-pure-0percent\"\>", ",", "\<\"2nm-Ndoped-1.5percent\"\>", 
   ",", "\<\"2nm-pure-0percent\"\>", ",", "\<\"2nm-Odoped-1.5percent\"\>", 
   ",", "\<\"2nm-pure-0percent\"\>", ",", "\<\"2nm-Pdoped-5percent\"\>", 
   ",", "\<\"2nm-Ndoped-3percent\"\>", ",", "\<\"2nm-Sdoped-5percent\"\>", 
   ",", "\<\"2nm-Ndoped-7percent\"\>", ",", "\<\"2nm-Pdoped-7percent\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.929893794843184*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"8e4e09d3-d9ed-4d20-93ab-f58541dc73da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[ScriptCapitalD]output"], "Input",
 CellChangeTimes->{{3.929893827856391*^9, 3.929893847985984*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"14475fee-6a43-49c6-8c3b-5b73c9496a06"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "1", ",", "1"}], "}"}], ",", "5.6000000000000005`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "2", ",", "4"}], "}"}], ",", "8.700000000000001`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "2", ",", "3"}], "}"}], ",", "9.200000000000001`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "2", ",", "1"}], "}"}], ",", "10.200000000000001`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", "10.200000000000001`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "1"}], "}"}], ",", "10.200000000000001`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "2"}], "}"}], ",", "18.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "2", ",", "1"}], "}"}], ",", "10.200000000000001`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "1", ",", "4"}], "}"}], ",", "4.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "2", ",", "1"}], "}"}], ",", "10.200000000000001`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "1"}], "}"}], ",", "17.400000000000002`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "2"}], "}"}], ",", "19.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "1"}], "}"}], ",", "17.400000000000002`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "2"}], "}"}], ",", "18.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "3", ",", "1"}], "}"}], ",", "17.400000000000002`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "3", ",", "4"}], "}"}], ",", "20.200000000000003`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "3"}], "}"}], ",", "19.700000000000003`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4", ",", "3", ",", "4"}], "}"}], ",", "20.700000000000003`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "3", ",", "5"}], "}"}], ",", "19.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"5", ",", "3", ",", "5"}], "}"}], ",", "19.3`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.929893829881494*^9, 3.929893848189196*^9}},
 CellLabel->
  "Out[126]=",ExpressionUUID->"dd056682-b7cb-4fc3-8453-d5bdf9e3cc05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalD]output2", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Transpose", "@", 
      RowBox[{"{", "names", "}"}]}], ",", "\[ScriptCapitalD]output", ",", 
     "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.929892942881752*^9, 3.929892943168062*^9}, {
  3.9298929849166527`*^9, 3.929892985203373*^9}, {3.929893325817062*^9, 
  3.929893351727378*^9}, {3.929893735069777*^9, 3.929893813971136*^9}, {
  3.9298938567224207`*^9, 3.92989386534033*^9}, {3.929893931076469*^9, 
  3.929893941644602*^9}},
 CellLabel->
  "In[130]:=",ExpressionUUID->"2a791fd4-631a-45fe-a953-076a8490c67d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"1nm-pure-0percent\"\>", 
      RowBox[{"{", 
       RowBox[{"4", ",", "1", ",", "1"}], "}"}], "5.6000000000000005`"},
     {"\<\"1.5nm-Pdoped-5percent\"\>", 
      RowBox[{"{", 
       RowBox[{"5", ",", "2", ",", "4"}], "}"}], "8.700000000000001`"},
     {"\<\"1.5nm-Odoped-3percent\"\>", 
      RowBox[{"{", 
       RowBox[{"3", ",", "2", ",", "3"}], "}"}], "9.200000000000001`"},
     {"\<\"1.5nm-pure-0percent\"\>", 
      RowBox[{"{", 
       RowBox[{"3", ",", "2", ",", "1"}], "}"}], "10.200000000000001`"},
     {"\<\"1.5nm-pure-0percent\"\>", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "1"}], "}"}], "10.200000000000001`"},
     {"\<\"1.5nm-pure-0percent\"\>", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "1"}], "}"}], "10.200000000000001`"},
     {"\<\"2nm-Odoped-1.5percent\"\>", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3", ",", "2"}], "}"}], "18.`"},
     {"\<\"1.5nm-pure-0percent\"\>", 
      RowBox[{"{", 
       RowBox[{"4", ",", "2", ",", "1"}], "}"}], "10.200000000000001`"},
     {"\<\"1nm-Odoped-5percent\"\>", 
      RowBox[{"{", 
       RowBox[{"3", ",", "1", ",", "4"}], "}"}], "4.2`"},
     {"\<\"1.5nm-pure-0percent\"\>", 
      RowBox[{"{", 
       RowBox[{"5", ",", "2", ",", "1"}], "}"}], "10.200000000000001`"},
     {"\<\"2nm-pure-0percent\"\>", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3", ",", "1"}], "}"}], "17.400000000000002`"},
     {"\<\"2nm-Ndoped-1.5percent\"\>", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "2"}], "}"}], "19.1`"},
     {"\<\"2nm-pure-0percent\"\>", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3", ",", "1"}], "}"}], "17.400000000000002`"},
     {"\<\"2nm-Odoped-1.5percent\"\>", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3", ",", "2"}], "}"}], "18.`"},
     {"\<\"2nm-pure-0percent\"\>", 
      RowBox[{"{", 
       RowBox[{"3", ",", "3", ",", "1"}], "}"}], "17.400000000000002`"},
     {"\<\"2nm-Pdoped-5percent\"\>", 
      RowBox[{"{", 
       RowBox[{"5", ",", "3", ",", "4"}], "}"}], "20.200000000000003`"},
     {"\<\"2nm-Ndoped-3percent\"\>", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "3"}], "}"}], "19.700000000000003`"},
     {"\<\"2nm-Sdoped-5percent\"\>", 
      RowBox[{"{", 
       RowBox[{"4", ",", "3", ",", "4"}], "}"}], "20.700000000000003`"},
     {"\<\"2nm-Ndoped-7percent\"\>", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3", ",", "5"}], "}"}], "19.`"},
     {"\<\"2nm-Pdoped-7percent\"\>", 
      RowBox[{"{", 
       RowBox[{"5", ",", "3", ",", "5"}], "}"}], "19.3`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.929893781226501*^9, 3.9298938143475523`*^9}, {
  3.929893859326724*^9, 3.9298938656664743`*^9}, {3.929893932636135*^9, 
  3.9298939420068493`*^9}},
 CellLabel->
  "Out[131]//MatrixForm=",ExpressionUUID->"3b9aee8d-dbfa-42ba-8abd-\
230121888ca9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[ScriptCapitalD]output2", "\[LeftDoubleBracket]", 
  RowBox[{"All", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}]], "Input",
 CellChangeTimes->{{3.929894104985292*^9, 3.929894116510515*^9}},
 CellLabel->
  "In[133]:=",ExpressionUUID->"8de1a254-f4e4-46e1-bfa6-4dcab2a702c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"1nm-pure-0percent\"\>", ",", "5.6000000000000005`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"1.5nm-Pdoped-5percent\"\>", ",", "8.700000000000001`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"1.5nm-Odoped-3percent\"\>", ",", "9.200000000000001`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"1.5nm-pure-0percent\"\>", ",", "10.200000000000001`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"1.5nm-pure-0percent\"\>", ",", "10.200000000000001`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"1.5nm-pure-0percent\"\>", ",", "10.200000000000001`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2nm-Odoped-1.5percent\"\>", ",", "18.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"1.5nm-pure-0percent\"\>", ",", "10.200000000000001`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"1nm-Odoped-5percent\"\>", ",", "4.2`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"1.5nm-pure-0percent\"\>", ",", "10.200000000000001`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2nm-pure-0percent\"\>", ",", "17.400000000000002`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2nm-Ndoped-1.5percent\"\>", ",", "19.1`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2nm-pure-0percent\"\>", ",", "17.400000000000002`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2nm-Odoped-1.5percent\"\>", ",", "18.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2nm-pure-0percent\"\>", ",", "17.400000000000002`"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2nm-Pdoped-5percent\"\>", ",", "20.200000000000003`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2nm-Ndoped-3percent\"\>", ",", "19.700000000000003`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2nm-Sdoped-5percent\"\>", ",", "20.700000000000003`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2nm-Ndoped-7percent\"\>", ",", "19.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"2nm-Pdoped-7percent\"\>", ",", "19.3`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.929894112748768*^9, 3.929894116852799*^9}},
 CellLabel->
  "Out[133]=",ExpressionUUID->"2ffbd40d-2010-4cde-bc37-0d710d9432d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"listdensityplot", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"surrogate3D", "[", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "1", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", "1", ",", "5"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{"\[ScriptCapitalD]", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{"PointSize", "[", ".05", "]"}]}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Atom\>\"", ",", "\"\<Size\>\"", ",", "\"\<Dopant %\>\""}],
        "}"}]}], ",", 
     RowBox[{"BoxRatios", "\[Rule]", "1"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ListDensityPlot3D", "[", 
    RowBox[{"listdensityplot", ",", 
     RowBox[{"ColorFunction", "->", "\"\<TemperatureMap\>\""}], ",", 
     RowBox[{"PlotLegends", "->", "Automatic"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Atom\>\"", ",", "\"\<Size\>\"", ",", "\"\<Dopant %\>\""}],
        "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{
     RowBox[{"Callout", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Flatten", "@", 
         RowBox[{
          RowBox[{"MaximalBy", "[", 
           RowBox[{"\[ScriptCapitalD]", ",", "Last"}], "]"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
       "\"\<\!\(\*StyleBox[\"MAX\",FontWeight->\"Bold\"]\)\>\"", ",", 
       "Above"}], "]"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", 
        RowBox[{"PointSize", "[", ".06", "]"}]}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.861219259306422*^9, 3.861219260604378*^9}, {
  3.861219408190199*^9, 3.861219413083864*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"d7fc7fbe-b728-4097-b14e-e53bedf205aa"],

Cell[BoxData[
 TemplateBox[{
   Graphics3DBox[{{{{
        RGBColor[1, 0, 0], 
        PointSize[0.05], 
        Point3DBox[{{4., 1., 1.}, {5., 2., 4.}, {3., 2., 3.}, {3., 2., 1.}, {
         1., 2., 1.}, {1., 2., 1.}, {3., 3., 2.}, {4., 2., 1.}, {3., 1., 
         4.}, {5., 2., 1.}}]}, {}, {}}, {}}, 
     Raster3DBox[CompressedData["
1:eJw1kGtIUwEAhYePaWWzsTRJ1DItSFsmarjSo2EtQUq3ZSnWzEekpaINJVsr
kwpT88E0tQIryRo+hpg1pyxKoyhYYYKpyd1yd5vu7ir20KHZiDpwOH+/823N
KBBkOzIYDGd7/29fhkz9TD6Naow12BL1cA3bMFxRS+BJQEV+eS+B4bLViPIB
PfJFhzteZ5FQpI25da8zgR0+2RXDMON8ljw6sdMECz2hzHlkArdxbM3wKwqy
VNq90kbBWzMeFCy1gjTGSPriaYTcdgo+a7Ni5ERIzojhG/jaaIFCqAPjbwg0
Uh9T/GsI+AYErLhv0UPe9stSXk/i0vqB3FQPM0q5X6RHaDPUR6vcNGYTdrOu
lWTkmtCd1lpvUFMoS+CSznVWHPKcnH8TSGPw5FLkAyaN4zfYV/ZetUJU1NPq
Rdr//HaLlITpIH4ocHXeRYDrPzXk94FActKUd/82Pc40xfKixCRi3ytdexZM
2JmsiqotMkOsDLZQF4xoWxRyFrhG1P1szvpss+DufKCktp6CD1+TWSimoUSL
bSKdhgvhOLSnxQr58+ZRn+16sJmWEp+DOgTbPqX7iQk4MK4z68J18HuqrVzc
ZOdqbx9vtHs2zvU2zkmMKPZyKkmYJeEb1KTtdyBx73L4EkdEQmiI21HTMIu1
oovxEQIKTfuYMQfY9D+Pc1hOmtm4+a0VRnbhsa5RHXjCTrVyhYALR7vKsxGI
lqkmpR06nOJk3y/g6fEiJa+an0mCsZyQoVGQ+CpWsUppA4pZ/XkeP6YRKlfc
bH5pAGtVdS69aga5s1HSUMqC793vbj2WWXEnfr9nnIqGnj92emXQij8PDi0a

      "], {{1, 1, 1}, {5, 3, 5}}, ColorFunction -> (If[# >= 0.5, 
        Opacity[
         If[
          Or[
           Inequality[0, LessEqual, -1. + 2. #, Less, 
            Rational[1, 6]], 
           Inequality[
            Rational[7, 18], LessEqual, -1. + 2. #, Less, 
            Rational[4, 9]], 
           Inequality[
            Rational[1, 2], LessEqual, -1. + 2. #, Less, 
            Rational[11, 18]], 
           Inequality[
            Rational[7, 9], LessEqual, -1. + 2. #, Less, 1]], 0.01, 0.5, 0], 
         Blend[{{0., 
            RGBColor[0.178927, 0.305394, 0.933501]}, {0.01, 
            RGBColor[0.19450528, 0.32176776, 0.93438816]}, {0.02, 
            RGBColor[0.21008356, 0.33814152, 0.93527532]}, {0.03, 
            RGBColor[0.22566184, 0.35451528, 0.93616248]}, {0.04, 
            RGBColor[0.24124012, 0.37088904, 0.93704964]}, {0.05, 
            RGBColor[0.2568184, 0.3872628, 0.9379368]}, {0.06, 
            RGBColor[0.27239668, 0.40363656000000003`, 0.93882396]}, {0.07, 
            RGBColor[0.28797496, 0.42001032000000005`, 0.93971112]}, {0.08, 
            RGBColor[0.30355324, 0.43638408, 0.94059828]}, {0.09, 
            RGBColor[0.32031176, 0.45185968, 0.94163096]}, {0.1, 
            RGBColor[0.3376604, 0.46688620000000003`, 0.9427364]}, {0.11, 
            RGBColor[0.35500904, 0.48191272, 0.94384184]}, {0.12, 
            RGBColor[0.37235768, 0.49693924, 0.9449472800000001]}, {0.13, 
            RGBColor[0.38970632000000005`, 0.51196576, 0.94605272]}, {0.14, 
            RGBColor[0.40705496, 0.52699228, 0.94715816]}, {0.15, 
            RGBColor[0.4244036, 0.5420188, 0.9482636]}, {0.16, 
            RGBColor[0.44175224, 0.55704532, 0.94936904]}, {0.17, 
            RGBColor[0.46087964000000003`, 0.57320188, 0.95070128]}, {0.18, 
            RGBColor[0.48356456, 0.59161852, 0.95248712]}, {0.19, 
            RGBColor[0.50624948, 0.61003516, 0.95427296]}, {0.2, 
            RGBColor[0.5289344, 0.6284518, 0.9560588]}, {0.21, 
            RGBColor[0.55161932, 0.64686844, 0.95784464]}, {0.22, 
            RGBColor[0.57430424, 0.6652850800000001, 0.95963048]}, {0.23, 
            RGBColor[0.59698916, 0.6837017200000001, 0.96141632]}, {0.24, 
            RGBColor[0.61967408, 0.70211836, 0.9632021599999999]}, {0.25, 
            RGBColor[0.642359, 0.720535, 0.964988]}, {0.26, 
            RGBColor[0.6636740000000001, 0.73718644, 0.9671124799999999]}, {
           0.27, 
            RGBColor[
            0.6849890000000001, 0.7538378800000001, 0.9692369599999999]}, {
           0.28, 
            RGBColor[0.706304, 0.77048932, 0.97136144]}, {0.29, 
            RGBColor[0.727619, 0.78714076, 0.97348592]}, {0.3, 
            RGBColor[0.748934, 0.8037922, 0.9756104]}, {0.31, 
            RGBColor[0.7702490000000001, 0.82044364, 0.97773488]}, {0.32, 
            RGBColor[0.791564, 0.83709508, 0.97985936]}, {0.33, 
            RGBColor[0.8128790000000001, 0.8537465200000001, 0.98198384]}, {
           0.34, 
            RGBColor[0.8292412000000001, 0.86667844, 0.98357496]}, {
           0.35000000000000003`, 
            RGBColor[0.8431270000000001, 0.8777506, 0.9848994]}, {0.36, 
            RGBColor[0.8570128, 0.8888227599999999, 0.98622384]}, {0.37, 
            RGBColor[0.8708986, 0.8998949199999999, 0.98754828]}, {0.38, 
            RGBColor[0.8847844, 0.91096708, 0.98887272]}, {0.39, 
            RGBColor[0.8986702, 0.92203924, 0.99019716]}, {0.4, 
            RGBColor[0.9125559999999999, 0.9331114, 0.9915216]}, {
           0.41000000000000003`, 
            RGBColor[0.9264418, 0.94418356, 0.99284604]}, {0.42, 
            RGBColor[
            0.9376387199999999, 0.9530116399999999, 0.9904455600000001]}, {
           0.43, 
            RGBColor[0.94345788, 0.95735156, 0.98059524]}, {0.44, 
            RGBColor[0.9492770399999999, 0.96169148, 0.97074492]}, {0.45, 
            RGBColor[0.9550962, 0.9660314, 0.9608945999999999]}, {0.46, 
            RGBColor[0.96091536, 0.97037132, 0.95104428]}, {
           0.47000000000000003`, 
            RGBColor[0.9667345199999999, 0.97471124, 0.94119396]}, {0.48, 
            RGBColor[0.97255368, 0.97905116, 0.93134364]}, {0.49, 
            RGBColor[0.9783728399999999, 0.98339108, 0.92149332]}, {0.5, 
            RGBColor[0.984192, 0.987731, 0.911643]}, {0.51, 
            RGBColor[0.9855227999999999, 0.98828132, 0.8895881999999999]}, {
           0.52, 
            RGBColor[0.9868536, 0.98883164, 0.8675333999999999]}, {0.53, 
            RGBColor[0.9881844, 0.98938196, 0.8454786]}, {0.54, 
            RGBColor[0.9895151999999999, 0.98993228, 0.8234237999999999]}, {
           0.55, 
            RGBColor[0.990846, 0.9904826, 0.8013689999999999]}, {0.56, 
            RGBColor[0.9921768, 0.99103292, 0.7793142]}, {
           0.5700000000000001, 
            RGBColor[0.9935076, 0.99158324, 0.7572593999999999]}, {0.58, 
            RGBColor[0.9948384, 0.99213356, 0.7352046000000001]}, {0.59, 
            RGBColor[0.99505968, 0.99184148, 0.7036548400000002]}, {0.6, 
            RGBColor[0.9947262, 0.9911282, 0.6673576000000001]}, {0.61, 
            RGBColor[0.99439272, 0.99041492, 0.6310603600000001]}, {0.62, 
            RGBColor[0.99405924, 0.98970164, 0.59476312]}, {0.63, 
            RGBColor[0.99372576, 0.98898836, 0.55846588]}, {0.64, 
            RGBColor[0.99339228, 0.9882750800000001, 0.5221686399999999]}, {
           0.65, 
            RGBColor[0.9930588, 0.9875618, 0.48587139999999984`]}, {0.66, 
            RGBColor[0.99272532, 0.98684852, 0.4495741599999998]}, {0.67, 
            RGBColor[0.9910414, 0.9814426799999999, 0.41969795999999987`]}, {
           0.68, 
            RGBColor[0.9866566, 0.9666517199999999, 0.40266383999999983`]}, {
           0.6900000000000001, 
            RGBColor[0.9822718, 0.9518607599999999, 0.38562971999999984`]}, {
           0.7000000000000001, 
            RGBColor[0.977887, 0.9370697999999998, 0.3685955999999998]}, {
           0.71, 
            RGBColor[0.9735022, 0.92227884, 0.35156148]}, {0.72, 
            RGBColor[0.9691174, 0.90748788, 0.33452736]}, {0.73, 
            RGBColor[0.9647326, 0.89269692, 0.31749324]}, {0.74, 
            RGBColor[0.9603478, 0.87790596, 0.30045911999999997`]}, {0.75, 
            RGBColor[0.955963, 0.863115, 0.283425]}, {0.76, 
            RGBColor[0.94975468, 0.83850108, 0.27842964]}, {0.77, 
            RGBColor[0.94354636, 0.8138871599999999, 0.27343428]}, {0.78, 
            RGBColor[0.93733804, 0.78927324, 0.26843891999999997`]}, {0.79, 
            RGBColor[
            0.9311297199999999, 0.7646593199999999, 0.26344355999999997`]}, {
           0.8, 
            RGBColor[0.9249214, 0.7400454, 0.2584482]}, {0.81, 
            RGBColor[0.91871308, 0.7154314799999999, 0.25345284]}, {
           0.8200000000000001, 
            RGBColor[0.91250476, 0.6908175599999999, 0.24845748]}, {
           0.8300000000000001, 
            RGBColor[0.90629644, 0.6662036399999999, 0.24346212]}, {0.84, 
            RGBColor[0.90056124, 0.6413536400000002, 0.23873820000000004`]}, {
           0.85, 
            RGBColor[0.8950626, 0.6163856000000001, 0.23415000000000002`]}, {
           0.86, 
            RGBColor[0.88956396, 0.59141756, 0.2295618]}, {0.87, 
            RGBColor[0.88406532, 0.56644952, 0.2249736]}, {0.88, 
            RGBColor[0.8785666799999999, 0.54148148, 0.2203854]}, {0.89, 
            RGBColor[0.8730680399999999, 0.51651344, 0.2157972]}, {0.9, 
            RGBColor[
            0.8675693999999999, 0.4915453999999999, 0.21120899999999998`]}, {
           0.91, 
            RGBColor[
            0.8620707599999999, 0.46657735999999983`, 
             0.20662079999999997`]}, {0.92, 
            RGBColor[
            0.8567615599999999, 0.43729979999999974`, 
             0.20198823999999996`]}, {0.93, 
            RGBColor[0.85183124, 0.3994031999999997, 0.19726695999999996`]}, {
           0.9400000000000001, 
            RGBColor[0.84690092, 0.3615065999999997, 0.19254567999999997`]}, {
           0.9500000000000001, 
            RGBColor[
            0.8419705999999999, 0.3236099999999997, 0.18782439999999995`]}, {
           0.96, 
            RGBColor[0.83704028, 0.28571340000000006`, 0.18310312]}, {0.97, 
            RGBColor[0.83210996, 0.24781680000000006`, 0.17838184]}, {0.98, 
            RGBColor[
            0.82717964, 0.20992020000000003`, 0.17366056000000002`]}, {0.99, 
            RGBColor[0.8222493200000001, 0.1720236, 0.16893928]}, {1., 
            RGBColor[0.817319, 0.134127, 0.164218]}}, -1. + 2. #]], 
        RGBColor[0, 0, 0, 0]]& ), 
      Method -> {
       "InterpolateValues" -> True, "FastRendering" -> True, "SampleLayers" -> 
        Automatic}, VertexDataCoordinates -> {{0, 0, 0}, {1, 1, 1}}], {{{
        RGBColor[0, 1, 0], 
        PointSize[0.06], 
        Point3DBox[{3., 3., 2.}]}, {{}, 
        Inset3DBox[
         GraphicsBox[
          GraphicsGroupBox[{{
             GrayLevel[1], 
             AbsoluteThickness[4], 
             Opacity[
              NCache[
               Rational[2, 3], 0.6666666666666666]], 
             CapForm["Butt"], 
             JoinForm["Round"], 
             BSplineCurveBox[{
               Offset[{1.8369701987210297`*^-16, 3.}, {0., 0.}], 
               Offset[{4.898587196589413*^-16, 8.}, {0., 0.}], 
               Offset[{4.898587196589413*^-16, 10.}, {0., 0.}], 
               Offset[{4.898587196589413*^-16, 12.}, {0., 0.}], 
               Offset[{4.898587196589413*^-16, 12.}, {0., 0.}]}]}, {
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25], 
             BSplineCurveBox[{
               Offset[{1.8369701987210297`*^-16, 3.}, {0., 0.}], 
               Offset[{4.898587196589413*^-16, 8.}, {0., 0.}], 
               Offset[{4.898587196589413*^-16, 10.}, {0., 0.}], 
               Offset[{4.898587196589413*^-16, 12.}, {0., 0.}], 
               Offset[{4.898587196589413*^-16, 12.}, {0., 0.}]}]}, {
             EdgeForm[None], 
             FaceForm[{
               GrayLevel[1], 
               Opacity[
                NCache[
                 Rational[2, 3], 0.6666666666666666]]}], 
             PolygonBox[{
               Offset[{20.499999999999996`, 44.}, {0., 0.}], 
               Offset[{20.500000000000004`, 12.000000000000005`}, {0., 0.}], 
               Offset[{-20.499999999999996`, 11.999999999999996`}, {0., 0.}], 
               
               
               Offset[{-20.500000000000004`, 43.99999999999999}, {0., 
                0.}]}]}, {
             RGBColor[
             0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
             AbsoluteThickness[1.25], 
             EdgeForm[None]}, {}, 
            InsetBox[
             StyleBox[
              RotationBox[
              "\"\\!\\(\\*StyleBox[\\\"MAX\\\",FontWeight->\\\"Bold\\\"]\\)\"\
", BoxRotation -> 0.], StripOnInput -> False, LineOpacity -> 1, 
              FrontFaceOpacity -> 1, BackFaceOpacity -> 1, Opacity -> 1, 
              FontOpacity -> 1], 
             Offset[{4.898587196589413*^-16, 28.}, {0., 0.}], 
             NCache[
              ImageScaled[{
                Rational[1, 2], 
                Rational[1, 2]}], 
              ImageScaled[{0.5, 0.5}]]]}], AspectRatio -> Full, 
          ImageSize -> {70, 61}, PlotRange -> {{-0.5, 0.5}, {0, 1}}], {3., 3.,
          2.}, 
         Offset[{0., -7.97456148187538}, {0, 0}]]}, {}}, {}}}, Axes -> True, 
    AxesLabel -> {
      FormBox[
       TagBox["\"Atom\"", HoldForm], TraditionalForm], 
      FormBox[
       TagBox["\"Size\"", HoldForm], TraditionalForm], 
      FormBox[
       TagBox["\"Dopant %\"", HoldForm], TraditionalForm]}, BoxRatios -> 1, 
    DisplayFunction -> Identity, FaceGrids -> None, FaceGridsStyle -> 
    Automatic, ImageSize -> {360., 339.46152005422965`}, 
    Lighting -> {{"Ambient", 
       GrayLevel[0.5]}, {"Directional", 
       GrayLevel[0.5], 
       ImageScaled[{0, 2, 2}]}, {"Directional", 
       GrayLevel[0.5], 
       ImageScaled[{2, 2, 2}]}, {"Directional", 
       GrayLevel[0.5], 
       ImageScaled[{2, 0, 2}]}}, PlotRange -> {{1., 5.}, {1., 3.}, Automatic},
     PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}, {0, 0}}, SphericalRegion -> True, 
    Ticks -> {Automatic, Automatic, Automatic}, ViewAngle -> 
    0.5176274012586667, 
    ViewPoint -> {1.7766285050441453`, -2.0126877429300887`, 
     2.0597764938273255`}, 
    ViewVertical -> {0.05517170994186032, 0.07402950451625402, 
     0.9957287355917622}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, 
             RasterBox[CompressedData["
1:eJxTTMoPSmVmYGA4CcSMQMwCxLNmgsBNe3S6WmSd+8OqFgzxUflR+VH5UXlC
8gxg8GBUflR+VH5UflSezvIDXf4Pd/mBjt/hLj/Q8TsqPyo/Wn6Myo/Kj8oP
hPxAl0+j8qPyo/Kj8iNVHlY+AwAgOgYa
              "], {{
                Rational[-75, 8], -75}, {
                Rational[-45, 8], 75}}], 
             RasterBox[CompressedData["
1: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
getYWGKr07x4Yyl0Fr47Jy1Qjv8BItrFlw==
              "], {{
                Rational[-45, 8], -75}, {
                Rational[75, 8], 75}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[75, 8], -75}, {
                  Rational[-75, 8], -75}, {
                  Rational[-75, 8], 75}, {
                  Rational[75, 8], 75}, {
                  Rational[75, 8], -75}}, {{
                 9.375, -75}, {-9.375, -75}, {-9.375, 75}, {9.375, 75}, {
                 9.375, -75}}]]}, {
              CapForm[None], {}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{9.375, -75.}, {9.375, 75.}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{9.375, -60.3448275862069}, 
                    Offset[{4., 0}, {9.375, -60.3448275862069}]}, {{
                    9.375, -17.24137931034483}, 
                    Offset[{4., 0}, {9.375, -17.24137931034483}]}, {{9.375, 
                    25.862068965517242`}, 
                    Offset[{4., 0}, {9.375, 25.862068965517242`}]}, {{9.375, 
                    68.96551724137932}, 
                    Offset[{4., 0}, {9.375, 68.96551724137932}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False], 
                   StyleBox[
                    LineBox[{{{9.375, -68.96551724137932}, 
                    Offset[{2.5, 0.}, {9.375, -68.96551724137932}]}, {{
                    9.375, -51.724137931034484`}, 
                    Offset[{2.5, 0.}, {9.375, -51.724137931034484`}]}, {{
                    9.375, -43.10344827586207}, 
                    Offset[{2.5, 0.}, {9.375, -43.10344827586207}]}, {{
                    9.375, -34.48275862068966}, 
                    Offset[{2.5, 0.}, {9.375, -34.48275862068966}]}, {{
                    9.375, -25.862068965517242`}, 
                    Offset[{2.5, 0.}, {9.375, -25.862068965517242`}]}, {{
                    9.375, -8.620689655172415}, 
                    Offset[{2.5, 0.}, {9.375, -8.620689655172415}]}, {{9.375, 
                    0.}, 
                    Offset[{2.5, 0.}, {9.375, 0.}]}, {{9.375, 
                    8.620689655172415}, 
                    Offset[{2.5, 0.}, {9.375, 8.620689655172415}]}, {{9.375, 
                    17.24137931034483}, 
                    Offset[{2.5, 0.}, {9.375, 17.24137931034483}]}, {{9.375, 
                    34.48275862068966}, 
                    Offset[{2.5, 0.}, {9.375, 34.48275862068966}]}, {{9.375, 
                    43.10344827586207}, 
                    Offset[{2.5, 0.}, {9.375, 43.10344827586207}]}, {{9.375, 
                    51.724137931034484`}, 
                    Offset[{2.5, 0.}, {9.375, 51.724137931034484`}]}, {{9.375,
                     60.3448275862069}, 
                    Offset[{2.5, 0.}, {9.375, 60.3448275862069}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"5.0\"", ShowStringCharacters -> False], 5., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    
                    TemplateBox[{"10.`", "6"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {9.375, -60.3448275862069}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"1.0\"", ShowStringCharacters -> False], 1., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    
                    TemplateBox[{"10.`", "7"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {9.375, -17.24137931034483}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"1.5\"", ShowStringCharacters -> False], 1.5, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    
                    TemplateBox[{"10.`", "7"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {9.375, 25.862068965517242`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"2.0\"", ShowStringCharacters -> False], 2., 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], 
                    
                    TemplateBox[{"10.`", "7"}, "Superscript", SyntaxForm -> 
                    SuperscriptBox]}, "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{7., 0.}, {9.375, 68.96551724137932}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4], 
                    Opacity[0.3]], {
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]], 
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                   StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                 False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]], 
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4], 
                   Opacity[0.3]]}}, StripOnInput -> False]}, {"GraphicsAxes"},
               StripOnInput -> False]}, PlotRangePadding -> Scaled[0.02], 
            PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 150}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                RowBox[{
                  TagBox["ColorDataFunction", "SummaryHead"], "[", 
                  
                  DynamicModuleBox[{
                   Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                   TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"TemperatureMap\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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

                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"TemperatureMap\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Gradient: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    StyleBox[
                    GraphicsBox[{
                    RasterBox[CompressedData["
1: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

                    "], {{0, 0}, {1, 1}}]}, {
                    ImageSize -> 65, BaselinePosition -> Bottom, AspectRatio -> 
                    NCache[
                    Rational[1, 8], 0.125], PlotRange -> {{0, 1}, {0, 1}}}], 
                    Selectable -> False, StripOnInput -> False], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Class: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Gradients\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                ColorDataFunction[
                "TemperatureMap", "Gradients", {0, 1}, Blend[
                 "TemperatureMap", #]& ], Selectable -> False, Editable -> 
                False, SelectWithContents -> True], ",", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "3.2987342122157533`*^6", ",", "2.0679215893613894`*^7"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "150"}], ",", 
           RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
           RowBox[{"OpacityFunction", "\[Rule]", 
             RowBox[{"(", 
               RowBox[{
                 RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"0", "\[LessEqual]", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", "#1"}]}], "<", 
                    FractionBox["1", "6"]}], "||", 
                    RowBox[{
                    FractionBox["7", "18"], "\[LessEqual]", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", "#1"}]}], "<", 
                    FractionBox["4", "9"]}], "||", 
                    RowBox[{
                    FractionBox["1", "2"], "\[LessEqual]", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", "#1"}]}], "<", 
                    FractionBox["11", "18"]}], "||", 
                    RowBox[{
                    FractionBox["7", "9"], "\[LessEqual]", 
                    RowBox[{
                    RowBox[{"-", "1.`"}], "+", 
                    RowBox[{"2.`", " ", "#1"}]}], "<", "1"}]}], ",", "0.01`", 
                    ",", "0.5`", ",", "0"}], "]"}], "&"}], ")"}], "[", 
                   RowBox[{"Rescale", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5`", ",", "1"}], "}"}]}], "]"}], "]"}], "&"}], 
               ")"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.861218532138663*^9, 3.861219176340578*^9, 3.861219261444928*^9, {
   3.8612194099773073`*^9, 3.861219413844054*^9}, 3.9298920680240726`*^9, 
   3.929892831038498*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"5f59b362-32ed-43eb-918e-3e208033f609"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1436, 847},
WindowMargins->{{Automatic, 21}, {Automatic, 33}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9f9190f2-f9ee-484b-a255-a49dc4d69b9c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 152, 2, 46, "Input",ExpressionUUID->"ebc12bde-be16-4fd2-98de-e6bdd672203b"],
Cell[CellGroupData[{
Cell[735, 26, 161, 3, 101, "Section",ExpressionUUID->"bcb2f22d-10da-4c6a-aa54-6eb068354a7d"],
Cell[899, 31, 3774, 82, 1653, "Input",ExpressionUUID->"b13b0758-b78b-4e7e-8e3f-d427d955e51a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4710, 118, 284, 7, 139, "Section",ExpressionUUID->"7e531771-315b-430b-864e-9b12019a6bd9"],
Cell[4997, 127, 21280, 664, 549, "Input",ExpressionUUID->"f75a52d3-2b31-4f7f-9a17-bfd5601af03f"],
Cell[26280, 793, 128, 3, 46, "Input",ExpressionUUID->"ebe6702a-a80b-4638-bbbe-27a08f821ba4"],
Cell[CellGroupData[{
Cell[26433, 800, 626, 12, 78, "Input",ExpressionUUID->"447616ee-d8d3-4277-be66-3faef999ec5d"],
Cell[27062, 814, 360, 5, 52, "Output",ExpressionUUID->"e93594fa-819f-496d-9d48-e6048f4b6342"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27459, 824, 811, 20, 78, "Input",ExpressionUUID->"cceb9883-1de9-44d2-b5d7-38b9959563ab"],
Cell[28273, 846, 4075, 94, 2292, "Output",ExpressionUUID->"68c5fb29-b150-4f98-b6ae-ddfed8f69e0a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32397, 946, 348, 5, 101, "Section",ExpressionUUID->"9d24eca9-8ac3-43f2-840a-6535b23a52f1"],
Cell[CellGroupData[{
Cell[32770, 955, 3177, 70, 233, "Input",ExpressionUUID->"d608ca18-f225-4ee3-b057-b4f893c3ac42"],
Cell[35950, 1027, 1578, 47, 342, "Output",ExpressionUUID->"f7296a45-9a79-472c-b4f0-a97308070518"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37565, 1079, 1680, 46, 295, "Input",ExpressionUUID->"459e937e-6328-45d6-9e4a-dae89f4f041a"],
Cell[39248, 1127, 1688, 55, 125, "Output",ExpressionUUID->"6fb70231-382c-47e7-820c-f729fdb8beab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40973, 1187, 566, 13, 46, "Input",ExpressionUUID->"3f575de4-8519-4d0d-bd7a-9ac2a525dac8"],
Cell[41542, 1202, 1215, 34, 408, "Output",ExpressionUUID->"0295acbc-3cdd-4e1c-ad3d-774a9ec6ac5f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[42806, 1242, 470, 10, 158, "Section",ExpressionUUID->"0b51d112-081b-4dae-bc43-94f8973f6e75"],
Cell[43279, 1254, 3126, 69, 233, "Input",ExpressionUUID->"e2cfcf62-e7a9-4998-95af-d78ac8e5fcfe"],
Cell[CellGroupData[{
Cell[46430, 1327, 1688, 46, 295, "Input",ExpressionUUID->"83d88bac-cdd9-4a2a-8bc5-ad03be73c4b2"],
Cell[48121, 1375, 1669, 54, 125, "Output",ExpressionUUID->"1de8d873-09b2-4908-a47e-2daa595b14bb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49827, 1434, 632, 14, 46, "Input",ExpressionUUID->"70fe3c50-1c33-46ab-a975-f12570b6bd93"],
Cell[50462, 1450, 1606, 42, 363, "Output",ExpressionUUID->"85ecfccf-043c-4029-b3ae-5b2233a6dd22"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[52117, 1498, 275, 8, 101, "Section",ExpressionUUID->"a4b1170e-f0f0-4aaa-94d7-28ace80c083e"],
Cell[CellGroupData[{
Cell[52417, 1510, 2920, 59, 141, "Input",ExpressionUUID->"2061a698-e101-44ef-8f15-57dfc09f26ca"],
Cell[55340, 1571, 98410, 1754, 91, "Output",ExpressionUUID->"aeb07027-8411-4d4b-9772-136d346b8ad3"],
Cell[153753, 3327, 307, 4, 52, "Output",ExpressionUUID->"d6730260-e5b2-466f-9a06-e6cb9ecadf8e"]
}, Open  ]],
Cell[154075, 3334, 167, 3, 53, "Text",ExpressionUUID->"9cfa599f-0cc5-469f-a58e-428387f4126a"],
Cell[CellGroupData[{
Cell[154267, 3341, 213, 3, 46, "Input",ExpressionUUID->"96cbbc58-a909-4b8b-a341-1243d6ebaa6b"],
Cell[154483, 3346, 102136, 1873, 394, "Output",ExpressionUUID->"20b53604-e225-4368-b47d-3eeb082cea76"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256656, 5224, 445, 10, 78, "Input",ExpressionUUID->"821b20c8-9a5a-4f00-8551-d2bc6f5a5bf7"],
Cell[257104, 5236, 507, 9, 84, "Output",ExpressionUUID->"067cea13-d2ed-40b0-913e-17505ae59d4f"],
Cell[257614, 5247, 165139, 3180, 491, "Output",ExpressionUUID->"d26adb3a-d0fe-4ec3-a4c2-ce67f58ee72b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[422790, 8432, 734, 17, 78, "Input",ExpressionUUID->"413d39d3-05d6-41d7-9e54-8f2c4fe88ed1"],
Cell[423527, 8451, 148245, 2802, 94, "Output",ExpressionUUID->"9ebeb750-7610-4bd8-902c-5e6b43d5a2fa"]
}, Open  ]],
Cell[571787, 11256, 266, 5, 53, "Text",ExpressionUUID->"1940a1c3-f303-4a35-a5b7-b526f85be5f4"],
Cell[CellGroupData[{
Cell[572078, 11265, 1819, 42, 233, "Input",ExpressionUUID->"217d551d-66b4-4953-b38a-4a03693ad446"],
Cell[573900, 11309, 45457, 860, 489, "Output",ExpressionUUID->"06741a50-97b4-4140-bcd4-1f8f4cecc1cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[619394, 12174, 607, 16, 46, "Input",ExpressionUUID->"67335ee5-3032-4982-ad95-7469babd4e35"],
Cell[620004, 12192, 5422, 155, 270, "Output",ExpressionUUID->"5ec08f83-fc1b-41bb-9e43-655598e4c2b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[625463, 12352, 243, 4, 46, "Input",ExpressionUUID->"87f8fc4c-e1b5-4169-92fe-c69bc6a6d978"],
Cell[625709, 12358, 403, 10, 52, "Output",ExpressionUUID->"7c28c43a-d60a-4798-b690-a96f4fb8adaa"]
}, Open  ]],
Cell[626127, 12371, 3772, 81, 534, "Input",ExpressionUUID->"e1096f99-9dfb-4c69-a515-407e784028bf"],
Cell[CellGroupData[{
Cell[629924, 12456, 474, 8, 109, "Input",ExpressionUUID->"204735c1-aee2-4b1e-8afa-129929939e16"],
Cell[630401, 12466, 372, 6, 52, "Output",ExpressionUUID->"2da45a37-8780-4fa4-a0e1-91655c834e32"],
Cell[630776, 12474, 426, 8, 52, "Output",ExpressionUUID->"f7babf11-315f-429c-8370-3354b270fba7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[631251, 12488, 280, 8, 158, "Section",ExpressionUUID->"d3566370-4ae0-4723-b6a4-b1fc37125733"],
Cell[CellGroupData[{
Cell[631556, 12500, 1825, 48, 348, "Input",ExpressionUUID->"a63b0cef-482f-4729-a6dc-865b5ac35578"],
Cell[633384, 12550, 1599, 47, 342, "Output",ExpressionUUID->"4c9661e0-bd1a-45ce-94c3-28a7a2714fa5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[635020, 12602, 2830, 59, 481, "Input",ExpressionUUID->"03c825b0-e709-4b0b-a0d0-835036b9dc7f"],
Cell[637853, 12663, 3160, 105, 195, "Output",ExpressionUUID->"a525c639-c2ec-4d0b-9b40-a7d3b85966ed"],
Cell[641016, 12770, 354, 9, 55, "Output",ExpressionUUID->"1fab9af2-b180-449f-a106-26c8994eb41f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[641407, 12784, 3962, 121, 357, "Input",ExpressionUUID->"fa42b697-34ce-492b-992b-1c0a74da0bb1"],
Cell[645372, 12907, 2521, 77, 582, "Output",ExpressionUUID->"f8767440-6c25-422b-9adf-37ed6428d378"]
}, Open  ]],
Cell[CellGroupData[{
Cell[647930, 12989, 483, 10, 46, "Input",ExpressionUUID->"52951e8d-4b2c-4fc6-afd3-375781272ee4"],
Cell[648416, 13001, 281, 5, 52, "Output",ExpressionUUID->"0c76c6c9-ff77-4273-a7ed-0345b3e32ed5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[648734, 13011, 1422, 31, 109, "Input",ExpressionUUID->"ce0e0590-d65a-4013-8fce-27445e37c3bc"],
Cell[650159, 13044, 939, 15, 146, "Output",ExpressionUUID->"8e4e09d3-d9ed-4d20-93ab-f58541dc73da"]
}, Open  ]],
Cell[CellGroupData[{
Cell[651135, 13064, 198, 3, 46, "Input",ExpressionUUID->"14475fee-6a43-49c6-8c3b-5b73c9496a06"],
Cell[651336, 13069, 2985, 100, 146, "Output",ExpressionUUID->"dd056682-b7cb-4fc3-8453-d5bdf9e3cc05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[654358, 13174, 706, 15, 78, "Input",ExpressionUUID->"2a791fd4-631a-45fe-a953-076a8490c67d"],
Cell[655067, 13191, 3247, 79, 582, "Output",ExpressionUUID->"3b9aee8d-dbfa-42ba-8abd-230121888ca9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[658351, 13275, 339, 7, 46, "Input",ExpressionUUID->"8de1a254-f4e4-46e1-bfa6-4dcab2a702c5"],
Cell[658693, 13284, 2243, 60, 239, "Output",ExpressionUUID->"2ffbd40d-2010-4cde-bc37-0d710d9432d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[660973, 13349, 2395, 60, 326, "Input",ExpressionUUID->"d7fc7fbe-b728-4097-b14e-e53bedf205aa"],
Cell[663371, 13411, 44372, 851, 537, "Output",ExpressionUUID->"5f59b362-32ed-43eb-918e-3e208033f609"]
}, Open  ]]
}, Open  ]]
}
]
*)

